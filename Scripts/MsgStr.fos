// FOS Common Sort -1

#define DLGSTR  #(dialogId, strNum)((dialogId.uhash) + (12000 + (strNum)))
#define LOCSTR  #(locPid, strNum)((locPid.uhash) + (strNum))
#define ITEMSTR #(itemPid, strNum)((itemPid.uhash) + (strNum))
#define CRSTR   #(crPid, strNum)((crPid.uhash) + (strNum))

uint MakePropHashForMsg(CritterProperty prop)
{
    string str = "CritterProperty::" + Enum::ToString(prop);
    if (str.endsWith("Base")) {
        return hstring(str.substr(0, str.length() - 4)).uhash;
    }
    return hstring(str).uhash;
}

uint Get(string strName)
{
    return hstring(strName).uhash;
}

#define MSG_GAME        #(str)Game.GetText(TextPackName::Game, str)
#define MSG_TEXT        #(str)Game.GetText(TextPackName::Text, str)
#define IS_MSG_GAME     #(str)Game.IsTextPresent(TextPackName::Game, str)
#define MSG_QUEST       #(str)Game.GetText(TextPackName::Quest, str)
#define MSG_HOLO        #(str)Game.GetText(TextPackName::Holo, str)
#define MSG_LOCATION    #(str)Game.GetText(TextPackName::Locations, str)
#define IS_MSG_LOCATION #(str)Game.IsTextPresent(TextPackName::Locations, str)
#define MSG_HOLO        #(str)Game.GetText(TextPackName::Holo, str)
#define MSG_ITEM        #(str)Game.GetText(TextPackName::Items, str)
// ***************************************************************************************
// ***  SYMBOLS  *************************************************************************
// ***************************************************************************************

#define TEXT_SYMBOL_DOT  (0x2022) // UTF-8
#define TEXT_SYMBOL_UP   (24)
#define TEXT_SYMBOL_DOWN (25)

// ***************************************************************************************
// ***  FOTEXT.MSG  **********************************************************************
// ***************************************************************************************

const int StrDiceThrow = 500; // lex result
const int StrMagicBallYes = 510;
const int StrMagicBallNo = 511;
const int StrCosmeticUse = 520;
const int StrCigarettesSmoke = 530;

// ***************************************************************************************
// ***  FOGAME.MSG  **********************************************************************
// ***************************************************************************************

const int StrVersionInfo = 1;

// Months, days
#define STR_MONTH(m)         (20 + (m))
#define STR_DAY_OF_WEEK(dow) (32 + (dow))

// Misc
#define STR_DOT   (50)
#define STR_COMMA (52)
#define STR_SLASH (53)
const int StrAnd = 54;
#define STR_OR (55)

// Music/Video
#define STR_MUSIC_MAIN_THEME  (80)
#define STR_VIDEO_INTRO_BEGIN (90)
#define STR_VIDEO_INTRO_END   (99)

// Chat
#define STR_CRNORM   (100)
#define STR_CRSHOUT  (102)
#define STR_CREMOTE  (104)
#define STR_CRWHISP  (106)
#define STR_CRSOCIAL (108)
#define STR_MBNORM   (120)
#define STR_MBSHOUT  (122)
#define STR_MBEMOTE  (124)
#define STR_MBWHISP  (126)
#define STR_MBSOCIAL (128)
#define STR_MBRADIO  (130)
#define STR_MBNET    (132)

// FixBoy
const int StrFixParams = 150;
const int StrFixTools = 151;
const int StrFixItems = 152;
const int StrFixPieces = 155;
const int StrFixYouhave = 156;
const int StrFixSuccess = 160;
const int StrFixFail = 161;
#define STR_FIX_TIMEOUT (162)

// Interface
const int StrOptionsLanguage = 200;
const int StrOptionsLanguageRussian = 201;
const int StrOptionsLanguageEnglish = 202;
const int StrOptionsResolution = 210;
const int StrOptionsFullScreen = 211;
const int StrOptionsAlwaysOnTop = 212;
const int StrOptionsMusic = 213;
const int StrOptionsSound = 214;
const int StrOptionsAlwaysRun = 215;
const int StrOptionsCombatMode = 216;
const int StrOptionsCombatModeBoth = 217;
const int StrOptionsCombatModeRt = 218;
const int StrOptionsCombatModeTb = 219;
const int StrOptionsCombatMessages = 220;
const int StrOptionsCombatMessagesFull = 221;
const int StrOptionsCombatMessagesShort = 222;
const int StrOptionsGameServer = 223;
const int StrOptionsProxyType = 224;
const int StrOptionsProxyTypeNone = 225;
const int StrOptionsProxyTypeSocks4 = 226;
const int StrOptionsProxyTypeSocks5 = 227;
const int StrOptionsProxyTypeHttp = 228;
const int StrOptionsProxyServer = 229;
const int StrOptionsProxyAccess = 230;
const int StrOptionsBack = 249;
const int StrOptionsNotAvailable = 250;
const int StrScreenshotSaved = 251;
const int StrScreenshotNotSaved = 252;
const int StrLogSaved = 253;
const int StrLogNotSaved = 254;
const int StrZoom = 260;
#define STR_GAME_PAUSED (265)
const int StrDialogBarter = 275;
const int StrDialogSay = 276;
#define STR_DIALOG_LOG (277)
const int StrBarterOffer = 280;
const int StrBarterTalk = 281;
#define STR_BARTER_END (282)
const int StrMenuoptSavegame = 290;
const int StrMenuoptLoadgame = 291;
const int StrMenuoptOptions = 292;
const int StrMenuoptExit = 293;
const int StrMenuoptResume = 294;
#define STR_LOGIN_NEWGAME  (300)
#define STR_LOGIN_LOADGAME (301)
const int StrLoginPlay = 302;
const int StrLoginRegistration = 303;
const int StrLoginOptions = 304;
const int StrLoginCredits = 305;
const int StrLoginExit = 306;
#define STR_DIALOGBOX_CANCEL       (310)
#define STR_DIALOGBOX_OK           (311)
#define STR_DIALOGBOX_FOLLOW       (312)
#define STR_DIALOGBOX_BARTER_OPEN  (313)
#define STR_DIALOGBOX_BARTER_HIDE  (314)
#define STR_DIALOGBOX_ENCOUNTER_RT (315)
#define STR_DIALOGBOX_ENCOUNTER_TB (316)
#define STR_CHA_NAME_NAME          (320)
#define STR_CHA_NAME_PASS          (321)
const int StrChaOk = 325;
const int StrChaCancel = 326;
const int StrChaPrint = 327;
const int StrChaSkills = 328;
const int StrChaUnspentSp = 329;
const int StrRegUnspentTags = 335;
const int StrRegSpecialSum = 336;
const int StrPerkTake = 340;
const int StrPerkCancel = 341;
#define STR_GMAP_LOCKED (350)
const int StrGlobalMapCoordInfo = 351;
#define STR_GMAP_CUR_LOC_INFO (352)
#define STR_GMAP_LOC_INFO     (353)
const int StrFindpathAimblock = 360;
const int StrSplitTitle = 365;
const int StrSplitAll = 366;
#define STR_TIMER_TITLE (370)
const int StrSayOk = 375;
const int StrSayCancel = 376;
const int StrSayTitle = 377;
const int StrInputBoxWrite = 380;
const int StrInputBoxBack = 381;
const int StrTownViewBack = 385;
const int StrTownViewEnter = 386;
const int StrTownViewContours = 387;
#define STR_SAVE_LOAD_SAVE             (390)
#define STR_SAVE_LOAD_LOAD             (391)
#define STR_SAVE_LOAD_DONE             (392)
#define STR_SAVE_LOAD_BACK             (393)
#define STR_SAVE_LOAD_NEW_RECORD       (394)
#define STR_SAVE_LOAD_TYPE_RECORD_NAME (395)

// Inventory
#define STR_INV_SHORT_SPECIAL #(num)(MsgStr::MakePropHashForMsg(num) + hstring("Inv").uhash)
const int StrInvHp = 407;
const int StrInvAc = 408;
const int StrInvNormal = 409;
const int StrInvLaser = 410;
const int StrInvFire = 411;
const int StrInvPlasma = 412;
const int StrInvExplode = 413;
const int StrInvNoItem = 414;
const int StrInvDmg = 415;
const int StrInvDist = 416;
const int StrInvAmmo = 417;
const int StrInvTotalWeight = 420;
const int StrInvUnarmedDmg = 424;
const int StrOverweight = 425;
const int StrOvervolume = 426;
const int StrInvHasShots = 434;
const int StrItemWeightGramm = 435;
#define STR_ITEM_WEIGHT_FUNT (436)
#define STR_ITEM_COST        (437)
#define STR_ITEM_TRADER_COST (438)
const int StrOverweightTitle = 440;
const int StrHidemodeTitle = 441;
const int StrLevelupTitle = 442;
const int StrPoisonedTitle = 443;
const int StrRadiatedTitle = 444;
const int StrInjuredTitle = 445;
const int StrAddictedTitle = 446;
const int StrTimeoutTitle = 447;
#define STR_OVERVOLUME_TITLE (448)
#define STR_YOU_TURN_TITLE   (449)
#define STR_TURN_BASED_TITLE (450)
const int StrNamedTimeoutTitle = 451;

// Radio
const int StrRadioMain = 455;
const int StrRadioChannel = 456;
const int StrRadioRefresh = 457;
const int StrRadioBroadcastSend = 458;
const int StrRadioBroadcastRecv = 459;
const int StrRadioBroadcast1 = 460;
#define STR_RADIO_BROADCAST2 (461)
#define STR_RADIO_BROADCAST3 (462)
#define STR_RADIO_BROADCAST4 (463)
#define STR_RADIO_BROADCAST5 (464)
const int StrRadioBroadcastSendBegin = 465;
const int StrRadioBroadcastSendEnd = 466;
const int StrRadioBroadcastSendChange = 467;
const int StrRadioBroadcastRecvBegin = 468;
const int StrRadioBroadcastRecvEnd = 469;
const int StrRadioBroadcastRecvChange = 470;
const int StrRadioChannelChanged = 471;
const int StrRadioCantShiftChannel = 474;
const int StrRadioCantShiftSend = 475;
const int StrRadioCantShiftRecv = 476;
const int StrRadioCantShiftBcSend = 477;
const int StrRadioCantShiftBcRecv = 478;
#define STR_RADIO_CANT_SEND (479) // Hardcoded

// Barter
#define STR_BARTER_GOOD_OFFER (480)
#define STR_BARTER_BAD_OFFER  (481)
const int StrBarterGoodOffer = 480;
const int StrBarterBadOffer = 481;
const int StrBarterOverweight = 482;
const int StrBarterOversize = 483;
const int StrBarterSaleItemNotFound = 484;
const int StrBarterBuyItemNotFound = 485;
const int StrNoBarterNow = 486;
#define STR_BARTER_SALE_ITEM_NOT_FOUND (484)
#define STR_BARTER_BUY_ITEM_NOT_FOUND  (485)
#define STR_BARTER_NO_BARTER_NOW       (486)
const int StrBarterNoBarterMode = 487;
#define STR_BARTER_DIALOGBOX   (490)
#define STR_BARTER_OPEN_MODE   (491)
#define STR_BARTER_HIDE_MODE   (492)
#define STR_BARTER_BEGIN_FAIL  (493)
#define STR_BARTER_BEGIN       (495)
#define STR_BARTER_READY_OFFER (496)
const int StrBarterOnlyCash = 497;
const int StrBarterItemNotAllowed = 498;

// Items info
// Deterioration
const int StrDeteriorationProcent = 500;
const int StrDeteriorationService = 501;
const int StrDeteriorationServiceExt = 502;
const int StrDeteriorationBrokenLow = 503;
const int StrDeteriorationBrokenNorm = 504;
const int StrDeteriorationBrokenHigh = 505;
const int StrDeteriorationNoResc = 506;
const int StrDeteriorationBrokenCount = 507;
#define STR_DETERIORATION_SERVICE_ALREADY (510)
const int StrDeteriorationServiceSucc = 511;
const int StrDeteriorationServiceFail = 512;
const int StrDeteriorationRepairSucc = 515;
const int StrDeteriorationRepairFail = 516;
#define STR_DETERIORATION_ARMOR_BROKEN (520)
const int StrDeteriorationWeaponBroken = 521;
// Key
const int StrInvKeyNumber = 550;
// Car
#define STR_INV_CAR_NUMBER (560)
const int StrInvCarFuel = 561;
const int StrInvCarDeterioration = 562;

// PipBoy
#define STR_QUEST_NAME   #(index)(MsgStr::MakePropHashForMsg(index) + hstring("QName").uhash)
#define STR_QUEST_DESC   #(index)(MsgStr::MakePropHashForMsg(index) + hstring("QDesc").uhash)
#define STR_QUEST_STATUS #(index, value)(MsgStr::MakePropHashForMsg(index) + value)

const int StrPipStatus = 700;
const int StrPipReplicationMoney = 701;
const int StrPipReplicationMoneyVal = 702;
const int StrPipReplicationCost = 703;
const int StrPipReplicationCostVal = 704;
const int StrPipReplicationCount = 705;
const int StrPipReplicationCountVal = 706;
const int StrPipQuests = 720;
const int StrPipScores = 723;
#define STR_PIP_MAPS (725)
const int StrPipInfo = 730;
// Timeouts
const int StrPipTimeouts = 740;
const int StrTimeoutSeconds = 741;
#define STR_TIMEOUT_MINUTES (742)
const int StrTimeoutTransferWait = 790;
const int StrTimeoutBattleWait = 791;
const int StrTimeoutSneakWait = 792;
// Automaps
#define STR_AUTOMAP_LOADING       (795)
#define STR_AUTOMAP_LOADING_ERROR (796)

// Dialog
#define STR_DIALOG_CANT_TALK_WITH_MOB  (800)
#define STR_DIALOG_NPC_NOT_LIFE        (801)
#define STR_DIALOG_NPC_BUSY            (802)
#define STR_DIALOG_DIST_TOO_LONG       (803)
#define STR_DIALOG_NO_DIALOGS          (804)
#define STR_DIALOG_MANY_TALKERS        (805)
#define STR_DIALOG_PRE_INST_FAIL       (806)
#define STR_DIALOG_FROM_LINK_NOT_FOUND (807)
#define STR_DIALOG_COMPILE_FAIL        (808)
#define STR_DIALOG_NPC_NOT_FOUND       (809)
#define STR_DIALOG_ANSWER_NULLPTR      (810)

// Global
#define STR_GLOBAL_LOCATION_NOT_FOUND  (900)
#define STR_GLOBAL_LOCATION_REMOVED    (901)
#define STR_GLOBAL_PLACE_NOT_FOUND     (902)
#define STR_GLOBAL_CAR_PLACE_NOT_FOUND (903)
#define STR_GLOBAL_PLAYERS_OVERFLOW    (904)
#define STR_FOLLOW_PREP                (950)
#define STR_FOLLOW_FORCE               (952)
#define STR_FOLLOW_UNKNOWN_CRNAME      (970)
#define STR_FOLLOW_GMNAME              (972)

// Net
#define STR_NET_WRONG_LOGIN     (1001)
#define STR_NET_WRONG_PASS      (1002)
#define STR_NET_ACCOUNT_ALREADY (1003)
#define STR_NET_PLAYER_IN_GAME  (1004)
const int StrNetWrongSpecial = 1005;
#define STR_NET_REG_SUCCESS (1006)
#define STR_NET_CONNECTION  (1007)
#define STR_NET_CONN_ERROR  (1008)
const int StrNetLoginpassWrong = 1009;
#define STR_NET_CONN_SUCCESS      (1010)
#define STR_NET_HEXES_BUSY        (1012)
#define STR_NET_DISCONN_BY_DEMAND (1013)
#define STR_NET_WRONG_NAME        (1014)
#define STR_NET_WRONG_CASES       (1015)
#define STR_NET_WRONG_GENDER      (1016)
#define STR_NET_WRONG_AGE         (1017)
#define STR_NET_CONN_FAIL         (1018)
#define STR_NET_WRONG_DATA        (1019)
#define STR_NET_STARTLOC_FAIL     (1020)
#define STR_NET_STARTMAP_FAIL     (1021)
#define STR_NET_STARTCOORD_FAIL   (1022)
#define STR_NET_BD_ERROR          (1023)
#define STR_NET_WRONG_NETPROTO    (1024)
#define STR_NET_DATATRANS_ERR     (1025)
#define STR_NET_NETMSG_ERR        (1026)
#define STR_NET_SETPROTO_ERR      (1027)
#define STR_NET_LOGINOK           (1028)
const int StrNetWrongTagskill = 1029;
const int StrNetDifferentLang = 1030;
const int StrNetManySymbols = 1031;
const int StrNetBeginEndSpaces = 1032;
const int StrNetTwoSpace = 1033;
#define STR_NET_BANNED           (1034)
#define STR_NET_NAME_WRONG_CHARS (1035)
const int StrNetPassWrongChars = 1036;
#define STR_NET_FAIL_TO_LOAD_IFACE     (1037)
#define STR_NET_FAIL_RUN_START_SCRIPT  (1038)
#define STR_NET_LANGUAGE_NOT_SUPPORTED (1039)
const int StrInvalidResolution = 1040;
#define STR_NET_KNOCK_KNOCK          (1041)
#define STR_NET_REGISTRATION_IP_WAIT (1042)
#define STR_NET_BANNED_IP            (1043)
#define STR_NET_UID_FAIL             (1044)
#define STR_NET_TIME_LEFT            (1045)
#define STR_NET_BAN                  (1046)
#define STR_NET_BAN_REASON           (1047)
#define STR_NET_LOGIN_SCRIPT_FAIL    (1048)
const int StrNetPermanentDeath = 1049;

#define STR_SP_SAVE_SUCCESS     (1070)
#define STR_SP_SAVE_FAIL        (1071)
#define STR_SP_LOAD_SUCCESS     (1072)
#define STR_SP_LOAD_FAIL        (1073)
#define STR_SP_NEW_GAME_SUCCESS (1074)
#define STR_SP_NEW_GAME_FAIL    (1075)

// Parameters
#define STR_PARAM_NAME                #(prop)(MsgStr::MakePropHashForMsg(prop) + hstring("Name").uhash)
#define STR_PARAM_DESC                #(prop)(MsgStr::MakePropHashForMsg(prop) + hstring("Desc").uhash)
#define STR_PARAM_NAME_SHORT          #(prop)(MsgStr::MakePropHashForMsg(prop) + hstring("ShortName").uhash)
#define STR_PARAM_PIC                 #(prop)(MsgStr::MakePropHashForMsg(prop) + hstring("Pic").uhash)
#define STR_KILL_NAME                 #(index)(102600 + (index) * 10 + 1)
#define STR_KILL_DESC                 #(index)(102600 + (index) * 10 + 2)
#define STR_ADDICTION_NAME            #(index)(104700 + (index) * 10 + 1)
#define STR_ADDICTION_DESC            #(index)(104700 + (index) * 10 + 2)
#define STR_ADDICTION_PIC             #(index)(104700 + (index) * 10 + 3)
#define STR_REPUTATION_NAME           #(index)(105700 + (index) * 10 + 1)
#define STR_STAT_LEVEL                #(val)((val) > 10 ? (2310) : ((val) < 1 ? (2301) : 2300 + (val)))
#define STR_STAT_LEVEL_ABB            #(val)((val) > 10 ? (2320) : ((val) < 1 ? (2311) : 2310 + (val)))
#define STR_NEXT_LEVEL_NAME           (4001)
#define STR_UNSPENT_SKILL_POINTS_NAME (4002)
#define STR_LEVEL_NAME                (4003)
#define STR_EXPERIENCE_NAME           (4004)
#define STR_REPUTATIONS_NAME          (4005)
#define STR_KARMA_NAME                (4006)
const int StrPerksName = 4007;
const int StrKillsName = 4008;
const int StrTraitsName = 4011;
const int StrMaleName = 4107;
const int StrFemaleName = 4108;
#define STR_NEXT_LEVEL_DESC           (4051)
#define STR_UNSPENT_SKILL_POINTS_DESC (4052)
#define STR_LEVEL_DESC                (4053)
#define STR_EXPERIENCE_DESC           (4054)
#define STR_REPUTATION_DESC           (4055)
#define STR_KARMA_DESC                (4056)
const int StrPerksDescr = 4057;
const int StrPerksSkilldex = 4067;
const int StrKillsDesc = 4058;
const int StrKillsSkillDex = 4068;
const int StrTraitsDescr = 4061;
const int StrTraitsSkilldex = 4071;

const int StrGainLevelup = 4090;
const int StrGainExperience = 4091;

const int StrSwitchPerksName = 4109;
const int StrSwitchKarmaName = 4110;
const int StrSwitchKillsName = 4111;

// Skills
const int StrSkillNoressurect = 3400;
const int StrSkillWeariness = 3401;
const int StrSkillNoneedFirstaid = 3402;
const int StrSkillNoneedDoctor = 3403;
const int StrSkillNofirstaidNeeddoctor = 3404;
const int StrSkillNodoctorNeedfirstaid = 3405;
#define STR_SKILL_HEAL_DMG        #(dmg)(3410 + (dmg))
#define STR_SKILL_NOHEAL_DMG      #(dmg)(3420 + (dmg))
#define STR_SKILL_STEAL_TRIED_GET (3430)
#define STR_SKILL_STEAL_TRIED_PUT (3431)
const int StrSkillLockpickFail = 3440;
const int StrSkillTrapsSetFail = 3441;
const int StrSkillTrapsSetSucc = 3442;
const int StrSkillTrapsFail = 3443;
const int StrSkillTrapsSucc = 3444;
#define STR_SKILL_SNEAK_VISIBLE (3445)
const int StrNoStealCritter = 3446;

// Skilldex
#define STR_SKILLDEX_NAME   (3340)
#define STR_SKILLDEX_CANCEL (3341)

// Character
const int StrChaLevel = 4113;
const int StrChaExperience = 4114;
const int StrChaNextLevel = 4115;

// Damage
#define STR_DMG_LIFE (4250)

// Karma, reputation
const int StrKarmaGenGenName = 6000;
const int StrKarmaGenCaption = 6001;
const int StrKarmaGenDescription = 6001;

#define STR_KARMA_LEVEL_VAL     #(num)(hstring("KarmaLevel::" + Enum::ToString(num)).uhash + hstring("MinValue").uhash)
#define STR_KARMA_LEVEL_NAME      #(num)(hstring("KarmaLevel::" + Enum::ToString(num)).uhash + hstring("Name").uhash)
#define STR_KARMA_LEVEL_SKILLDEX  #(num)(hstring("KarmaLevel::" + Enum::ToString(num)).uhash + hstring("Pic").uhash)

const int StrTownrepTitleName = 6405;
const int StrTownrepTitleDesc = 6406;
const int StrTownrepTitlePic = 6407;

#define STR_REPUTATION_LEVEL_DESC     #(num)(hstring("ReputationLevel::" + Enum::ToString(num)).uhash + hstring("Desc").uhash)
#define STR_REPUTATION_LEVEL_NAME      #(num)(hstring("ReputationLevel::" + Enum::ToString(num)).uhash + hstring("Name").uhash)
#define STR_REPUTATION_LEVEL_SKILLDEX  #(num)(hstring("ReputationLevel::" + Enum::ToString(num)).uhash + hstring("Pic").uhash)

#define STR_TOWNREP_RATIO_NAME \
    #(val)(6500 + \
           ((val) >= Settings.ReputationLoved ? \
                0 : \
                ((val) >= Settings.ReputationLiked ? 1 : \
                                                     ((val) >= Settings.ReputationAccepted ? \
                                                          2 : \
                                                          ((val) >= Settings.ReputationNeutral ? \
                                                               3 : \
                                                               ((val) >= Settings.ReputationAntipathy ? 4 : ((val) >= Settings.ReputationHated ? 5 : 6)))))))
#define STR_TOWNREP_RATIO_DESC \
    #(val)(6550 + \
           ((val) >= Settings.ReputationLoved ? \
                0 : \
                ((val) >= Settings.ReputationLiked ? 1 : \
                                                     ((val) >= Settings.ReputationAccepted ? \
                                                          2 : \
                                                          ((val) >= Settings.ReputationNeutral ? \
                                                               3 : \
                                                               ((val) >= Settings.ReputationAntipathy ? 4 : ((val) >= Settings.ReputationHated ? 5 : 6)))))))

const int StrAddictTitleName = 6900;
const int StrAddictTitleDesc = 6901;
const int StrAddictTitlePic= 6902;

// Items
const int StrItemLook = 10000;
#define STR_ITEM_LOOK_INFO (10001)
const int StrItemLookNothing = 10010;
#define STR_ITEM_NOT_FOUND (10020)
const int StrItemLockerNeedKey = 10100;
const int StrUseNothing = 10202;
const int StrSolarScorcherNoLight = 10240;
const int StrCarFuelTankFill = 10250;
const int StrCarFuelTankFull = 10251;
const int StrCarRepairSuccess = 10252;
const int StrCarRepairNoNeed = 10253;
const int StrCarFuelNotSupported = 10254;
const int StrCarFuelEmpty = 10255;
const int StrCarBroken = 10256;
const int StrCarCritOverload = 10257;
const int StrCritBadCharisma = 10258;
const int StrCantKickOnWater = 10259;
// Drugs
const int StrDrugStatGain = 10300;
const int StrDrugStatLose = 10301;
const int StrDrugAddictionEnd = 10302;
#define STR_DRUG_DEAD (10303)
const int StrDrugNothingHappens = 10304;
#define STR_DRUG_PARISH (10305)
const int StrDrugUseOnSucc = 10306;
const int StrDrugUseOnFail = 10307;
// Books
#define STR_BOOK_READ_SUCCESS (10450)
const int StrBookReadFail = 10451;
const int StrBookReadScience = 10452;
const int StrBookReadRepair = 10453;
const int StrBookReadFisrtAid = 10454;
const int StrBookReadSmallGuns = 10455;
const int StrBookReadEnergyWeapons = 10456;
const int StrBookReadOutdoorsman = 10457;
// Grave
const int StrGraveUncovered = 10550;
const int StrGraveCovered = 10551;

// Caliber
#define STR_CALIBER #(num)(10900 + (num))

// Critters
#define STR_CRIT_LOOK1      #(gen)(11000 + (gen) * 1000)
#define STR_CRIT_LOOK1_SELF #(gen)(11001 + (gen) * 1000)
#define STR_CRIT_LOOK2      #(gen)(11002 + (gen) * 1000)
#define STR_CRIT_LOOK3      #(gen)(11003 + (gen) * 1000)
#define STR_CRIT_LOOK_SELF  #(gen)(11005 + (gen) * 1000)
const int StrCritLookLife = 11010;
const int StrCritLookKo = 11011;
const int StrCritLookDead = 11012;
#define STR_CRIT_LOOK_CRITICAL_DEAD (11013)
const int StrCritLookNothing = 11014;
#define STR_CRIT_LOOK_AGE  #(gen, age)(11100 + ((age) > 99 ? 99 : (age)) + (gen) * 1000)
#define STR_CRIT_LOOK_COND #(gen, main, ext)(11200 + (main) * 10 + (ext) + (gen) * 1000)
#define STR_CRIT_LOOK_SPEC #(gen, num, val)(11300 + (num) * 10 + ((val) > 10 ? 10 : (val)) + (gen) * 1000)
#define STR_CRIT_LOOK_DMG  #(gen, dmg)(11400 + (dmg) + (gen) * 1000)
#define STR_CRIT_LOOK_PERK #(gen, perk)(11500 + (perk) + (gen) * 1000)
// Fallout system
#define STR_CRIT_LOOK_WHO   #(gender)(12500 + (gender))
#define STR_CRIT_LOOK_STATE #(num)(12510 + (num))
#define STR_CRIT_LOOK_LIMBS #(gender, unhurt)(12520 + (gender) * 2 + (unhurt ? 1 : 0))
#define STR_CRIT_LOOK_HP    #(gender)(12530 + (gender))
const int StrCritLookWeap = 12540;
const int StrCritLookWeapAmmo = 12541;
const int StrCritLookMisc = 12542;

const int StrCritterCantMove = 12600;

// Scores
#define STR_SCORES_TITLE #(score)(13000 + (score) * 10)
#define STR_SCORES_NAME  #(score)(13000 + (score) * 10 + 1)

// 3d attributes
#define STR_BODY_TYPE   #(type)(150100 + (type))
#define STR_SKIN_COLOR  #(color)(151000 + (color))
#define STR_HAIR_COLOR  #(color)(151200 + (color))
#define STR_HAIR_MALE   #(type)(152000 + (type) * 10)
#define STR_HAIR_FEMALE #(type)(152200 + (type) * 10)
#define STR_MUSTACHE    #(type)(153000 + (type) * 10)
#define STR_PONYTAIL    #(type)(154000 + (type) * 10)
#define STR_BEARD       #(type)(155000 + (type) * 10)

// Intellect words
#define STR_INTELLECT_WORDS   (1999000000)
#define STR_INTELLECT_SYMBOLS (1999000001)

// Help
const int StrGameHelp = 2000000000;

// Credits
const int StrGameCreditsSpeed = 2000001000;
const int StrGameCredits = 2000001010;
#define STR_GAME_CREDITS_EXT (2000001020)

// ***************************************************************************************
// ***  FOOBJ.MSG  ***********************************************************************
// ***************************************************************************************

#define STR_PROTO_ITEM_NAME #(proto)(ITEMSTR(proto, 0))
#define STR_ITEM_NAME       #(item)(ITEMSTR(item.ProtoId, 0 + item.Info))
#define STR_ITEM_INFO       #(item)(ITEMSTR(item.ProtoId, hstring("Desc").uhash + item.Info))

// ***************************************************************************************
// ***  FOLOCATIONS.MSG  *****************************************************************
// ***************************************************************************************

// Global map info
#define STR_LOC_NAME          #(pid)LOCSTR(pid, 0)
#define STR_LOC_INFO          #(pid)LOCSTR(pid, hstring("Desc").uhash)
#define STR_LOC_PIC           #(pid)LOCSTR(pid, 5)
#define STR_LOC_LABEL_PIC     #(pid)LOCSTR(pid, 6)
#define STR_LOC_MAP_NAME      #(pid, mapInd)LOCSTR(pid, 1000 + (mapInd) * 10 + 0)
#define STR_LOC_MAP_MUSIC     #(pid, mapInd)LOCSTR(pid, 1000 + (mapInd) * 10 + 1)
#define STR_LOC_MAP_AMBIENT   #(pid, mapInd)LOCSTR(pid, 1000 + (mapInd) * 10 + 2)
#define STR_LOC_ENTRANCE_NAME #(pid, ent)LOCSTR(pid, 2000 + (ent) * 10 + 0)
#define STR_LOC_ENTRANCE_PICX #(pid, ent)LOCSTR(pid, 2000 + (ent) * 10 + 1)
#define STR_LOC_ENTRANCE_PICY #(pid, ent)LOCSTR(pid, 2000 + (ent) * 10 + 2)

// ***************************************************************************************
// ***  FODLG.MSG  ***********************************************************************
// ***************************************************************************************

#define STR_NPC_PROTO_NAME              #(pid)(CRSTR(pid, 0))
#define STR_NPC_PROTO_DESC              #(pid)(CRSTR(pid, hstring("Desc").uhash))
#define STR_NPC_NAME                    #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 10 : STR_NPC_PROTO_NAME(pid))
#define STR_NPC_NAME_DLG                #(dlg)((dlg.hash) + 10)
#define STR_NPC_AVATAR                  #(dlg)((dlg.hash) != 0 ? (dlg.hash) + 11 : 0)
#define STR_NPC_INFO_LIFE               #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 20 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_FULL_INFO_LIFE          #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 21 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_INFO_KO                 #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 22 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_FULL_INFO_KO            #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 23 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_INFO_DEAD               #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 24 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_FULL_INFO_DEAD          #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 25 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_INFO_CRITICAL_DEAD      #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 26 : STR_NPC_PROTO_DESC(pid))
#define STR_NPC_FULL_INFO_CRITICAL_DEAD #(dlg, pid)((dlg.hash) != 0 ? (dlg.hash) + 27 : STR_NPC_PROTO_DESC(pid))

// ***************************************************************************************
// ***  FOQUEST.MSG  *********************************************************************
// ***************************************************************************************

const int StrQuestNumber = 4;
const int StrQuestProcess = 5;
#define STR_QUEST_MAP  #(num)((num) * 1000 + 101)
#define STR_QUEST_INFO #(num)((num) * 1000 + 102)

// ***************************************************************************************
// ***  FOHOLO.MSG, FOUSERHOLO.MSG  ******************************************************
// ***************************************************************************************

const int StrHoloReadSucc = 1;
const int StrHoloReadFail = 2;
const int StrHoloReadAlready = 3;
const int StrHoloReadMemoryFull = 4;
const int StrHoloEraseSucc = 5;
const int StrHoloEraseFail = 6;
const int StrHoloWriteSucc = 7;
const int StrHoloWriteFail = 8;
#define STR_HOLO_INFO_NAME #(num)((num) * 10)
#define STR_HOLO_INFO_DESC #(num)((num) * 10 + 1)

// ***************************************************************************************
// ***  FOCOMBAT.MSG  ********************************************************************
// ***************************************************************************************

const int StrCombatNeedAp = 100;
#define STR_COMBAT_NEED_OUT_OF_AMMO  (101)
#define STR_COMBAT_NEED_OUT_OF_RANGE (102)
#define STR_COMBAT_NEED_CANNOT_END   (103)
#define STR_COMBAT_NEED_AIM_BLOCKED  (104)
const int StrCombatNeedDmgTwoArms = 105;
const int StrCombatNeedDmgArm = 106;
#define STR_COMBAT_NEED_LOW_STRENGTH (107)

// ***************************************************************************************
// ***  FOINTERNAL.MSG  ******************************************************************
// ***************************************************************************************

#define STR_INTERNAL_SCRIPT_MODULES (100)
#define STR_INTERNAL_SCRIPT_DLLS    (50000)
#define STR_INTERNAL_SCRIPT_PRAGMAS (90000)
#define STR_INTERNAL_SCRIPT_VERSION (99998)
#define STR_INTERNAL_SCRIPT_CONFIG  (99999)
#define STR_INTERNAL_CRTYPE         #(num)(100000 + (num))

// ***************************************************************************************
// ***************************************************************************************
// ***************************************************************************************
