// FOS Server
// Name: replication_trader
// Author: Sufir
// Edited by:

tick_t FreeEquipTime;
ident FreeEquipPlayer;

void r_GiveEquip(Critter player, Critter npc)
{
    GiveArmor(player);
    GiveDrugs(player);
    GiveWeapon(player);
    GiveAnything(player);

    // Устанавливаем таймаут. Бесплатное снаряжение дается не чаще двух раз в сутки и не дается два раза подряд одному игроку.
    FreeEquipTime = Game.GetFullSecond();
    FreeEquipPlayer = player.Id;
}

bool d_EquipAllow(Critter player, Critter npc)
{
    // Если прошло 6 часов и не этот игрок в последний раз просил снаряжение, даем ему комплект.
    if (FreeEquipTime + (60 * 60 * 6) < Game.GetFullSecond() && player.Id != FreeEquipPlayer) {
        return true;
        // Если прошло 24 часов и этот игрок в последний раз просил снаряжение, даем ему ещё один комплект.
    }
    else if (FreeEquipTime + (60 * 60 * 24) < Game.GetFullSecond() && player.Id == FreeEquipPlayer) {
        return true;
    }
    return false;
}

void GiveWeapon(Critter player)
{
    uint roll = Game.Random(0, player.Luck) + player.SkillSpeech / 10;
    hstring itemPid = Content::Item::knife;
    if (roll > 0 && roll <= 10) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::knife;
        }
        else {
            itemPid = Content::Item::spiked_knuckles;
        }
    }
    if (roll > 10 && roll <= 15) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::shotgun;
            player.AddItem(Content::Item::shotgun_shells, Game.Random(0, player.Luck * 2));
        }
        else {
            itemPid = Content::Item::_10mm_pistol;
            player.AddItem(Content::Item::_10mm_jhp, Game.Random(0, player.Luck * 2));
        }
    }
    if (roll > 15 && roll <= 20) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::hunting_rifle;
            player.AddItem(Content::Item::_223_fmj, Game.Random(0, player.Luck * 2));
        }
        else {
            itemPid = Content::Item::desert_eagle;
            player.AddItem(Content::Item::_44_magnum_jhp, Game.Random(0, player.Luck * 2));
        }
    }
    if (roll > 20) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::_223_pistol;
            player.AddItem(Content::Item::_223_fmj, Game.Random(0, player.Luck * 2));
        }
        else {
            itemPid = Content::Item::combat_shotgun;
            player.AddItem(Content::Item::shotgun_shells, Game.Random(0, player.Luck * 2));
        }
    }

    Item Weapon = player.AddItem(itemPid, 1);
    if (!valid(Weapon)) {
        return;
    }

    Weapon.Cost = roll;

    if (Weapon.Deteriorable) {
        Repair::SetDeterioration(Weapon, Game.Random(9, 99 - roll));
        switch (Game.Random(0, 8)) {
        case 0:
            Weapon.BrokenLowBroken = true;
            break;
        case 1:
            Weapon.BrokenNormBroken = true;
            break;
        case 2:
            Weapon.BrokenHighBroken = true;
            break;
        case 3:
            Weapon.BrokenNotresc = true;
            break;
        case 4:
            Weapon.IsBroken = true;
            break;
        case 5:
            Weapon.BrokenService = true;
            break;
        case 6:
            Weapon.BrokenServiceExt = true;
            break;
        case 7:
            Weapon.BrokenEternal = true;
            break;
        case 8:
            break;
        default:
            break;
        }
    }
}

void GiveArmor(Critter player)
{
    uint roll = Game.Random(0, player.Luck) + player.SkillSpeech / 10;
    hstring itemPid = Content::Item::leather_jacket;
    if (roll > 0 && roll <= 10) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::leather_jacket;
        }
        else {
            itemPid = Content::Item::purple_robe;
        }
    }
    if (roll > 10 && roll <= 15) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::leather_armor;
        }
        else {
            itemPid = Content::Item::leather_jacket;
        }
    }
    if (roll > 15 && roll <= 30) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::metal_armor;
        }
        else {
            itemPid = Content::Item::leather_armor;
        }
    }
    if (roll > 30) {
        if (Game.Random(0, 1) == 0) {
            itemPid = Content::Item::metal_armor;
        }
        else {
            itemPid = Content::Item::combat_armor;
        }
    }

    Item Armor = player.AddItem(itemPid, 1);
    if (!valid(Armor)) {
        return;
    }

    Armor.Cost = roll;

    if (Armor.Deteriorable) {
        Repair::SetDeterioration(Armor, Game.Random(19, 99 - roll));
        switch (Game.Random(0, 8)) {
        case 0:
            Armor.BrokenLowBroken = true;
            break;
        case 1:
            Armor.BrokenNormBroken = true;
            break;
        case 2:
            Armor.BrokenHighBroken = true;
            break;
        case 3:
            Armor.BrokenNotresc = true;
            break;
        case 4:
            Armor.IsBroken = true;
            break;
        case 5:
            Armor.BrokenService = true;
            break;
        case 6:
            Armor.BrokenServiceExt = true;
            break;
        case 7:
            Armor.BrokenEternal = true;
            break;
        case 8:
            break;
        default:
            break;
        }
    }
}

void GiveDrugs(Critter player)
{
    switch (Game.Random(0, player.Luck)) {
    case 0:
        break;
    case 1:
        player.AddItem(Content::Item::nuka_cola, 1);
        break;
    case 2:
        player.AddItem(Content::Item::bottle_full, 1);
        break;
    case 3:
        player.AddItem(Content::Item::antidote, 1);
        break;
    case 4:
        player.AddItem(Content::Item::stimpak, 1);
        break;
    case 5:
        player.AddItem(Content::Item::stimpak, 2);
        break;
    case 6:
        player.AddItem(Content::Item::buffout, 1);
        break;
    case 7:
        player.AddItem(Content::Item::rad_x, 1);
        break;
    case 8:
        player.AddItem(Content::Item::super_stimpak, 1);
        break;
    case 9:
        player.AddItem(Content::Item::radaway, 1);
        break;
    case 10:
        player.AddItem(Content::Item::mentats, 1);
        break;
    default:
        break;
    }
}

void GiveAnything(Critter player)
{
    if (player.SkillSpeech > 90) {
        switch (Game.Random(0, (player.Luck + player.Charisma) / 2)) {
        case 0:
            break;
        case 1:
            player.AddItem(Content::Item::nuka_cola, 1);
            break;
        case 2:
            player.AddItem(Content::Item::bottle_full, 1);
            break;
        case 3:
            player.AddItem(Content::Item::lighter, 1);
            break;
        case 4:
            player.AddItem(Content::Item::rope, 1);
            break;
        case 5:
            player.AddItem(Content::Item::lockpicks, 1);
            break;
        case 6:
            player.AddItem(Content::Item::first_aid_kit, 1);
            break;
        case 7:
            player.AddItem(Content::Item::first_aid_book, 1);
            break;
        case 8:
            player.AddItem(Content::Item::scout_handbook, 1);
            break;
        case 9:
            player.AddItem(Content::Item::psycho, 1);
            break;
        case 10:
            player.AddItem(Content::Item::jet_antidote, 1);
            break;
        default:
            break;
        }
    }
}
