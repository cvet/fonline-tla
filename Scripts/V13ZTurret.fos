// FOS Server
// Author: Sufir

void _TurretInit(Critter turret, bool firstTime)
{
    turret.IsNoSupply = true;
    turret.OnMessage.Subscribe(_TurretGetMessage);
    turret.OnAttacked.Subscribe(_FriendlyFire);
    turret.OnAttack.Subscribe(_FriendlyFire2);
}

void _TurretGetMessage(Critter turret, Critter fromCr, int message, any value)
{
    if (!turret.IsAlive()) {
        return;
    }

    if (message == V13ZGuard::MsgV13GuardAlarm) {
        Critter player = Game.GetCritter(value);
        if (!valid(player)) {
            return;
        }
        if (!player.IsOwnedByPlayer()) {
            return;
        }
        NpcPlanes::AddAttackPlane(turret, 0, player.Id, int(float(player.CharismaBase) * 1.5));
        // EnemyStack::AddEnemyToStack( turret,  player.Id  );
    }
    else if (message == V13ZGuard::MsgV13GuardKill) {
        Critter player = Game.GetCritter(value);
        if (!valid(player)) {
            return;
        }
        if (!player.IsOwnedByPlayer()) {
            return;
        }
        NpcPlanes::AddAttackPlane(turret, 0, player.Id);
    }
}
bool _FriendlyFire2(Critter critter, Critter target, Item weapon, uint8 weaponMode, ProtoItem ammo)
{
    return _FriendlyFire(critter, target);
}
// Если NPC атакован одним из "своих" - не атакуем его.
bool _FriendlyFire(Critter guardian, Critter attacker)
{
    if (guardian.IsNpc() && attacker.IsNpc()) {
        if (guardian.NpcRole == V13ZGuard::RoleGuardian || guardian.NpcRole == V13ZGuard::RoleSoldier) {
            guardian.Wait(5000);
            attacker.Wait(5000);
            if (EnemyStack::CheckEnemyInStack(guardian, attacker.Id)) {
                EnemyStack::EraseEnemyFromStack(guardian, attacker.Id);
            }
            if (EnemyStack::CheckEnemyInStack(attacker, guardian.Id)) {
                EnemyStack::EraseEnemyFromStack(attacker, guardian.Id);
            }
            NpcPlanes::EraseAttackPlane(attacker, guardian.Id);
            NpcPlanes::EraseAttackPlane(guardian, attacker.Id);
            return true;
        }
    }
    return false;
}
