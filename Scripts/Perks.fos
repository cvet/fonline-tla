// FOS Server Client
// Author: cvet

bool PerkCheck(Critter cr, CritterProperty perk)
{
    // clang-format off
#define PROCESS_PERK0 #(perk, range, level) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level)
#define PROCESS_PERK1 #(perk, range, level, demand0) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level && demand0)
#define PROCESS_PERK2 #(perk, range, level, demand0, demand1) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level && demand0 && demand1)
#define PROCESS_PERK3 \
#(perk, range, level, demand0, demand1, demand2) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level && demand0 && demand1 && demand2)
#define PROCESS_PERK4 \
#(perk, range, level, demand0, demand1, demand2, demand3) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level && demand0 && \
                                                                                                   demand1 && demand2 && demand3)
#define PROCESS_PERK5 \
#(perk, range, level, demand0, demand1, demand2, demand3, demand4) case CritterProperty::perk : return (cr.perk <range && cr.Level >= level && demand0 && \
                                                                                                            demand1 && demand2 && demand3 && demand4)
    switch (perk) {
        // Perks
        PROCESS_PERK1( PerkAwareness,           1,  3, cr.PerceptionBase >= 5    );
        PROCESS_PERK1( PerkBonusHthAttacks,   1, 15, cr.AgilityBase >= 6       );
        PROCESS_PERK2( PerkBonusHthDamage,    3,  3, cr.AgilityBase >= 6,      cr.StrengthBase >= 6      );
        PROCESS_PERK1( PerkBonusMove,          2,  6, cr.AgilityBase >= 5       );
        PROCESS_PERK2( PerkBonusRangedDamage, 2,  6, cr.AgilityBase >= 6,      cr.LuckBase >= 6          );
        PROCESS_PERK3( PerkBonusRateOfFire,  1, 15, cr.AgilityBase >= 7,      cr.IntellectBase >= 6,    cr.PerceptionBase >= 6 );
        PROCESS_PERK1( PerkEarlierSequence,    3,  3, cr.PerceptionBase >= 6    );
        PROCESS_PERK1( PerkFasterHealing,      3,  3, cr.EnduranceBase >= 6     );
        PROCESS_PERK1( PerkMoreCriticals,      3,  6, cr.LuckBase >= 6          );
        PROCESS_PERK2( PerkRadResistance,      2,  6, cr.EnduranceBase >= 6,    cr.IntellectBase >= 4     );
        PROCESS_PERK2( PerkToughness,           3,  3, cr.EnduranceBase >= 6,    cr.LuckBase >= 6          );
        PROCESS_PERK2( PerkStrongBack,         3,  3, cr.StrengthBase >= 6,     cr.EnduranceBase >= 6     );
        PROCESS_PERK2( PerkSharpshooter,        1,  9, cr.PerceptionBase >= 7,   cr.IntellectBase >= 6     );
        PROCESS_PERK2( PerkSilentRunning,      1,  6, cr.AgilityBase >= 6,      cr.SkillSneak >= 50        );
        PROCESS_PERK3( PerkSurvivalist,         3,  3, cr.EnduranceBase >= 6,    cr.IntellectBase >= 6,    cr.SkillOutdoorsman >= 40 );
        PROCESS_PERK2( PerkMasterTrader,       1,  9, cr.CharismaBase >= 7,     cr.SkillBarter >= 60       );
        PROCESS_PERK1( PerkEducated,            3,  6, cr.IntellectBase >= 6     );
        PROCESS_PERK4( PerkHealer,              2,  3, cr.PerceptionBase >= 7,   cr.AgilityBase >= 6,      cr.IntellectBase >= 5,        cr.SkillFirstAid >= 40 );
        PROCESS_PERK3( PerkBetterCriticals,    1,  9, cr.Perception >= 6,       cr.Luck >= 6,             cr.Agility >= 4 );
        PROCESS_PERK5( PerkSlayer,              1, 24, cr.AgilityBase >= 8,      cr.StrengthBase >= 8,     cr.SkillUnarmed >= 80,         cr.PerkSniper == 0,            cr.PerkTerminator == 0 );
        PROCESS_PERK5( PerkSniper,              1, 24, cr.AgilityBase >= 8,      cr.PerceptionBase >= 8,   cr.SkillSmallGuns >= 80,      cr.PerkSlayer == 0,            cr.PerkTerminator == 0 );
        PROCESS_PERK3( PerkSilentDeath,        1, 18, cr.AgilityBase >= 10,     cr.SkillSneak >= 80,       cr.SkillUnarmed >= 80 );
        PROCESS_PERK1( PerkActionBoy,          2, 12, cr.AgilityBase >= 5       );
        PROCESS_PERK1( PerkLifegiver,           2, 12, cr.EnduranceBase >= 4      );
        PROCESS_PERK1( PerkDodger,              1,  9, cr.AgilityBase >= 6       );
        PROCESS_PERK1( PerkSnakeater,           2,  6, cr.EnduranceBase >= 3     );
        PROCESS_PERK2( PerkMrFixit,            1, 12, cr.SkillRepair >= 40,      cr.SkillScience >= 40      );
        PROCESS_PERK2( PerkMedic,               1, 12, cr.SkillFirstAid >= 40,   cr.SkillDoctor >= 40       );
        PROCESS_PERK2( PerkMasterThief,        1, 12, cr.SkillSteal >= 50,       cr.SkillLockpick >= 50     );
        PROCESS_PERK1( PerkSpeaker,             1,  9, cr.SkillSpeech >= 50       );
        PROCESS_PERK0( PerkHeaveHo,            3,  6  );
        PROCESS_PERK2( PerkPickpocket,          1, 15, cr.AgilityBase >= 8,      cr.SkillSteal >= 80 );
        PROCESS_PERK1( PerkGhost,               1,  6, cr.SkillSneak >= 60        );
        PROCESS_PERK0( PerkExplorer,            1,  9  );
        PROCESS_PERK2( PerkPathfinder,          2,  6, cr.EnduranceBase >= 6,    cr.SkillOutdoorsman >= 40  );
        PROCESS_PERK1( PerkScout,               1,  3, cr.PerceptionBase >= 7    );
        PROCESS_PERK1( PerkRanger,              1,  6, cr.PerceptionBase >= 6    );
        PROCESS_PERK1( PerkQuickPockets,       1,  3, cr.AgilityBase >= 5       );
        PROCESS_PERK2( PerkSmoothTalker,       3,  3, cr.IntellectBase >= 4,    cr.IntellectBase < 10     );
        PROCESS_PERK1( PerkSwiftLearner,       3,  3, cr.IntellectBase >= 4     );
        PROCESS_PERK1( PerkAdrenalineRush,     1,  6, cr.StrengthBase < 10      );
        PROCESS_PERK1( PerkCautiousNature,     1,  3, cr.PerceptionBase >= 6    );
        PROCESS_PERK1( PerkComprehension,       1,  3, cr.IntellectBase >= 6     );
        PROCESS_PERK2( PerkDemolitionExpert,   1,  9, cr.AgilityBase >= 4,      cr.SkillTraps >= 75        );
        PROCESS_PERK1( PerkGambler,             1,  6, cr.SkillGambling >= 50     );
        PROCESS_PERK1( PerkGainStrength,       1, 12, cr.StrengthBase < 10      );
        PROCESS_PERK1( PerkGainPerception,     1, 12, cr.PerceptionBase < 10    );
        PROCESS_PERK1( PerkGainEndurance,      1, 12, cr.EnduranceBase < 10     );
        PROCESS_PERK1( PerkGainCharisma,       1, 12, cr.CharismaBase < 10      );
        PROCESS_PERK1( PerkGainIntelligence,   1, 12, cr.IntellectBase < 10     );
        PROCESS_PERK1( PerkGainAgility,        1, 12, cr.AgilityBase < 10       );
        PROCESS_PERK1( PerkGainLuck,           1, 12, cr.LuckBase < 10          );
        PROCESS_PERK2( PerkHarmless,            1,  6, cr.SkillSteal >= 50,       cr.Karma >= 50        );
        PROCESS_PERK0( PerkHereAndNow,        1,  9  );
        PROCESS_PERK1( PerkHthEvade,           1, 12, cr.SkillUnarmed >= 75      );
        PROCESS_PERK2( PerkKamaSutraMaster,   1,  3, cr.EnduranceBase >= 5,    cr.AgilityBase >= 5       );
        PROCESS_PERK1( PerkKarmaBeacon,        1,  9, cr.CharismaBase >= 6      );
        PROCESS_PERK2( PerkLightStep,          1,  9, cr.AgilityBase >= 5,      cr.LuckBase >= 5          );
        PROCESS_PERK1( PerkLivingAnatomy,      1, 12, cr.SkillDoctor >= 60       );
        PROCESS_PERK1( PerkMagneticPersonality, 1,  6, cr.CharismaBase < 10      );
        PROCESS_PERK2( PerkNegotiator,          1,  6, cr.SkillSpeech >= 50,      cr.SkillBarter >= 50       );
        PROCESS_PERK0( PerkPackRat,            1,  6  );
        PROCESS_PERK1( PerkPyromaniac,          1,  9, cr.SkillBigGuns >= 75     );
        PROCESS_PERK1( PerkQuickRecovery,      1,  3, cr.AgilityBase >= 5       );
        PROCESS_PERK1( PerkSalesman,            1,  6, cr.SkillBarter >= 50       );
        PROCESS_PERK1( PerkStonewall,           1,  3, cr.StrengthBase >= 6      );
        PROCESS_PERK0( PerkThief,               1,  3  );
        PROCESS_PERK1( PerkWeaponHandling,     1, 12, cr.AgilityBase >= 5       );
        PROCESS_PERK5( PerkTerminator,          1, 24, cr.StrengthBase >= 8,     cr.EnduranceBase >= 8,    cr.SkillDoctor >= 80,          cr.PerkSniper == 0,            cr.PerkSlayer == 0 );
    default:
        break;
    }
    return false;
    // clang-format on
}

#ifndef __CLIENT
void PerkUp(Critter cr, CritterProperty perk)
{
#define PERKUP_STAT #(param, val)cr.param val
#define PERKUP_SKILL \
    #(param, val)cr.param val; \
    if (cr.param > MAX_SKILL_VAL) \
    cr.param = MAX_SKILL_VAL
    switch (perk) {
    // Perks
    case CritterProperty::PerkAwareness: /*Examining a target shows hitpoints, weapon and ammunition count*/
        break;
    case CritterProperty::PerkBonusHthAttacks: /*-1 Ap on HtH attacks*/
        break;
    case CritterProperty::PerkBonusHthDamage:
        PERKUP_STAT(MeleeDamageBase, += 2);
        break;
    case CritterProperty::PerkBonusMove:
        PERKUP_STAT(MaxMoveApBase, += 2);
        break;
    case CritterProperty::PerkBonusRangedDamage: /*In calc damage +2 per range*/
        break;
    case CritterProperty::PerkBonusRateOfFire: /*-1 Ap on ranged attacks*/
        break;
    case CritterProperty::PerkEarlierSequence:
        PERKUP_STAT(SequenceBase, += 2);
        break;
    case CritterProperty::PerkFasterHealing:
        PERKUP_STAT(HealingRateBase, += 2);
        break;
    case CritterProperty::PerkMoreCriticals:
        PERKUP_STAT(CriticalChanceBase, += 5);
        break;
    case CritterProperty::PerkRadResistance:
        PERKUP_STAT(RadiationResistanceBase, += 15);
        break;
    case CritterProperty::PerkToughness:
        PERKUP_STAT(NormalResistanceBase, += 10);
        break;
    case CritterProperty::PerkStrongBack:
        PERKUP_STAT(CarryWeightBase, += LBS_TO_GRAMM(50));
        break;
    case CritterProperty::PerkSharpshooter:
        PERKUP_STAT(BonusLook, += 6); /*+2 perception on ranged attack*/
        break;
    case CritterProperty::PerkSilentRunning: /*No steal off while running*/
        break;
    case CritterProperty::PerkSurvivalist:
        PERKUP_SKILL(SkillOutdoorsman, += 25);
        break;
    case CritterProperty::PerkMasterTrader: /*Barter k is zero on buy*/
        break;
    case CritterProperty::PerkEducated:
        PERKUP_STAT(UnspentSkillPoints, += 2); /*+2 skill points per range*/
        break;
    case CritterProperty::PerkHealer: /*Additional Hp bonus in scripts*/
        break;
    case CritterProperty::PerkBetterCriticals:
        PERKUP_STAT(MaxCriticalBase, += 20);
        break;
    case CritterProperty::PerkSlayer: /*All unarmed and melee attacks is critical*/
        break;
    case CritterProperty::PerkSniper: /*All gun attacks is critical*/
        break;
    case CritterProperty::PerkSilentDeath: /*Attack from sneak from back x2 damage*/
        break;
    case CritterProperty::PerkActionBoy:
        PERKUP_STAT(ActionPointsBase, += 1);
        break;
    case CritterProperty::PerkLifegiver:
        PERKUP_STAT(MaxLifeBase, += 4);
        break;
    case CritterProperty::PerkDodger:
        PERKUP_STAT(ArmorClassBase, += 5);
        break;
    case CritterProperty::PerkSnakeater:
        PERKUP_STAT(PoisonResistanceBase, += 25);
        break;
    case CritterProperty::PerkMrFixit:
        PERKUP_SKILL(SkillRepair, += 10);
        PERKUP_SKILL(SkillScience, += 10);
        break;
    case CritterProperty::PerkMedic:
        PERKUP_SKILL(SkillFirstAid, += 20);
        PERKUP_SKILL(SkillDoctor, += 20);
        break;
    case CritterProperty::PerkMasterThief:
        PERKUP_SKILL(SkillSteal, += 20);
        PERKUP_SKILL(SkillLockpick, += 20);
        break;
    case CritterProperty::PerkSpeaker:
        PERKUP_SKILL(SkillSpeech, += 40);
        break;
    case CritterProperty::PerkHeaveHo: /*+2 strength for throwing weapon*/
        break;
    case CritterProperty::PerkPickpocket: /*Ignore size and facing while stealing*/
        break;
    case CritterProperty::PerkGhost: /*+20% sneak on night*/
        break;
    case CritterProperty::PerkExplorer: /*Higher chance of finding special places and people in random encounters*/
        break;
    case CritterProperty::PerkPathfinder: /*+25% speed on global per range*/
        break;
    case CritterProperty::PerkScout: /*This will increase the amount of the map you can see while exploring and make finding the special random encounters a
                                        little easier.*/
        break;
    case CritterProperty::PerkRanger:
        PERKUP_SKILL(SkillOutdoorsman, += 15); /*Fewer hostile random encounters*/
        break;
    case CritterProperty::PerkQuickPockets: /*Inventory items move ap cost div 2*/
        break;
    case CritterProperty::PerkSmoothTalker: /*+2 intellect on dialogs checks*/
        break;
    case CritterProperty::PerkSwiftLearner: /*+5% add experience per range*/
        break;
    case CritterProperty::PerkAdrenalineRush: /*+1 strength on <50% hp in battle*/
        break;
    case CritterProperty::PerkCautiousNature: /*+3 perception on encounter generate*/
        break;
    case CritterProperty::PerkComprehension: /*50% more points on books reading*/
        break;
    case CritterProperty::PerkDemolitionExpert: /*Used in explosion script*/
        break;
    case CritterProperty::PerkGambler:
        PERKUP_SKILL(SkillGambling, += 40);
        break;
    case CritterProperty::PerkGainStrength:
        PERKUP_STAT(StrengthBase, += 1);
        break;
    case CritterProperty::PerkGainPerception:
        PERKUP_STAT(PerceptionBase, += 1);
        break;
    case CritterProperty::PerkGainEndurance:
        PERKUP_STAT(EnduranceBase, += 1);
        break;
    case CritterProperty::PerkGainCharisma:
        PERKUP_STAT(CharismaBase, += 1);
        break;
    case CritterProperty::PerkGainIntelligence:
        PERKUP_STAT(IntellectBase, += 1);
        break;
    case CritterProperty::PerkGainAgility:
        PERKUP_STAT(AgilityBase, += 1);
        break;
    case CritterProperty::PerkGainLuck:
        PERKUP_STAT(LuckBase, += 1);
        break;
    case CritterProperty::PerkHarmless:
        PERKUP_SKILL(SkillSteal, += 40);
        break;
    case CritterProperty::PerkHereAndNow: /*+1 level*/
        cr.Experience += Parameters::NextLevelNeedExp(cr) - cr.Experience;
        break;
    case CritterProperty::PerkHthEvade: /*+3 ac per 1 ap on end turn*/
        break;
    case CritterProperty::PerkKamaSutraMaster: /*In dialogs*/
        break;
    case CritterProperty::PerkKarmaBeacon: /*Karma x2*/
        break;
    case CritterProperty::PerkLightStep: /*50% less chance of setting off a trap*/
        break;
    case CritterProperty::PerkLivingAnatomy:
        PERKUP_SKILL(SkillDoctor, += 20); /*Also +5 dmg*/
        break;
    case CritterProperty::PerkMagneticPersonality: /*+1 people in group*/
        break;
    case CritterProperty::PerkNegotiator:
        PERKUP_SKILL(SkillSpeech, += 20);
        PERKUP_SKILL(SkillBarter, += 20);
        break;
    case CritterProperty::PerkPackRat:
        PERKUP_STAT(CarryWeightBase, += LBS_TO_GRAMM(50));
        break;
    case CritterProperty::PerkPyromaniac: /*+5 damage on fire attack*/
        break;
    case CritterProperty::PerkQuickRecovery: /* 1 ap for stending up*/
        break;
    case CritterProperty::PerkSalesman:
        PERKUP_SKILL(SkillBarter, += 40);
        break;
    case CritterProperty::PerkStonewall: /*Reduction in chance to be knocked down during combat*/
        break;
    case CritterProperty::PerkThief:
        PERKUP_SKILL(SkillSneak, += 10);
        PERKUP_SKILL(SkillLockpick, += 10);
        PERKUP_SKILL(SkillSteal, += 10);
        PERKUP_SKILL(SkillTraps, += 10);
        break;
    case CritterProperty::PerkWeaponHandling: /*In use weapon strength +3*/
        break;
    case CritterProperty::PerkNcrPerception:
        PERKUP_STAT(PerceptionBase, += 1);
        break;
    case CritterProperty::PerkNcrEndurance:
        PERKUP_STAT(EnduranceBase, += 1);
        break;
    case CritterProperty::PerkNcrBarter:
        PERKUP_SKILL(SkillBarter, += 5);
        break;
    case CritterProperty::PerkNcrRepair:
        PERKUP_SKILL(SkillRepair, += 5);
        break;
    case CritterProperty::PerkTerminator:
        PERKUP_STAT(EmpResistanceBase, -= 1000);
        break;
    default:
        break;
    }
}

void PerkDown(Critter cr, CritterProperty perk)
{
#define PERKDOWN_STAT #(param, val)cr.param val
#define PERKDOWN_SKILL \
    #(param, val)cr.param val; \
    if (cr.param < -MAX_SKILL_VAL) \
    cr.param = -MAX_SKILL_VAL
    switch (perk) {
    // Perks
    case CritterProperty::PerkAwareness:
        break;
    case CritterProperty::PerkBonusHthAttacks:
        break;
    case CritterProperty::PerkBonusHthDamage:
        PERKDOWN_STAT(MeleeDamageBase, -= 2);
        break;
    case CritterProperty::PerkBonusMove:
        PERKDOWN_STAT(MaxMoveApBase, -= 2);
        break;
    case CritterProperty::PerkBonusRangedDamage:
        break;
    case CritterProperty::PerkBonusRateOfFire:
        break;
    case CritterProperty::PerkEarlierSequence:
        PERKDOWN_STAT(SequenceBase, -= 2);
        break;
    case CritterProperty::PerkFasterHealing:
        PERKDOWN_STAT(HealingRateBase, -= 2);
        break;
    case CritterProperty::PerkMoreCriticals:
        PERKDOWN_STAT(CriticalChanceBase, -= 5);
        break;
    case CritterProperty::PerkRadResistance:
        PERKDOWN_STAT(RadiationResistanceBase, -= 15);
        break;
    case CritterProperty::PerkToughness:
        PERKDOWN_STAT(NormalResistanceBase, -= 10);
        break;
    case CritterProperty::PerkStrongBack:
        PERKDOWN_STAT(CarryWeightBase, -= LBS_TO_GRAMM(50));
        break;
    case CritterProperty::PerkSharpshooter:
        PERKDOWN_STAT(BonusLook, -= 6);
        break;
    case CritterProperty::PerkSilentRunning:
        break;
    case CritterProperty::PerkSurvivalist:
        PERKDOWN_SKILL(SkillOutdoorsman, -= 25);
        break;
    case CritterProperty::PerkMasterTrader:
        break;
    case CritterProperty::PerkEducated:
        PERKDOWN_STAT(UnspentSkillPoints, -= 2);
        break;
    case CritterProperty::PerkHealer:
        break;
    case CritterProperty::PerkBetterCriticals:
        PERKDOWN_STAT(MaxCriticalBase, -= 20);
        break;
    case CritterProperty::PerkSlayer:
        break;
    case CritterProperty::PerkSniper:
        break;
    case CritterProperty::PerkSilentDeath:
        break;
    case CritterProperty::PerkActionBoy:
        PERKDOWN_STAT(ActionPointsBase, -= 1);
        break;
    case CritterProperty::PerkLifegiver:
        PERKDOWN_STAT(MaxLifeBase, -= 4);
        break;
    case CritterProperty::PerkDodger:
        PERKDOWN_STAT(ArmorClassBase, -= 5);
        break;
    case CritterProperty::PerkSnakeater:
        PERKDOWN_STAT(PoisonResistanceBase, -= 25);
        break;
    case CritterProperty::PerkMrFixit:
        PERKDOWN_SKILL(SkillRepair, -= 20);
        PERKDOWN_SKILL(SkillScience, -= 20);
        break;
    case CritterProperty::PerkMedic:
        PERKDOWN_SKILL(SkillFirstAid, -= 20);
        PERKDOWN_SKILL(SkillDoctor, -= 20);
        break;
    case CritterProperty::PerkMasterThief:
        PERKDOWN_SKILL(SkillSteal, -= 20);
        PERKDOWN_SKILL(SkillLockpick, -= 20);
        break;
    case CritterProperty::PerkSpeaker:
        PERKDOWN_SKILL(SkillSpeech, -= 40);
        break;
    case CritterProperty::PerkHeaveHo:
        break;
    case CritterProperty::PerkPickpocket:
        break;
    case CritterProperty::PerkGhost:
        break;
    case CritterProperty::PerkExplorer:
        break;
    case CritterProperty::PerkPathfinder:
        break;
    case CritterProperty::PerkScout:
        break;
    case CritterProperty::PerkRanger:
        break;
    case CritterProperty::PerkQuickPockets:
        break;
    case CritterProperty::PerkSmoothTalker:
        break;
    case CritterProperty::PerkSwiftLearner:
        break;
    case CritterProperty::PerkAdrenalineRush:
        break;
    case CritterProperty::PerkCautiousNature:
        break;
    case CritterProperty::PerkComprehension:
        break;
    case CritterProperty::PerkDemolitionExpert:
        break;
    case CritterProperty::PerkGambler:
        PERKDOWN_SKILL(SkillGambling, -= 40);
        break;
    case CritterProperty::PerkGainStrength:
        PERKDOWN_STAT(StrengthBase, -= 1);
        break;
    case CritterProperty::PerkGainPerception:
        PERKDOWN_STAT(PerceptionBase, -= 1);
        break;
    case CritterProperty::PerkGainEndurance:
        PERKDOWN_STAT(EnduranceBase, -= 1);
        break;
    case CritterProperty::PerkGainCharisma:
        PERKDOWN_STAT(CharismaBase, -= 1);
        break;
    case CritterProperty::PerkGainIntelligence:
        PERKDOWN_STAT(IntellectBase, -= 1);
        break;
    case CritterProperty::PerkGainAgility:
        PERKDOWN_STAT(AgilityBase, -= 1);
        break;
    case CritterProperty::PerkGainLuck:
        PERKDOWN_STAT(LuckBase, -= 1);
        break;
    case CritterProperty::PerkHarmless:
        PERKDOWN_SKILL(SkillSteal, -= 40);
        break;
    case CritterProperty::PerkHereAndNow:
        break;
    case CritterProperty::PerkHthEvade:
        break;
    case CritterProperty::PerkKamaSutraMaster:
        break;
    case CritterProperty::PerkKarmaBeacon:
        break;
    case CritterProperty::PerkLightStep:
        break;
    case CritterProperty::PerkLivingAnatomy:
        PERKDOWN_SKILL(SkillDoctor, -= 20);
        break;
    case CritterProperty::PerkMagneticPersonality:
        break;
    case CritterProperty::PerkNegotiator:
        PERKDOWN_SKILL(SkillSpeech, -= 20);
        PERKDOWN_SKILL(SkillBarter, -= 20);
        break;
    case CritterProperty::PerkPackRat:
        PERKDOWN_STAT(CarryWeightBase, -= LBS_TO_GRAMM(50));
        break;
    case CritterProperty::PerkPyromaniac:
        break;
    case CritterProperty::PerkQuickRecovery:
        break;
    case CritterProperty::PerkSalesman:
        PERKDOWN_SKILL(SkillBarter, -= 40);
        break;
    case CritterProperty::PerkStonewall:
        break;
    case CritterProperty::PerkThief:
        PERKDOWN_SKILL(SkillSneak, -= 10);
        PERKDOWN_SKILL(SkillLockpick, -= 10);
        PERKDOWN_SKILL(SkillSteal, -= 10);
        PERKDOWN_SKILL(SkillTraps, -= 10);
        break;
    case CritterProperty::PerkWeaponHandling:
        break;
    case CritterProperty::PerkNcrPerception:
        PERKDOWN_STAT(PerceptionBase, -= 1);
        break;
    case CritterProperty::PerkNcrEndurance:
        PERKDOWN_STAT(EnduranceBase, -= 1);
        break;
    case CritterProperty::PerkNcrBarter:
        PERKDOWN_SKILL(SkillBarter, -= 5);
        break;
    case CritterProperty::PerkNcrRepair:
        PERKDOWN_SKILL(SkillRepair, -= 5);
        break;
    case CritterProperty::PerkTerminator:
        PERKDOWN_STAT(EmpResistanceBase, += 1000);
        break;
    default:
        break;
    }
}
#endif
