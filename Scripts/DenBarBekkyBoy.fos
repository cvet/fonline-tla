// FOS Server Sort 2
// Author: cvet

// Строки
#define STR_STEAL_FAIL (1100)
#define STR_RADIO      (1101)
#define STR_MORNING    (1102)

// Инициализация нпц, происходит при вводе нпц в игру
void _BoyInit(Critter boy, bool firstTime)
{
    boy.OnStealing.Subscribe(_BoyStealing);
    boy.OnRespawn.Subscribe(_BoyRespawn);
    // Создаем событие, где мальчик зазывает покупать у него рации
    Game.DeferredCall(GAME_MINUTE_TO_TICK(Game.Random(10, 50)), Announcement, boy.Id);
    // Создаем событие, где мальчик приветсвует с добрым утром
    Game.DeferredCall(GAME_SECOND_TO_TICK(Time::GetNearFullSecond(0, 0, 0, 8, 0, 0) - Game.GetFullSecond()), AnnouncementMorning, boy.Id);
}

// Предопределенная функция, срабатывает, когда у нпц воруют
void _BoyStealing(Critter boy, Critter thief, Item item, uint count)
{
    // Иногда при удачном воровстве мальчик говорит Хмм
    if (Game.Random(0, 5) == 0) {
        boy.SayMsg(SAY_NORM_ON_HEAD, TextPackName::Text, STR_STEAL_FAIL);
    }
}

// Событие 1
void Announcement(any value)
{
    // Ночью не говорим, ждем до утра.
    if (GameTime::GetHour() > 20 || GameTime::GetHour() < 8) {
        Game.DeferredCall(GAME_SECOND_TO_TICK(Time::GetNearFullSecond(0, 0, 0, 8, Game.Random(20, 40), 0) - Game.GetFullSecond()), Announcement, value);
        return;
    }

    // Зазываем.
    Critter boy = Game.GetCritter(value);
    if (valid(boy)) {
        boy.SayMsg(SAY_NORM_ON_HEAD, TextPackName::Text, STR_RADIO);
    }

    Game.DeferredCall(GAME_MINUTE_TO_TICK(Game.Random(50, 70)), Announcement, value);
}

// Событие 2
void AnnouncementMorning(any value)
{
    Critter boy = Game.GetCritter(value);
    if (valid(boy)) {
        boy.SayMsg(SAY_NORM_ON_HEAD, TextPackName::Text, STR_MORNING);
    }
    Game.DeferredCall(GAME_DAY_TO_TICK(1), AnnouncementMorning, value);
}

// Создание Хаммера. Ключ вручаем игроку.
// Вызывается из диалога, в Результате.
// При ошибке создания Хаммера диалоговая ветка отводится на №9.
// master - игрок
// slave - нпц
// Обойдемся одним игроком.
uint r_CreateHummer(Critter player, Critter boy)
{
    // Берем карту на которой находится игрок с нпц
    Map map = player.GetMap();
    if (not valid(map)) {
        Game.Log("Map nullptr.");
        return 9;
    }

    int pos = Game.Random(0, 4);
    int[] x = {252, 250, 251, 250, 255};
    int[] y = {182, 186, 192, 195, 192};

    uint keyId = Game.Random(10000, 50000); // Генерация номера ключа

    // Хаммер, комплексное создание всесте с багажником
    Item car = map.AddItem(x[pos], y[pos], Content::Item::hummer, 1);
    if (not valid(car)) {
        return 9;
    }

    car.LockerId = keyId;

    // Устанавливаем на багажник номер замка
    /* Item bag = car.GetChild( 0 );
       if( valid( bag ) )
         bag.LockerId = keyId;
       else
         Game.Log( "Bag not created." );
     */
    // Ключ
    Item key = player.AddItem(Content::Item::key, 1);
    if (valid(key)) {
        key.LockerId = keyId;
    }
    else {
        Game.Log("Create key fail.");
    }

    // Удаляем 10000 монет
    player.DestroyItem(Content::Item::bottle_caps, 10000);
    return 0;
}

void _BoyRespawn(Critter boy)
{
    if (boy.CountItem(Content::Item::radio) < 1) {
        boy.AddItem(Content::Item::radio, 1);
    }
}
