// FOS Server Sort 2
// Author: Cracker

#define ENTRY_MOVE_EXIT_TRAP  (HASHI(301)) // Ентайри на который идут трапперы при возвращении домой
#define MIKE_ROLE_ID          (30)         // Роль Майка.
#define BRIAN_ROLE_ID         (31)         // Роль Брайна.

#define MIKE_ENTRY_HOME       (HASHI(40)) // Номер энтайри по которому определятся домашняя позиция Майка в Кламате.
#define BRIAN_ENTRY_HOME      (HASHI(41)) // Номер энтайри по которому определятся домашняя позиция Брайна в Кламате.
#define EMMA_ENTRY_START_HOME (HASHI(29)) // Номер энтайри на котором стоит Эмма в Кламате.
#define EMMA_ENTRY_END_HOME   (HASHI(39)) // Номер энтайри на который уходит Эмма.

#define START_MOVE_TIME       (60 * 60 * 24 * 30) // через это время трапперы пойдут в Кламат.

void _Move(Critter player, int p0, int p1, int p2)
{
    Critter[] critters = player.GetMap().GetCritters(player.HexX, player.HexY, 100, CritterFindType::Any);
    for (uint i = 0; i < critters.length(); i++) {
        Critter cr = critters[i];
        if (cr.NpcRole == MIKE_ROLE_ID || cr.NpcRole == BRIAN_ROLE_ID) {
            uint16 hx = 0;
            uint16 hy = 0;
            Entrance::GetEntryFreeHex(player.GetMap(), ENTRY_MOVE_EXIT_TRAP, hx, hy);
            cr.HomeMapId = player.GetMap().Id;
            cr.HomeHexX = hx;
            cr.HomeHexY = hy;
            cr.HomeDir = Game.Random(0, 5);
        }
    }
}

void t_Transit(Critter cr, StaticItem entry, bool entered, uint8 dir)
{
    if (cr.NpcRole == MIKE_ROLE_ID || cr.NpcRole == BRIAN_ROLE_ID) {
        Obsolete::CritterTransitToMapEntry(cr, Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(0).Id, HASHI(1));
        uint16 hx = 0;
        uint16 hy = 0;
        Entrance::GetEntryFreeHex(Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(0),
                                  cr.NpcRole == MIKE_ROLE_ID ? ENTRY_MOVE_EXIT_TRAP : BRIAN_ENTRY_HOME,
                                  hx,
                                  hy);
        cr.HomeMapId = cr.GetMap().Id;
        cr.HomeHexX = hx;
        cr.HomeHexY = hy;
        cr.HomeDir = (cr.NpcRole == MIKE_ROLE_ID ? 1 : 3);
        cr.DialogId = (cr.NpcRole == MIKE_ROLE_ID ? Content::Dialog::klam_mike_post_quest : Content::Dialog::klam_bryan_post_quest);
        cr.BagId = 51;
        Entrance::GetEntryFreeHex(Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(0), EMMA_ENTRY_START_HOME, hx, hy);

        Map m0 = Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(0);
        if (valid(m0)) {
            Critter[] critters = m0.GetCritters(hx, hy, 100, CritterFindType::Any);
            for (uint i = 0; i < critters.length(); i++) {
                if (critters[i].DialogId == Content::Dialog::klam_emma) {
                    critters[i].DialogId = Content::Dialog::klam_emma_post_quest;
                    Entrance::GetEntryFreeHex(Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(0), EMMA_ENTRY_END_HOME, hx, hy);
                    critters[i].HomeMapId = critters[i].GetMap().Id;
                    critters[i].HomeHexX = hx;
                    critters[i].HomeHexY = hy;
                    critters[i].HomeDir = 3;
                }
            }
        }
    }
    return;
}

void t_TransitMike(Critter cr, StaticItem entry, bool entered, uint8 dir)
{
    if (cr.NpcRole == MIKE_ROLE_ID) {
        uint16 hx = 0;
        uint16 hy = 0;
        Obsolete::CritterTransitToMapEntry(cr, Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(1).Id, HASHI(2));
        Entrance::GetEntryFreeHex(Game.GetLocationByPid(Content::Location::klamath).GetMapByIndex(1), MIKE_ENTRY_HOME, hx, hy);
        cr.HomeMapId = cr.GetMap().Id;
        cr.HomeHexX = hx;
        cr.HomeHexY = hy;
        cr.HomeDir = 1;
    }
}

void r_StartMove(Critter player, Critter npc)
{
    Game.DeferredCall(GAME_SECOND_TO_TICK(START_MOVE_TIME), Move, player.Id);
}

void Move(uint value)
{
    Critter cr = Game.GetCritter(value);
    if (cr !is null) {
        _Move(cr, 0, 0, 0);
    }
}
