// FOS Server Sort 2
// Author: cvet
// Для квеста Вечеринка у Дасти.

///@ Property Game PrivateServer ident NcrDustyOneHourInvokeId
///@ Property Game PrivateServer ident NcrDustyOneWeekInvokeId
///@ Property Game PrivateServer uint8 NCRDustyPartyStatusGlobal Max = 2
///@ Property Game PrivateServer uint8 NCRDustyRotgutCounter     Max = 20
///@ Property Game PrivateServer uint8 NCRDustyBeerGammaCounter  Max = 20

void _DustyInit(Critter dusty, bool firstTime)
{
    dusty.IsNoBarter = false;
    dusty.IsNoSteal = true;
    dusty.TalkDistance = 5;
    dusty.OnFinish.Subscribe(_DustyFinish);
    if (firstTime) {
        Game.NcrDustyOneHourInvokeId = Game.SavedDeferredCall(GAME_HOUR_TO_TICK(1), OneHour);
        Game.NcrDustyOneWeekInvokeId = Game.SavedDeferredCall(GAME_DAY_TO_TICK(7), OneWeek);
    }
}

void _DustyFinish(Critter dusty)
{
    Game.CancelDeferredCall(Game.NcrDustyOneHourInvokeId);
    Game.NcrDustyOneHourInvokeId = ZERO_IDENT;
    Game.CancelDeferredCall(Game.NcrDustyOneWeekInvokeId);
    Game.NcrDustyOneWeekInvokeId = ZERO_IDENT;
}

void OneHour()
{
    if (Game.NCRDustyRotgutCounter >= 20 && Game.NCRDustyBeerGammaCounter >= 20) {
        Game.NCRDustyPartyStatusGlobal = 2;
    }
    Game.NcrDustyOneHourInvokeId = Game.SavedDeferredCall(GAME_HOUR_TO_TICK(1), OneHour);
}

void OneWeek()
{
    Game.NCRDustyRotgutCounter = 0;
    Game.NCRDustyBeerGammaCounter = 0;
    Game.NCRDustyPartyStatusGlobal = 0;
    Game.NcrDustyOneWeekInvokeId = Game.SavedDeferredCall(GAME_DAY_TO_TICK(7), OneWeek);
}
