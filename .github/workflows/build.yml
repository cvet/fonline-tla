name: build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  FO_CMAKE_CONTRIBUTION: ../../TLA.cmake

jobs:
  check-formatting:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: ./Scripts
        extensions: 'fos,h,cpp'
        clangFormatVersion: 12
  unit-tests:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/validate.sh unit-tests
  compile-scripts:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/prepare-workspace.sh linux toolset
    - run: Engine/BuildTools/toolset.sh CompileAngelScript
  bake-resources:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/prepare-workspace.sh linux toolset
    - run: Engine/BuildTools/toolset.sh BakeResources
    - run: cd Workspace/output && tar -cf Bakering.tar Bakering
    - uses: actions/upload-artifact@v3
      with:
        name: Bakering
        path: Workspace/output/Bakering.tar
        retention-days: 1
  windows-build:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        app:
        - win32 client
        - win64 client
        - win64 server
        - win64 editor
        - win64 mapper
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/build.bat ${{ matrix.app }}
    - uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: |
          Workspace/output/*Binaries/Client*
          Workspace/output/*Binaries/Server*
          Workspace/output/*Binaries/Editor*
          Workspace/output/*Binaries/Mapper*
        retention-days: 1
  linux-build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        app:
        - linux client
        - android client
        - android-arm64 client
        - web client
        - linux server
        - linux editor
        - linux mapper
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/prepare-workspace.sh ${{ matrix.app }}
    - run: Engine/BuildTools/build.sh ${{ matrix.app }}
    - uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: |
          Workspace/output/*Binaries/Client*
          Workspace/output/*Binaries/Server*
          Workspace/output/*Binaries/Editor*
          Workspace/output/*Binaries/Mapper*
        retention-days: 1
  macos-build:
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        app:
        - mac client
        - ios client
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: Engine/BuildTools/build.sh ${{ matrix.app }}
    - uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: |
          Workspace/output/*Binaries/Client*
          Workspace/output/*Binaries/Server*
          Workspace/output/*Binaries/Editor*
          Workspace/output/*Binaries/Mapper*
        retention-days: 1
  package:
    runs-on: ubuntu-22.04
    needs: [bake-resources, windows-build, linux-build, macos-build]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/download-artifact@v3
      with:
        name: Binaries
        path: Workspace/output
    - uses: actions/download-artifact@v3
      with:
        name: Bakering
        path: Workspace/output
    - run: cd Workspace/output && tar -xf Bakering.tar
    - run: cd Workspace/output && tree -d
    - run: Engine/BuildTools/prepare-workspace.sh linux toolset
    - run: Engine/BuildTools/toolset.sh MakePackage-Dev
    - uses: actions/upload-artifact@v3
      with:
        name: TLA-Dev
        path: Workspace/output/TLA-Dev
        retention-days: 1
    - run: (cd Workspace/output/TLA-Dev/TLA-Server-LocalTest && zip -0 -r - .) > TLA-Server.zip
    - run: (cd Workspace/output/TLA-Dev/TLA-Client-LocalTest && zip -0 -r - .) > TLA-Client.zip
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        files: |
          TLA-Server.zip
          TLA-Client.zip
