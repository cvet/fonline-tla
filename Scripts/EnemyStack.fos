// FOS Server

///@ Property Critter PrivateServer ident[] EnemyStack
///@ Property Critter Public bool IsNoEnemyStack

Critter ScanEnemyStack(Critter cr)
{
    if (cr.MapId != ZERO_IDENT) {
        Critter[] critters = cr.GetCritters(false, CritterFindType::Alive);
        if (critters.length() > 0) {
            for (uint i = 0, l = critters.length(); i < l; i++) {
                if (CheckEnemyInStack(cr, critters[i].Id)) {
                    return critters[i];
                }
            }
        }
    }
    return null;
}

void AddEnemyToStack(Critter cr, ident enemyId)
{
    if (valid(cr) && enemyId != ZERO_IDENT) {
        ident[] enemies = cr.EnemyStack.clone();
        for (int i = 0, l = enemies.length(); i < l; i++) {
            if (enemies[i] == enemyId) {
                if (i < l - 1) {
                    enemies.removeAt(i);
                    enemies.insertLast(enemyId);
                    cr.EnemyStack = enemies;
                }
                return;
            }
        }
        enemies.insertLast(enemyId);
        cr.EnemyStack = enemies;
    }
}

bool CheckEnemyInStack(Critter cr, ident enemyId)
{
    if (valid(cr) && enemyId != ZERO_IDENT) {
        auto enemies = cr.EnemyStack;
        for (int i = 0, l = enemies.length(); i < l; i++) {
            if (enemies[i] == enemyId) {
                return true;
            }
        }
    }
    return false;
}

void EraseEnemyFromStack(Critter cr, ident enemyId)
{
    if (valid(cr) && enemyId != ZERO_IDENT) {
        ident[] enemies = cr.EnemyStack.clone();
        for (int i = 0, l = enemies.length(); i < l; i++) {
            if (enemies[i] == enemyId) {
                enemies.removeAt(i);
                cr.EnemyStack = enemies;
                return;
            }
        }
    }
}

void ClearEnemyStack(Critter cr)
{
    if (valid(cr)) {
        cr.EnemyStack = array<ident>();
    }
}

void ClearEnemyStackNpc(Critter cr)
{
    if (valid(cr)) {
        ident[] enemies = cr.EnemyStack.clone();
        for (uint i = 0; i < enemies.length();) {
            Critter npc = Game.GetCritter(enemies[i]);
            if (valid(npc) && !npc.IsControlledByPlayer) {
                enemies.removeAt(i);
            }
            else {
                i++;
            }
        }
        cr.EnemyStack = enemies;
    }
}
