// FOS Server

void ModuleInit()
{
    Game.OnCritterIdle.Subscribe(OnCritterIdle);
}

void OnCritterIdle(Critter cr)
{
    if (!cr.IsNpc() || cr.IsNoFavoriteItem) {
        return;
    }

    hstring[] pids = cr.FavoriteItemPid.clone();
    for (uint i = 1; i < pids.length(); i++) {
        Item slotItem = cr.GetItem(ItemProperty::CritterSlot, i);
        if (slotItem != null && pids[i] != slotItem.ProtoId) {
            cr.ChangeItemSlot(cast<Item>(slotItem).Id, SLOT_INV);
            break;
        }
        else if (slotItem == null && pids[i] != EMPTY_HSTRING) {
            Item item = cr.GetItem(pids[i]);
            if (item != null && item.CritterSlot != SLOT_INV) {
                cr.ChangeItemSlot(item.Id, i);
                break;
            }
        }
    }
}

hstring GetFavoriteItemPid(Critter cr, uint slot)
{
    hstring[] pids = cr.FavoriteItemPid.clone();
    if (slot > 0 && slot < pids.length()) {
        return pids[slot];
    }
    return EMPTY_HSTRING;
}

void SetFavoriteItemPid(Critter cr, int slot, hstring pid)
{
    if (slot > 0) {
        hstring[] pids = cr.FavoriteItemPid.clone();
        int len = pids.length();
        if (len <= slot) {
            pids.resize(slot + 1);
        }
        pids[slot] = pid;
        cr.FavoriteItemPid = pids;
    }
}
