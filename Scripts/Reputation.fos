// FOS Common
// //Old script name: Reputation.fosh. Patched 01.10 22:40:31

#define REPUTATION_IDOLIZED #(rep)((rep) >= Settings.ReputationLoved)
#define REPUTATION_LIKED    #(rep)((rep) >= Settings.ReputationLiked and (rep) < Settings.ReputationLoved)
#define REPUTATION_ACCEPTED #(rep)((rep) >= Settings.ReputationAccepted and (rep) < Settings.ReputationLiked)
#define REPUTATION_NEUTRAL  #(rep)((rep) >= Settings.ReputationNeutral and (rep) < Settings.ReputationAccepted)
#define REPUTATION_ANTIPATY #(rep)((rep) >= Settings.ReputationAntipathy and (rep) < Settings.ReputationNeutral)
#define REPUTATION_HATED    #(rep)((rep) >= Settings.ReputationHated and (rep) < Settings.ReputationAntipathy)
#define REPUTATION_VILIFIED #(rep)((rep) < Settings.ReputationHated)

#ifndef __SERVER

KarmaLevel GetKarmaLevel(int karma)
{
	for(int i = 1; i <= Tla::MaxKarmaLevels; i++)
	{
		string karmaValue = MSG_GAME(STR_KARMA_LEVEL_VAL(KarmaLevel(i)));
		if(karma > karmaValue.toInt())
		{
			return KarmaLevel(i);
		}
	}
	return KarmaLevel::Unknown;
}

ReputationLevel GetReputationLevel(int reputation)
{
	if(REPUTATION_IDOLIZED(reputation))
		return ReputationLevel::Idolized;
	if(REPUTATION_LIKED(reputation))
		return ReputationLevel::Liked;
	if(REPUTATION_ACCEPTED(reputation))
		return ReputationLevel::Accepted;
	if(REPUTATION_NEUTRAL(reputation))
		return ReputationLevel::Neutral;
	if(REPUTATION_ANTIPATY(reputation))
		return ReputationLevel::Antipathy;
	if(REPUTATION_HATED(reputation))
		return ReputationLevel::Hated;
	if(REPUTATION_VILIFIED(reputation))
		return ReputationLevel::Vilified;
	return ReputationLevel::Unknown;
}

#endif