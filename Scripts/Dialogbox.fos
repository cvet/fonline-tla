// FOS Server Client

///@ RemoteCall Client ShowDialogBox (int dialogBoxType, int numAnswers, string lexems)
///@ RemoteCall Server AnswerDialogBox (int dialogBoxType, int answer)

///@ Property Critter PrivateServer tick_t LastDialogBoxShownTick

///@ Enum DialogBoxType None = 0
///@ Enum DialogBoxType AskFollowGlobalGroupRuler = 1
///@ Enum DialogBoxType NcrIllBrahmin = 2
///@ Enum DialogBoxType PurgatoryInvite = 3

#define DIALOG_PERIOD    (Time::RealSecond(30))
#define NEXT_DIALOG_CALL (Time::RealSecond(5))

#ifdef __SERVER

void AnswerDialogBox(Player player, int dialogBoxType, int answer)
{
    Critter cr = player.GetControlledCritter();
    auto type = DialogBoxType(dialogBoxType);

    uint tick = Game.GetTick();
    if (tick < cr.LastDialogBoxShownTick + DIALOG_PERIOD) {
        ThrowException("Too late for dialog answer", cr, dialogBoxType, answer);
    }

    if (type == DialogBoxType::AskFollowGlobalGroupRuler && answer == 0) {
        GlobalmapGroup::ProcessGlobalMapCommand(player, 6 /*GM_CMD_FOLLOW*/, cr.FollowLeaderId, 0);
    }

    if (type == DialogBoxType::NcrIllBrahmin) {
        NcrCommon::answer_CureBrahmin(cr, answer);
    }

    if (type == DialogBoxType::PurgatoryInvite) {
        Purgatory::answer_BattleInvite(cr, answer);
    }
}

void RunDialogBox(Critter cr, DialogBoxType type, int numAnswers, string lexems)
{
    if (!cr.IsControlledByPlayer || cr.IsDead()) {
        ThrowException("Critter is npc or dead", cr);
    }

    uint tick = Game.GetTick();
    if (tick < cr.LastDialogBoxShownTick + NEXT_DIALOG_CALL) {
        ThrowException("Too often dialog calls", cr, type);
    }

    cr.PlayerClientCall.ShowDialogBox(type, numAnswers, lexems);
}

#endif

#ifdef __CLIENT

uint GetDialogTextStr(DialogBoxType dialogBoxType)
{
    string str = "DialogBoxType::" + Enum::ToString(dialogBoxType);
    return hstring(str).uhash;
}

void ShowDialogBox(int dialogBoxType, int numAnswers, string lexems)
{
    Game.ShowScreen(CLIENT_SCREEN_DIALOGBOX, dict<string, any> = {{"DialogBoxType", dialogBoxType}, {"Answers", numAnswers}, {"Lexems", lexems}});
}

void AnswerDialog(DialogBoxType dialogBoxType, int answer)
{
    CurPlayer.ServerCall.AnswerDialogBox(dialogBoxType, answer);
}

#endif
