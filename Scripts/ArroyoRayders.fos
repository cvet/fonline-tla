// FOS Server
// Name:   arroyo_rayders
// Author: Sufir

///@ Property Critter PrivateServer uint ArroyoRaydersAttackedId

// Defines
#define ARROYO_RAIDERS_MSG (301)

void _RaiderInit(Critter raider, bool firstTime)
{
    raider.ReplicationTime = -1;

    raider.OnCritterAppeared.Subscribe(_RaiderSaw);
    raider.OnCritterDisappeared.Subscribe(_RaiderHide);
    raider.OnIdle.Subscribe(_RaiderIdle);
    raider.OnDead.Subscribe(_RaiderDead);
    raider.OnMessage.Subscribe(_RaiderAlarm);

    raider.ArroyoRaydersAttackedId = 0; // Id атакуемого игрока.

    // Записываем группу рейдеров. Эти данные используются при выходе с карты, для определения все-ли рейдеры убиты...
    if (firstTime) {
        Game.ArroyoRaidersCount = Game.ArroyoRaidersCount + 1;
    }
}

void _RaiderSaw(Critter raider, Critter player)
{
    // Проверяем свободен ли криттер
    if (raider.ArroyoRaydersAttackedId != 0) {
        return;
    }

    if (not NpcPlanes::IsNoPlanes(raider)) {
        NpcPlanes::EraseAttackPlane(raider, player);
    }

    if (player.IsOwnedByPlayer()) {
        raider.ArroyoRaydersAttackedId = player.Id;
        SendMessage::ToWhoSeesMe(raider, ARROYO_RAIDERS_MSG, raider.ArroyoRaydersAttackedId);
        if (NpcPlanes::AddAttackPlane(raider, 0, player)) {
            if (Game.Random(0, 8) == 0) {
                raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.DialogId, 0));
            }
            else if (Game.Random(0, 6) == 1) {
                raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.DialogId, 0));
            }
        }
    }
}

void _RaiderHide(Critter raider, Critter player)
{
    // Если игрок пропал из поля зрения, убираем план атаки
    if (player.IsOwnedByPlayer() && raider.ArroyoRaydersAttackedId != 0) {
        if (Game.Random(0, 10) == 0) {
            raider.SayMsg(SAY_SHOUT_ON_HEAD, TEXTMSG_DLG, DLGSTR(raider.DialogId, 1));
        }
        NpcPlanes::EraseAttackPlane(raider, player);
        if (NpcPlanes::IsNoPlanes(raider)) {
            raider.ArroyoRaydersAttackedId = 0;
        }
    }
}

void _RaiderIdle(Critter raider)
{
    // Ищем игроков и атакуем
    Critter[] playerCritters = raider.GetCritters(false, CritterFindType::AlivePlayers);
    if (!playerCritters.isEmpty()) {
        NpcPlanes::AddAttackPlane(raider, 0, playerCritters[0]);
    }
}

void _RaiderDead(Critter raider, Critter player)
{
    Game.ArroyoRaidersCount = Game.ArroyoRaidersCount - 1;
}

void _RaiderAlarm(Critter raider, Critter fromCrit, int message, int value)
{
    if (raider.Id != fromCrit.Id && NpcPlanes::IsNoPlanes(raider)) {
        EnemyStack::AddEnemyToStack(raider, value);
        NpcPlanes::AddAttackPlane(raider, 0, Game.GetCritter(value));
    }
}
