// FOS Server

// Author: cvet
// Original Fallout2 system
// In Fallout, Fallout 2 and Fallout Tactics, the amount of skill points gained is equal to 100,
// subtract the current skill level, divide by 10, and then rounded down. Thus, the maximum a skill
// can increased by books is up to 91%. Other books are used in quests.
// Read time (Int/hours): 1/10, 2/9, 3/8, 4/7, 5/6, 6/5, 7/4, 8/3, 9/2, 10/1
// For timeout used Science timeout.
// TODO: PE_BOOKWORM

bool IsReadableBook(hstring pid)
{
    hstring[] bookPids = {
        Content::Item::big_book_of_science,
        Content::Item::deans_electronics,
        Content::Item::first_aid_book,
        Content::Item::scout_handbook,
        Content::Item::guns_and_bullets,
        Content::Item::cats_paw_issue_5,
    };
    return bookPids.find(pid) != -1;
}

void TryReadBook(Critter cr, Item book)
{
    if (IS_TIMEOUT(cr.TimeoutSkScience)) {
        cr.SayMsg(SAY_NETMSG, TEXTMSG_GAME, MsgStr::StrSkillWeariness);
        return;
    }

    CritterProperty skill;
    uint strNum;
    if (book.ProtoId == Content::Item::big_book_of_science) {
        skill = CritterProperty::SkillScience;
        strNum = MsgStr::StrBookReadScience;
    }
    else if (book.ProtoId == Content::Item::deans_electronics) {
        skill = CritterProperty::SkillRepair;
        strNum = MsgStr::StrBookReadRepair;
    }
    else if (book.ProtoId == Content::Item::first_aid_book) {
        skill = CritterProperty::SkillFirstAid;
        strNum = MsgStr::StrBookReadFisrtAid;
    }
    else if (book.ProtoId == Content::Item::scout_handbook) {
        skill = CritterProperty::SkillOutdoorsman;
        strNum = MsgStr::StrBookReadOutdoorsman;
    }
    else if (book.ProtoId == Content::Item::guns_and_bullets) {
        skill = CritterProperty::SkillSmallGuns;
        strNum = MsgStr::StrBookReadSmallGuns;
    }
    else if (book.ProtoId == Content::Item::cats_paw_issue_5) {
        skill = CritterProperty::SkillEnergyWeapons;
        strNum = MsgStr::StrBookReadEnergyWeapons;
    }
    else {
        return;
    }

    int readTime = (11 - cr.Intellect) * 60 * 60;
    int sp = (100 - cr.GetAsInt(skill)) / 10;
    if (sp <= 0) {
        cr.SayMsg(SAY_NETMSG, TEXTMSG_GAME, MsgStr::StrBookReadFail);
        cr.TimeoutSkScience = Game.GetFullSecond() + readTime;
        Game.DeleteItem(book, 1);
        return;
    }

    if (cr.TagSkills.find(skill) != -1) {
        sp *= 2;
    }
    if (cr.PerkComprehension != 0) {
        sp = sp * 150 / 100;
    }

    cr.SetAsInt(skill, cr.GetAsInt(skill) + sp);
    cr.TimeoutSkScience = Game.GetFullSecond() + readTime;
    cr.SayMsg(SAY_NETMSG, TEXTMSG_GAME, strNum);
    Game.DeleteItem(book, 1);
}
