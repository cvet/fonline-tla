// FOS Server

///@ Property Critter PrivateServer int   ReddingMortonBrothers
///@ Property Critter PrivateServer uint8 SpecialEncounterBaxChurch Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounteTim Max = 1
///@ Property Critter PrivateServer uint8 RacingSneakersTrap Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterBridge Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterHoly1 Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterHoly2 Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterToxic Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterPariah Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterBrahmin Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterWhale Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterHead Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterShuttle Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterGuardian Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterWoodsman Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterUnwashed Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterTeleport Max = 2
///@ Property Critter PrivateServer uint8 SpecialWastelandChildren Max = 1
///@ Property Critter PrivateServer uint8 SpecialEncounterKotw Max = 3
///@ Property Critter PrivateServer uint8 SpecialSoldierHolo Max = 3
///@ Property Critter PrivateServer uint8 SpecialTrapperHolo Max = 3
///@ Property Critter PrivateServer uint8 SpecialDollHolo Max = 3
///@ Property Critter PrivateServer uint8 SpecialEncounterZergLaboratory Max = 3
///@ Property Critter PrivateServer uint8 SpecialEncounterDoughnutWarehouse Max = 3
///@ Property Critter PrivateServer uint8 SpecialEncounterAtomChurch Max = 3
///@ Property Critter PrivateServer int   GeckoFindWoody
///@ Property Critter PrivateServer uint8 NcrDappoLostCCtatus Max  = 5

/// Property Game PrivateServer uint8  ModocBrahminEscaped
///@ Property Game  PrivateServer  uint8  RaidersDead

#define ZONE_COUNT_X              (28)
#define ZONE_COUNT_Y              (30)
#define ZONE_LENGTH               (50)

#define STR_VIEW                  (10000010) // {10000010}{}{Вы наткнулись на lex who.}
#define STR_VIEW_WITH_PLAYER      (10000011) // {10000011}{}{Вы наткнулись на lex who и lex player.}
#define STR_VIEW_WITH_PLAYERS     (10000012) // {10000012}{}{Вы наткнулись на lex who и банду lex player.}
#define STR_VIEW_ONLY_PLAYER      (10000013) // {10000013}{}{Вы наткнулись на lex player.}
#define STR_VIEW_ONLY_PLAYERS     (10000014) // {10000014}{}{Вы наткнулись на банду lex player.}
#define STR_QUESTION              (10000020) // {10000020}{}{Вы хотите увидеть lex who?}
#define STR_QUESTION_WITH_PLAYER  (10000021) // {10000021}{}{Вы хотите увидеть lex who и lex player?}
#define STR_QUESTION_WITH_PLAYERS (10000022) // {10000022}{}{Вы хотите увидеть lex who и банду lex player?}
#define STR_QUESTION_ONLY_PLAYER  (10000023) // {10000023}{}{Вы хотите увидеть lex player?}
#define STR_QUESTION_ONLY_PLAYERS (10000024) // {10000024}{}{Вы хотите увидеть банду lex player?}

#define ENCOUNTER_OBJECT_NONE     (0)
#define ENCOUNTER_OBJECT_CRITTER  (1)
#define ENCOUNTER_OBJECT_ITEM     (2)

#define CHECK_RANDOM              (0)
#define CHECK_PARAM               (1)
#define CHECK_PROPERTY            (2)
#define CHECK_GVAR                (3)
#define CHECK_HOUR                (4)
#define CHECK_PROPERTY_ANY        (5)
#define CHECK_PARAM_ANY           (6)
#define ASSIGN_PROPERTY           (10)

#define ACTION_NONE               (0)
#define ACTION_FIGHTING           (1) // Combined with Ambush

#define TERRAIN_Desert            (0)
#define TERRAIN_Mountain          (1)
#define TERRAIN_City              (2)
#define TERRAIN_Coast             (3)
#define TERRAIN_Water             (4)

#define FILL_No_Fill              (0)
#define FILL_Fill_W               (1)

// Encounter frequency percentages
#define CHANCE_Forced          (100) // This shouldn't change
#define CHANCE_Frequent        (38)  // Was 9/3d6
#define CHANCE_Common          (22)  // Was 8/3d6
#define CHANCE_Uncommon        (12)  // Was 6/3d6
#define CHANCE_Rare            (4)   // Was 5/3d6
#define CHANCE_None            (0)   // This shouldn't change

#define POSITION_NONE          (0)
#define POSITION_SURROUNDING   (1) // Окружают
#define POSITION_HUDDLE        (2) //
#define POSITION_WEDGE         (3)
#define POSITION_CONE          (4)
#define POSITION_DOUBLE_LINE   (5)
#define POSITION_STRAIGHT_LINE (6)

// clang-format off

uint[][] PositionDirs =
{
    { 0 },                                     // POSITION_NONE
// Steps Path 1       Path 2
    { 1, 4, 3, 2, 1, 0, 5, 2, 3, 4, 5, 0, 1 }, // POSITION_SURROUNDING
    { 1, 5, 0, 1, 2, 3, 4, 1, 0, 5, 4, 3, 2 }, // POSITION_HUDDLE
    { 1, 4,           2 },                     // POSITION_WEDGE
    { 1, 5,           1 },                     // POSITION_CONE
    { 2, 1, 2,         4, 5 },                 // POSITION_DOUBLE_LINE
    { 2, 1, 2,         4, 5 } // POSITION_STRAIGHT_LINE
};

// clang-format on

#define GROUP_Player                    (uint(-1))
#define GROUP_Raiders                   (0) // Fallout 1 encounters, not in use
#define GROUP_Rad_Scorpions             (1)
#define GROUP_Giant_Rats                (2)
#define GROUP_Merchant_Party            (3)
#define GROUP_Manti                     (4)
#define GROUP_Easy_Deathclaw            (5)
#define GROUP_Easy_Gecko                (6)
#define GROUP_Easy_MoleRat              (7)
#define GROUP_Easy_Pigrat               (8)
#define GROUP_Dog                       (9)
#define GROUP_Brahmin                   (10) // Fallout 1 encounters end.
#define GROUP_ARRO_Rats                 (11)
#define GROUP_ARRO_Pig_Rats             (12)
#define GROUP_ARRO_Sm_Scorpions         (13)
#define GROUP_ARRO_Silver_Geckos        (14)
#define GROUP_ARRO_Spore_Plants         (15)
#define GROUP_ARRO_Hunting_Party        (16)
#define GROUP_ARRO_War_Party            (17)
#define GROUP_ARRO_Cannibals            (18)
#define GROUP_ARRO_Outcasts             (19)
#define GROUP_ARRO_Holy_People          (20)
#define GROUP_ARRO_Nomads               (21)
#define GROUP_ARROK_Molerats            (22)
#define GROUP_ARROK_Geckos              (23)
#define GROUP_KLA_Trappers              (24)
#define GROUP_KLA_Bandits               (25)
#define GROUP_KLA_Homeless              (26)
#define GROUP_KLA_Farmers               (27)
#define GROUP_KLA_Golden_Geckos         (28)
#define GROUP_KLAD_Caravan              (29)
#define GROUP_KLAD_Scorpions            (30)
#define GROUP_KLAD_Mole_Pig_Rat         (31)
#define GROUP_DMRV_Caravan              (32)
#define GROUP_DMRV_Robbers              (33)
#define GROUP_DMRV_Highwaymen           (34)
#define GROUP_DMRV_Golden_Geckos        (35)
#define GROUP_DMRV_Scorpions            (36)
#define GROUP_DEN_Slavers               (37)
#define GROUP_DEN_Slave_Run             (38)
#define GROUP_DEN_Slaves                (39)
#define GROUP_DEN_Rave_Party            (40)
#define GROUP_DEN_Molerats              (41)
#define GROUP_MOD_Moonshiners           (42)
#define GROUP_MOD_Wild_Brahmin          (43)
#define GROUP_MOD_Mantis                (44)
#define GROUP_DVMV_Robbers              (45)
#define GROUP_DVMV_Highwaymen           (46)
#define GROUP_DVMV_Wild_Dogs            (47)
#define GROUP_DVMV_Mantis_Swarm         (48)
#define GROUP_DVMV_Caravan              (49)
#define GROUP_WILD1_Trader              (50)
#define GROUP_WILD2_Mutated_Molerats    (51)
#define GROUP_WILD2_Mutated_Pig_Rats    (52)
#define GROUP_WILD2_Hermit              (53)
#define GROUP_VPAT_Patrol               (54)
#define GROUP_VPAT_Strong_Slavers       (55)
#define GROUP_GECK_Ghoul_Crazies        (56)
#define GROUP_GECK_Crazies              (57)
#define GROUP_GECK_Ghoul_Scavs          (58)
#define GROUP_GECK_Scavs                (59)
#define GROUP_GECK_Mutated_Rats         (60)
#define GROUP_GECK_Geckos               (61)
#define GROUP_FISH_Fisherman            (62)
#define GROUP_FISH_Wilder               (63)
#define GROUP_DNRV_Den_Caravan          (64)
#define GROUP_DNRV_Vault_Caravan        (65)
#define GROUP_DNRV_Reno_Caravan         (66)
#define GROUP_DNRV_Redding_Caravan      (67)
#define GROUP_RED_Bootlegger            (68)
#define GROUP_RED_Trappers              (69)
#define GROUP_RED_Prospector            (70)
#define GROUP_RED_Claim_Jumper          (71)
#define GROUP_RED_Wolves                (72)
#define GROUP_RED_Homesteaders          (73)
#define GROUP_RDRC_Broken_Hills_Caravan (74)
#define GROUP_RDRC_Gecko_Caravan        (75)
#define GROUP_RDRC_Raiders              (76)
#define GROUP_EPA_Fire_Geckos           (77)
#define GROUP_EPA_Tough_Fire_Geckos     (78)
#define GROUP_EPA_Alien                 (79)
#define GROUP_EPA_Tough_Alien           (80)
#define GROUP_EPA_Deathclaws            (81)
#define GROUP_EPA_Centaurs              (82)
#define GROUP_EPA_Floaters              (83)
#define GROUP_EPA_Floater_Centaurs      (84)
#define GROUP_NAV_Enclave_Patrol        (85)
#define GROUP_FRAN_Mercenaries          (86)
#define GROUP_FRAN_Elronologists        (87)
#define GROUP_FRAN_Press_Gang           (88)
#define GROUP_FRAN2_San_Fran_Caravan    (89)
#define GROUP_BROK_Unity_Patrol         (90)
#define GROUP_BROK_Rogues               (91)
#define GROUP_NEW_Mobsters              (92)
#define GROUP_NEW_Yakuza                (93)
#define GROUP_NEW_Gang                  (94)
#define GROUP_NEW_Traveller             (95)
#define GROUP_NCR_Rangers               (96)
#define GROUP_NCR_Marauders             (97)
#define GROUP_NCR_Masters_Army          (98)
#define GROUP_NCR_Caravan               (99)
#define GROUP_V15_Caravan               (100)
#define GROUP_V15_Squatters             (101)
#define GROUP_Special1                  (102)
#define GROUP_Bounty_Hunter_Low         (103)
#define GROUP_Bounty_Hunter_Low_Mid     (104)
#define GROUP_Bounty_Hunter_High_Mid    (105)
#define GROUP_Bounty_Hunter_High        (106)
#define GROUP_Morton_Brother            (107)
#define GROUP_ARRO_Ants                 (108)
#define GROUP_Game_Foreshadowing        (109)
#define GROUP_SF_Mirelurk               (110)
#define GROUP_NCR_Patrol_Rebels         (111)
#define GROUP_NCR_Patrol_Raiders        (112)
#define GROUP_OCEAN_W_Voles_Low         (113)
#define GROUP_OCEAN_W_Voles_High        (114)
#define GROUP_OCEAN_W_Voles_Mutated     (115)
#define GROUP_OCEAN_Mantis              (116)
#define GROUP_OCEAN_Wasps               (117)
#define GROUP_ARRO_Patrol               (118)
#define GROUP_HELL_Patrol               (119)
#define GROUP_HELL_Patrol_R             (120)
#define GROUP_HELL_Fugitives            (121)
#define GROUP_QUEST_Lynett_Hitman       (122)
#define GROUP_QUEST_Carlos_Jackals      (123)
#define GROUP_MAX                       (124)

#define TABLE_DstN                      (0) // Fallout 1 encounter tables, not in use
#define TABLE_DstS                      (1)
#define TABLE_MtnN                      (2)
#define TABLE_MtnS                      (3)
#define TABLE_Vault                     (4)
#define TABLE_Coast                     (5) // Fallout 1 encounter tables end.
#define TABLE_Arro_M                    (6)
#define TABLE_Arro_D                    (7)
#define TABLE_Arro_O                    (8)
#define TABLE_Arrok_D                   (9)
#define TABLE_Arrok_M                   (10)
#define TABLE_Kla_D                     (11)
#define TABLE_Kla_M                     (12)
#define TABLE_Klad_D                    (13)
#define TABLE_DMRV_D                    (14)
#define TABLE_DMRV_M                    (15)
#define TABLE_Den_D                     (16)
#define TABLE_Den_M                     (17)
#define TABLE_Band_M                    (18)
#define TABLE_Mod_M                     (19)
#define TABLE_DVMV_M                    (20)
#define TABLE_DVMV_D                    (21)
#define TABLE_Wild1_M                   (22)
#define TABLE_Wild1_D                   (23)
#define TABLE_Wild2_D                   (24)
#define TABLE_Wild2_M                   (25)
#define TABLE_VPat_M                    (26)
#define TABLE_VPat_D                    (27)
#define TABLE_Geck_M                    (28)
#define TABLE_Geck_D                    (29)
#define TABLE_Fish_O                    (30)
#define TABLE_Prim_D                    (31)
#define TABLE_Prim_M                    (32)
#define TABLE_DNRV_D                    (33)
#define TABLE_DNRV_M                    (34)
#define TABLE_Red_D                     (35)
#define TABLE_Red_M                     (36)
#define TABLE_Wild3_M                   (37)
#define TABLE_RDRC_M                    (38)
#define TABLE_RDRC_D                    (39)
#define TABLE_Raid_M                    (40)
#define TABLE_Raid_D                    (41)
#define TABLE_Nav_D                     (42)
#define TABLE_Nav_M                     (43)
#define TABLE_Nav_O                     (44)
#define TABLE_EPA_D                     (45)
#define TABLE_EPA_M                     (46)
#define TABLE_EPA_C                     (47)
#define TABLE_Wild4_D                   (48)
#define TABLE_Wild4_M                   (49)
#define TABLE_Wild4_O                   (50)
#define TABLE_SRNRRN_D                  (51)
#define TABLE_SRNRRN_M                  (52)
#define TABLE_New_D                     (53)
#define TABLE_New_M                     (54)
#define TABLE_New_C                     (55)
#define TABLE_Brok_D                    (56)
#define TABLE_Brok_M                    (57)
#define TABLE_Fran_O                    (58)
#define TABLE_Fran_M                    (59)
#define TABLE_Fran_C                    (60)
#define TABLE_Fran_D                    (61)
#define TABLE_Fran2_D                   (62)
#define TABLE_Fran2_C                   (63)
#define TABLE_Wild5_D                   (64)
#define TABLE_Wild5_M                   (65)
#define TABLE_NRNR_D                    (66)
#define TABLE_NRNR_M                    (67)
#define TABLE_Wild6_M                   (68)
#define TABLE_Wild6_D                   (69)
#define TABLE_VNNB_D                    (70)
#define TABLE_VNNB_M                    (71)
#define TABLE_NCR_M                     (72)
#define TABLE_NCR_D                     (73)
#define TABLE_V15_M                     (74)
#define TABLE_V15_D                     (75)
#define TABLE_Ocean1_O                  (76)
#define TABLE_Ocean2_O                  (77)
#define TABLE_HELL_M                    (78)
#define TABLE_MAX                       (79)

CEncounterGroup[] EncounterGroups = array<CEncounterGroup>(GROUP_MAX);
CEncounterTable[] EncounterTables = array<CEncounterTable>(TABLE_MAX);
CZone[] WorldmapGround = array<CZone>(ZONE_COUNT_X * ZONE_COUNT_Y);
CZone[] WorldmapWater = array<CZone>(ZONE_COUNT_X * ZONE_COUNT_Y);

class CCheck
{
    uint Type;
    uint Index;
    uint8 Operator;
    int Value;

    CCheck()
    {
        Type = 0;
        Index = 0;
        Operator = 0;
        Value = 0;
    }

    void Set(uint type, uint index, uint8 operator, int value)
    {
        Type = type;
        Index = index;
        Operator = operator;
        Value = value;
    }
};

class CEncounterObject
{
    uint ObjectType;
    hstring Pid; // Proto id
    hstring DialogId;
    CritterInitFunc ScriptName;
    uint DistanceLength;            // Distance from players
    CEncounterObject[] Childs = {}; // Items in inventory or container
    CCheck[] Checks = {};
    // Only for critter
    uint RatioValue;
    bool IsDead;
    // Only for item
    uint Minimum;
    uint Maximum;
    uint InvSlot;

    CEncounterObject()
    {
        ObjectType = 0;
        Pid = hstring();
        DialogId = hstring();
        @ScriptName = null;
        DistanceLength = 0;
        RatioValue = 0;
        IsDead = false;
        Minimum = 0;
        Maximum = 0;
        InvSlot = 0;
    }

    CEncounterObject NewCheck(uint type, uint index, uint8 operator, int value)
    {
        Checks.grow(1);
        Checks.last() = CCheck();
        Checks.last().Set(type, index, operator, value);
        return this;
    }

    CEncounterObject Dialog(hstring dialog)
    {
        DialogId = dialog;
        return this;
    }
    CEncounterObject Script(CritterInitFunc script)
    {
        @ScriptName = script;
        return this;
    }
    CEncounterObject Distance(uint distance)
    {
        DistanceLength = distance;
        return this;
    }
    CEncounterObject CheckRandom(int value)
    {
        NewCheck(CHECK_RANDOM, 0, 0, value);
        return this;
    }
    CEncounterObject CheckParam(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PARAM, index, operator, value);
        return this;
    }
    CEncounterObject CheckParamAny(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PARAM_ANY, index, operator, value);
        return this;
    }
    CEncounterObject CheckProperty(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PROPERTY, index, operator, value);
        return this;
    }
    CEncounterObject CheckPropertyAny(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PROPERTY_ANY, index, operator, value);
        return this;
    }
    CEncounterObject CheckGVar(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_GVAR, index, operator, value);
        return this;
    }
    CEncounterObject CheckHour(uint8 operator, int value)
    {
        NewCheck(CHECK_HOUR, 0, operator, value);
        return this;
    }
    CEncounterObject Ratio(uint ratio)
    {
        RatioValue = ratio;
        return this;
    }
    CEncounterObject Dead(bool dead)
    {
        IsDead = dead;
        return this;
    }
    CEncounterObject Slot(uint slot)
    {
        InvSlot = slot;
        return this;
    }

    CEncounterObject AddItem(hstring pid, uint min, uint max, uint slot)
    {
        CEncounterObject new_child = CEncounterObject();
        Childs.insertLast(new_child);
        new_child.Pid = pid;
        new_child.Minimum = min;
        new_child.Maximum = max;
        new_child.InvSlot = slot;
        return this;
    }
};

class CEncounterGroup
{
    uint TeamNum;
    uint Position;
    uint Spacing;
    uint Distance;
    CEncounterObject[] Objects = {};

    CEncounterGroup()
    {
        TeamNum = 0;
        Position = 0;
        Spacing = 0;
        Distance = 0;
    }

    CEncounterObject NewObject()
    {
        Objects.grow(1);
        Objects.last() = CEncounterObject();
        return Objects.last();
    }

    CEncounterObject AddCritter(hstring pid)
    {
        CEncounterObject obj = NewObject();
        obj.ObjectType = ENCOUNTER_OBJECT_CRITTER;
        obj.Pid = pid;
        return obj;
    }

    CEncounterObject AddItem(hstring pid)
    {
        CEncounterObject obj = NewObject();
        obj.ObjectType = ENCOUNTER_OBJECT_ITEM;
        obj.Pid = pid;
        return obj;
    }
};

class CEncounter
{
    uint Chance;
    uint StrNum;
    hstring LocPid;
    bool IsSpecial;
    uint[] Groups = {};
    uint[] RatioMin = {};
    uint[] RatioMax = {};
    uint[] Actions = {};
    CCheck[] Checks = {};

    CEncounter()
    {
        Chance = 0;
        StrNum = 0;
        LocPid = hstring();
        IsSpecial = false;
    }

    CEncounter AddGroup(uint group, uint ratioMin, uint ratioMax)
    {
        Groups.grow(1);
        RatioMin.grow(1);
        RatioMax.grow(1);
        Groups.last() = group;
        RatioMin.last() = ratioMin;
        RatioMax.last() = ratioMax;
        return this;
    }

    CEncounter Fighting(uint fromGroup, uint toGroup)
    {
        Actions.insertLast(fromGroup);
        Actions.insertLast(toGroup);
        Actions.insertLast(ACTION_FIGHTING);
        return this;
    }

    CEncounter NewCheck(uint type, uint index, uint8 operator, int value)
    {
        Checks.grow(1);
        Checks.last() = CCheck();
        Checks.last().Set(type, index, operator, value);
        return this;
    }

    CEncounter LocationPid(hstring locationPid)
    {
        LocPid = locationPid;
        return this;
    }
    CEncounter Special(bool special)
    {
        IsSpecial = special;
        return this;
    }
    CEncounter CheckRandom(int value)
    {
        NewCheck(CHECK_RANDOM, 0, 0, value);
        return this;
    }
    CEncounter CheckParam(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PARAM, index, operator, value);
        return this;
    }
    CEncounter CheckParamAny(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PARAM_ANY, index, operator, value);
        return this;
    }
    CEncounter CheckProperty(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PROPERTY, index, operator, value);
        return this;
    }
    CEncounter CheckPropertyAny(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_PROPERTY_ANY, index, operator, value);
        return this;
    }
    CEncounter CheckGVar(int index, uint8 operator, int value)
    {
        NewCheck(CHECK_GVAR, index, operator, value);
        return this;
    }
    CEncounter CheckHour(uint8 operator, int value)
    {
        NewCheck(CHECK_HOUR, 0, operator, value);
        return this;
    }
    CEncounter AssignProperty(int index, uint8 operator, int value)
    {
        NewCheck(ASSIGN_PROPERTY, index, operator, value);
        return this;
    }
};

class CEncounterTable
{
    hstring[] LocationPids = {};
    CEncounter[] Encounters = {};

    void AddLocationPid(hstring locationPid)
    {
        LocationPids.insertLast(locationPid);
    }

    CEncounter AddEncounter(uint chance, uint strNum)
    {
        Encounters.grow(1);
        Encounters.last() = CEncounter();
        Encounters.last().Chance = chance;
        Encounters.last().StrNum = strNum;
        return Encounters.last();
    }
};

class CZone
{
    int Difficulty;
    uint Terrain;
    uint MorningChance;
    uint AfternoonChance;
    uint NightChance;
    CEncounterTable Table;

    CZone()
    {
        Difficulty = 0;
        Terrain = 0;
        MorningChance = 0;
        AfternoonChance = 0;
        NightChance = 0;
        Table = null;
    }
};

//
// Zone
//

void SetZone(uint zx, uint zy, uint table, int difficulty, uint terrain, uint morningChance, uint afternoonChance, uint nightChance)
{
    CZone zone = CZone();
    zone.Table = EncounterTables[table];
    zone.Difficulty = difficulty;
    zone.Terrain = terrain;
    zone.MorningChance = morningChance;
    zone.AfternoonChance = afternoonChance;
    zone.NightChance = nightChance;

    if (terrain != TERRAIN_Water) {
        WorldmapGround[zy * ZONE_COUNT_X + zx] = zone;
    }
    else {
        WorldmapWater[zy * ZONE_COUNT_X + zx] = zone;
    }
}

void SetZone(uint zx, uint zy, uint table, int difficulty, uint terrain, uint chance)
{
    SetZone(zx, zy, table, difficulty, terrain, chance, chance, chance);
}

//
// Tables
//

void AddTableToAllTables(CEncounterTable globalTable)
{
    for (uint i = 0; i < TABLE_MAX; i++) {
        if (i != TABLE_Ocean1_O && i != TABLE_Ocean2_O) {
            CEncounterTable table = EncounterTables[i];

            for (uint j = 0; j < globalTable.LocationPids.length(); j++) {
                table.LocationPids.grow(1);
                table.LocationPids.last() = globalTable.LocationPids[j];
            }

            for (uint j = 0; j < globalTable.Encounters.length(); j++) {
                table.Encounters.grow(1);
                table.Encounters.last() = globalTable.Encounters[j];
            }
        }
    }
}

//
// Checks
//

bool CheckCompare(int val1, uint8 operator, int val2)
{
    if (operator== '>') {
        return val1 > val2;
    }
    if (operator== '<') {
        return val1 < val2;
    }
    if (operator== '=') {
        return val1 == val2;
    }
    Game.Log("Unknown operator.");
    return false;
}

bool CheckCompareAnyParam(CCheck check, Critter[] critters)
{
    for (uint i = 0, j = critters.length(); i < j; i++) {
        if (CheckCompare(critters[i].GetAsInt(CritterProperty(check.Index)), check.Operator, check.Value)) {
            return true;
        }
    }
    return false;
}

bool CheckCompareAnyVar(CCheck check, Critter[] critters)
{
    for (uint i = 0, j = critters.length(); i < j; i++) {
        if (CheckCompare(critters[i].GetAsInt(CritterProperty(check.Index)), check.Operator, check.Value)) {
            return true;
        }
    }
    return false;
}

void CheckAssignVar(Critter cr, CritterProperty prop, uint8 operator, int val2)
{
    int val1 = cr.GetAsInt(prop);
    if (operator== '=') {
        val1 = val2;
    }
    else if (operator== '+') {
        val1 += val2;
    }
    else if (operator== '-') {
        val1 -= val2;
    }
    else if (operator== '*') {
        val1 *= val2;
    }
    else if (operator== '/') {
        val1 /= val2;
    }
    else {
        Game.Log("Unknown operator.");
    }
    cr.SetAsInt(prop, val1);
}

bool CheckChecks(CCheck[] checks, Critter[] critters)
{
    for (uint i = 0; i < checks.length(); i++) {
        CCheck check = checks[i];
        switch (check.Type) {
        case CHECK_RANDOM:
            return Game.Random(1, 100) <= check.Value;
        case CHECK_HOUR:
            return CheckCompare(GameTime::GetHour(), check.Operator, check.Value);
        case CHECK_PARAM:
            for (uint j = 0; j < critters.length(); j++) {
                if (not CheckCompare(critters[j].GetAsInt(CritterProperty(check.Index)), check.Operator, check.Value)) {
                    return false;
                }
            }
            break;
        case CHECK_PARAM_ANY:
            return CheckCompareAnyParam(check, critters);
        case CHECK_PROPERTY:
            for (uint j = 0; j < critters.length(); j++) {
                if (not CheckCompare(critters[j].GetAsInt(CritterProperty(check.Index)), check.Operator, check.Value)) {
                    return false;
                }
            }
            break;
        case CHECK_PROPERTY_ANY:
            return CheckCompareAnyVar(check, critters);
        case CHECK_GVAR: {
            if (not CheckCompare(Game.GetAsInt(GameProperty(check.Index)), check.Operator, check.Value)) {
                return false;
            }
        } break;
        default:
            continue;
        }
    }
    return true;
}

void AssignChecks(CCheck[] checks, Critter[] critters)
{
    for (uint i = 0; i < checks.length(); i++) {
        CCheck check = checks[i];
        if (check.Type == ASSIGN_PROPERTY) {
            for (uint j = 0; j < critters.length(); j++) {
                CheckAssignVar(critters[j], CritterProperty(check.Index), check.Operator, check.Value);
            }
        }
    }
}

//
// Stored founded encounters
//

#define FOUNDED_ENCOUNTER_LIVE_TIME (REAL_MINUTE(30)) // 30 real minutes
class CFoundedEncounter
{
    uint Index;
    hstring[] LocationPids = {};
    CEncounter Encounter;
    bool IsGenerated;
    uint FullSecond;
    uint PositionX;
    uint PositionY;
    uint OwnerId;
    bool OwnerGroup;
    uint LocationId;
    bool IsWater;
    uint16 StartHexX;
    uint16 StartHexY;
    bool[] DirBusy = {};
    uint AskChance;

    CFoundedEncounter()
    {
        Index = 0;
        Encounter = null;
        IsGenerated = false;
        FullSecond = 0;
        PositionX = 0;
        PositionY = 0;
        OwnerId = 0;
        OwnerGroup = false;
        LocationId = 0;
        IsWater = false;
        StartHexX = 0;
        StartHexY = 0;
        DirBusy.resize(6);
    }
}

CFoundedEncounter[] FoundedEncounters = array<CFoundedEncounter>(1000);
uint FoundedEncountersLastIndex = 0;

CFoundedEncounter CreateFoundedEncounter(bool isWater, uint x, uint y, CEncounter encounter, hstring[] locationPids, uint ownerId, bool ownerGroup)
{
    for (int i = 0, j = FoundedEncounters.length(); i < j; i++) {
        if (FoundedEncounters[i] == null) {
            FoundedEncounters[i] = CFoundedEncounter();
        }
        CFoundedEncounter ge = FoundedEncounters[i];
        if (ge.Index == 0 || Game.GetFullSecond() - ge.FullSecond >= FOUNDED_ENCOUNTER_LIVE_TIME + REAL_MINUTE(1)) {
            FoundedEncountersLastIndex++;
            ge.Index = FoundedEncountersLastIndex;
            ge.LocationPids = locationPids;
            ge.Encounter = encounter;
            ge.IsGenerated = false;
            ge.FullSecond = Game.GetFullSecond();
            ge.PositionX = x;
            ge.PositionY = y;
            ge.OwnerId = ownerId;
            ge.OwnerGroup = ownerGroup;
            ge.LocationId = 0;
            ge.IsWater = isWater;
            for (uint k = 0; k < 6; k++) {
                ge.DirBusy[k] = false;
            }
            return ge;
        }
    }

    // Grow buffer and refind
    FoundedEncounters.resize(FoundedEncounters.length() * 2);
    return CreateFoundedEncounter(isWater, x, y, encounter, locationPids, ownerId, ownerGroup);
}

CFoundedEncounter GetFoundedEncounter(uint index)
{
    for (int i = 0, j = FoundedEncounters.length(); i < j; i++) {
        CFoundedEncounter ge = FoundedEncounters[i];
        if (ge != null && ge.Index == index) {
            return ge;
        }
    }
    return null;
}

CFoundedEncounter GetNearFoundedEncounter(bool isWater, Critter[] group, uint x, uint y, uint radius)
{
    for (int i = 0, j = FoundedEncounters.length(); i < j; i++) {
        if (FoundedEncounters[i] == null) {
            FoundedEncounters[i] = CFoundedEncounter();
        }
        CFoundedEncounter ge = FoundedEncounters[i];

        if (ge.Index == 0) {
            continue;
        }
        if (ge.IsWater != isWater) {
            continue;
        }
        if (Game.GetFullSecond() - ge.FullSecond >= FOUNDED_ENCOUNTER_LIVE_TIME) {
            continue;
        }
        if (not ge.IsGenerated) {
            continue;
        }
        if (valid(ge.Encounter) && ge.Encounter.IsSpecial && not CheckChecks(ge.Encounter.Checks, group)) {
            continue;
        }
        if (uint(math::sqrt(float(POW2(ge.PositionX - x) + POW2(ge.PositionY - y)))) > radius) {
            continue;
        }
        if (group[0].Id == ge.OwnerId) {
            continue;
        }
        if (not valid(Game.GetLocation(ge.LocationId))) {
            continue;
        }

        return ge;
    }
    return null;
}

uint GetFreeDir(bool[] dirBysy)
{
    // Try find random
    uint dir = Game.Random(0, 5);
    if (not dirBysy[dir]) {
        dirBysy[dir] = true;
        return dir;
    }

    // Try find any free
    for (uint i = 0; i < 6; i++) {
        if (not dirBysy[i]) {
            dirBysy[i] = true;
            return i;
        }
    }

    // Any busy
    return Game.Random(0, 5);
}

void RotatePosition(uint toDir, uint[] positionsDirs)
{
    for (uint i = 1, j = positionsDirs.length(); i < j; i++) // Skip Steps
    {
        positionsDirs[i] += toDir;
        if (positionsDirs[i] > 5) {
            positionsDirs[i] -= 6;
        }
    }
}

void MovePositionPoint(Map map, uint16 pointX, uint16 pointY, uint[] positionDirs, uint pathIndex, uint count, uint spacing)
{
    uint steps = positionDirs[0];
    uint pathLen = (positionDirs.length() - 1) / 2;
    count *= steps;
    count %= pathLen;
    if (steps > 1) {
        for (uint i = 0; i < spacing; i++) {
            for (uint j = 0; j < steps; j++) {
                uint dir = positionDirs[1 + pathLen * pathIndex + count + j];
                map.MoveHexByDir(pointX, pointY, dir, 1);
            }
        }
    }
    else {
        uint dir = positionDirs[1 + pathLen * pathIndex + count];
        map.MoveHexByDir(pointX, pointY, dir, spacing);
    }
}

void ParseEncounterObject(CEncounterObject obj, Map map, uint16 posX, uint16 posY, uint8 reversDir, Critter[] crittersGrouop, uint teamId)
{
    if (obj.ObjectType == ENCOUNTER_OBJECT_CRITTER) {
        if (not map.IsHexPassed(posX, posY)) {
            return;
        }

        int[] props = {CritterProperty::DialogId,
                       obj.DialogId.hash,
                       CritterProperty::BagId,
                       Bags::Empty,
                       CritterProperty::TeamId,
                       teamId,
                       CritterProperty::ReplicationTime,
                       -1};
        Critter npc = map.AddNpc(obj.Pid, posX, posY, reversDir, Tla::GetCritPropsDict(props));
        npc.SetupScript(obj.ScriptName);
        if (not valid(npc)) {
            return;
        }

        for (uint i = 0, j = obj.Childs.length(); i < j; i++) {
            CEncounterObject child = obj.Childs[i];
            uint count = Game.Random(child.Minimum, child.Maximum);
            if (count > 0) {
                Item item = npc.AddItem(child.Pid, count);
                if (child.InvSlot != SLOT_INV) {
                    npc.ChangeItemSlot(item.Id, child.InvSlot);
                }
            }
        }

        if (obj.IsDead) {
            CritterState::ToDead(npc, Game.Random(0, 1) == 0 ? Anim2Actions::DeadFront : Anim2Actions::DeadBack, null);
        }
        else {
            crittersGrouop.insertLast(npc);
        }
    }
    else if (obj.ObjectType == ENCOUNTER_OBJECT_ITEM) {
        Item item = map.AddItem(posX, posY, obj.Pid, 1);
        if (not valid(item)) {
            return;
        }

        if (obj.Childs.length() > 0 && item.Type == ItemType::Container) {
            for (uint i = 0, j = obj.Childs.length(); i < j; i++) {
                CEncounterObject child = obj.Childs[i];
                uint count = Game.Random(child.Minimum, child.Maximum);
                if (count > 0) {
                    item.AddItem(child.Pid, count, 0);
                }
            }
        }
    }
    else {
        Game.Log("Unknown object type<" + obj.ObjectType + ">.");
    }
}

void ActionFighting(Critter[] npcL, Critter[] npcR)
{
    for (int i = 0, j = npcL.length(); i < j; i++) {
        Critter nl = npcL[i];
        bool nlIsNpc = nl.IsNpc();
        for (int k = 0, l = npcR.length(); k < l; k++) {
            Critter nr = npcR[k];
            if (nlIsNpc) {
                NpcPlanes::AddAttackPlane(nl, 0, nr);
                EnemyStack::AddEnemyToStack(nl, nr.Id);
                nl.Wait(Game.Random(4000, 5000));
            }
            if (nr.IsNpc()) {
                NpcPlanes::AddAttackPlane(nr, 0, nl);
                EnemyStack::AddEnemyToStack(nr, nl.Id);
                nr.Wait(Game.Random(4000, 5000));
            }
        }
    }
}

Map GenerateEncounter(CFoundedEncounter fe, Critter[] critters)
{
    CEncounter encounter = fe.Encounter;
    hstring locPid = (valid(encounter) ? encounter.LocPid : hstring());
    if (locPid == hstring()) {
        locPid = fe.LocationPids[Game.Random(0, fe.LocationPids.length() - 1)];
    }

    fe.LocationId = Game.CreateLocation(locPid, fe.PositionX, fe.PositionY, null).Id;
    if (fe.LocationId == 0) {
        Game.Log("CreateLocation fail, location pid<" + locPid + ">.");
        return null;
    }

    Location location = Game.GetLocation(fe.LocationId);
    if (not valid(location)) {
        Game.Log("GetLocation fail.");
        return null;
    }
    location.IsEncounter = true;

    // Генерация итемов на всех картах энкаунтера
    for (uint i = 0, l = location.GetMapCount(); i < l; i++) {
        Map m = location.GetMapByIndex(i);
        if (valid(m)) {
            EncounterItems::GenerateItems(m, critters);
            if (i > 0) {
                CaveMobs::GenerateCavernEncounter(m, critters);
            }
        }
    }

    Map map = location.GetMapByIndex(0);
    if (not valid(map)) {
        Game.Log("GetMapByIndex fail.");
        return null;
    }

    uint16 startX = 0, startY = 0;
    if (not Entrance::MapGetEntryCoords(map, 0, 0, startX, startY)) {
        Game.Log("Default entry not found.");
        return null;
    }
    fe.StartHexX = startX;
    fe.StartHexY = startY;

    if (not valid(encounter)) // Empty map
    {
        fe.IsGenerated = true;
        return map;
    }

    Critter leader = critters[0];
    Critter[][] crittersGrouops = array<array<Critter>>(encounter.Groups.length());

    for (uint i = 0, j = encounter.Groups.length(); i < j; i++) {
        uint groupNum = encounter.Groups[i];

        if (groupNum == GROUP_Player) {
            crittersGrouops[i] = array<Critter>();
            Critter[] crGroup = crittersGrouops[i];
            crGroup.resize(critters.length());
            for (uint k = 0, l = critters.length(); k < l; k++) {
                crGroup[k] = critters[k];
            }
            crittersGrouops[i] = crGroup;
            continue;
        }

        if (groupNum >= GROUP_MAX) {
            Game.Log("Invalid group number.");
            continue;
        }

        CEncounterGroup group = EncounterGroups[groupNum];
        uint ratio = Game.Random(encounter.RatioMin[i], encounter.RatioMax[i]);

        uint distance = group.Distance;
        if (distance == 0) {
            distance = 7 + leader.Perception + leader.PerkCautiousNature * 3;
        }

        uint teamId = group.TeamNum;
        if (teamId == 0) {
            teamId = Teams::Mob0 + i;
        }

        uint position = group.Position;
        uint spacing = group.Spacing;
        if (position == POSITION_SURROUNDING) {
            spacing = leader.Perception + leader.PerkCautiousNature * 3;
        }

        uint[] positionDirs = PositionDirs[position];
        uint steps = positionDirs[0];
        uint dirsCount = 0;

        uint freeDir = GetFreeDir(fe.DirBusy);
        if (freeDir != 0) {
            RotatePosition(freeDir, positionDirs);
        }
        uint reversDir = freeDir + 3;
        if (reversDir > 5) {
            reversDir -= 6;
        }

        // Get start point for group
        uint16[] pointX = {startX, startY};
        uint16[] pointY = {startX, startY};
        if (position != POSITION_NONE) {
            uint16 hx = pointX[0], hy = pointY[0];
            map.MoveHexByDir(pointX[0], pointY[0], freeDir, position != POSITION_SURROUNDING ? distance : spacing);
            map.GetHexInPath(hx, hy, pointX[0], pointY[0], 0.0f, 0); // Check for barrier
            pointX[1] = pointX[0];
            pointY[1] = pointY[0];
            MovePositionPoint(map, pointX[1], pointY[1], positionDirs, 1, 0, spacing);
        }

        for (uint k = 0, l = group.Objects.length(); k < l; k++) {
            CEncounterObject obj = group.Objects[k];

            if (not CheckChecks(obj.Checks, critters)) {
                continue;
            }

            uint otherDistance = obj.DistanceLength;
            uint count = obj.RatioValue * ratio / 100;
            if (count == 0) {
                count = 1;
            }

            uint16 oldPosX = startX, oldPosY = startY;
            for (uint n = 0; n < count; n++) {
                uint16 posX, posY;
                if (otherDistance > 0 || position == POSITION_NONE) {
                    posX = startX + Game.Random(-5, 5);
                    posY = startY + Game.Random(-5, 5);
                    map.MoveHexByDir(posX, posY, freeDir, otherDistance > 0 ? otherDistance : distance);
                }
                else {
                    uint pathIndex = dirsCount % 2;
                    posX = pointX[pathIndex] + (position == POSITION_SURROUNDING ? Game.Random(-3, 0) : 0);
                    posY = pointY[pathIndex] + (position == POSITION_SURROUNDING ? Game.Random(-3, 0) : 0);
                    MovePositionPoint(map, pointX[pathIndex], pointY[pathIndex], positionDirs, pathIndex, dirsCount, spacing);
                    dirsCount++;
                }

                map.GetHexInPath(oldPosX, oldPosY, posX, posY, 0.0f, 0); // Check for barrier
                oldPosX = posX;
                oldPosY = posY;
                if (crittersGrouops[i] == null) {
                    crittersGrouops[i] = array<Critter>();
                }
                ParseEncounterObject(obj, map, posX, posY, reversDir, crittersGrouops[i], teamId);
            }
        }
    }

    for (uint i = 0, j = encounter.Actions.length(); i < j; i += 3) {
        uint fromGroup = encounter.Actions[i];
        uint toGroup = encounter.Actions[i + 1];
        uint action = encounter.Actions[i + 2];

        if (action == ACTION_FIGHTING && fromGroup < crittersGrouops.length() && toGroup < crittersGrouops.length()) {
            ActionFighting(crittersGrouops[fromGroup], crittersGrouops[toGroup]);
        }
    }

    fe.IsGenerated = true;
    return map;
}

//
// Imports
//
// void FindEncounter(Critter[] critters, uint zx, uint zy) return foundedEncounterIndex
// bool InviteToEncounter(uint foundedEncounterIndex, Critter[] critters) invite critters to encounter
// void WorldmapInit() call on start server

/*const int[] ScanOffsX= {-1,0,1,-1,0,1,-1,0,1};
   const int[] ScanOffsY= {-1,0,1,-1,0,1,-1,0,1};
   void ScanZone(Critter cr, uint zx, uint zy)
   {
        uint zoneX=cr.WorldX/Settings.GlobalMapZoneLength;
        uint zoneY=cr.WorldY/Settings.GlobalMapZoneLength;

        cr.SetFog(zoneX,zoneY,FOG_NONE);
        cr.SetFog(zoneX-1,zoneY-1,FOG_SELF);
        cr.SetFog(zoneX  ,zoneY-1,FOG_SELF);
        cr.SetFog(zoneX+1,zoneY-1,FOG_SELF);
        cr.SetFog(zoneX-1,zoneY  ,FOG_SELF);
        cr.SetFog(zoneX+1,zoneY  ,FOG_SELF);
        cr.SetFog(zoneX-1,zoneY+1,FOG_SELF);
        cr.SetFog(zoneX  ,zoneY+1,FOG_SELF);
        cr.SetFog(zoneX+1,zoneY+1,FOG_SELF);

        for(int ox=-1;ox<2;ox++)
        {
                for(int oy=-1;oy<2;oy++)
                {

                }
        }
   }*/

void FindEncounter(Critter[] group, Item car, uint x, uint y, uint& encounterDescriptor, bool& waitForAnswer, bool empty)
{
    encounterDescriptor = 0;
    waitForAnswer = false;

    uint zx = x / ZONE_LENGTH;
    uint zy = y / ZONE_LENGTH;
    if (zx >= ZONE_COUNT_X || zy >= ZONE_COUNT_Y) {
        // Game.Log("Invalid zones coordinates."); in faction mod size is greather than ZONE_COUNT_X, ZONE_COUNT_Y.
        return;
    }

    bool isWater = (GetGlobalMapRelief(x, y) == 0);
    int walkType = (valid(car) ? car.Car_MovementType : Tla::GmWalkGround);
    bool walkWaterOrFly = (walkType == Tla::GmWalkWater || walkType == Tla::GmWalkFly);
    if (walkType == Tla::GmWalkGround && isWater) {
        return;
    }

    CZone zone = (isWater ? WorldmapWater[zy * ZONE_COUNT_X + zx] : WorldmapGround[zy * ZONE_COUNT_X + zx]);
    if (not valid(zone)) {
        return;
    }
    Critter leader = group[0];

    // Create empty map
    if (empty) {
        CFoundedEncounter fe = CreateFoundedEncounter(isWater, x, y, null, zone.Table.LocationPids, leader.Id, group.length() > 1);
        if (not valid(fe)) {
            return;
        }
        waitForAnswer = false;
        encounterDescriptor = fe.Index;
        return;
    }

    // Check chance
    uint chance;
    if (IS_MORNING(GameTime::GetHour())) {
        chance = zone.MorningChance;
    }
    if (IS_AFTERNOON(GameTime::GetHour())) {
        chance = zone.AfternoonChance;
    }
    else {
        chance = zone.NightChance;
    }
    if (uint(Game.Random(1, 100)) > chance) {
        return;
    }

    // Try find already founded encounter
    CFoundedEncounter feAlready = GetNearFoundedEncounter(isWater, group, x, y, ZONE_LENGTH / 2);
    if (valid(feAlready)) {
        int outdoorsman = leader.SkillOutdoorsman + zone.Difficulty;
        outdoorsman = CLAMP(outdoorsman, 6, 95);
        if (outdoorsman >= Game.Random(1, 100) || walkWaterOrFly) {
            if (valid(feAlready.Encounter)) {
                leader.SayMsg(Tla::SayEncounterRt,
                              TEXTMSG_GM,
                              feAlready.OwnerGroup ? STR_QUESTION_WITH_PLAYERS : STR_QUESTION_WITH_PLAYER,
                              "$who @msg gm " + feAlready.Encounter.StrNum + "@$player" + Obsolete::GetPlayerName(feAlready.OwnerId));
            }
            else {
                leader.SayMsg(Tla::SayEncounterRt,
                              TEXTMSG_GM,
                              feAlready.OwnerGroup ? STR_QUESTION_ONLY_PLAYERS : STR_QUESTION_ONLY_PLAYER,
                              "$player" + Obsolete::GetPlayerName(feAlready.OwnerId));
            }
            waitForAnswer = true;

            if (not walkWaterOrFly) {
                if (leader.SkillOutdoorsman <= 95) {
                    leader.Experience += 100 - leader.SkillOutdoorsman - zone.Difficulty;
                }
                else {
                    leader.Experience += 5 - zone.Difficulty;
                }
            }
        }

        for (uint i = 0, j = group.length(); i < j; i++) {
            group[i].Say(SAY_FLASH_WINDOW, "");
        }
        encounterDescriptor = feAlready.Index;
        return;
    }

    // Try find new encounter
    int luck = 0;
    for (uint i = 0, j = group.length(); i < j; i++) {
        luck += group[i].Luck;
    }
    luck /= group.length();

    int roll = Game.Random(0, 100) + luck - 5 + 2 * leader.PerkExplorer + leader.PerkRanger + leader.PerkScout;
    if (roll < 0) {
        roll = 0;
    }
    int maxRoll = 0;

    CEncounter[] encounters = zone.Table.Encounters;
    CEncounter[] encountersThru = array<CEncounter>(encounters.length());
    for (uint i = 0, j = encounters.length(); i < j; i++) {
        CEncounter enc = encounters[i];
        if (CheckChecks(enc.Checks, group)) {
            maxRoll += enc.Chance;
            encountersThru[i] = encounters[i];
        }
        else {
            encountersThru[i] = null;
        }
    }

    roll = roll * maxRoll / 100;
    for (uint i = 0; i < encountersThru.length(); i++) {
        CEncounter enc = encountersThru[i];

        if (not valid(enc)) {
            continue;
        }
        if (uint(roll) > enc.Chance && i < encountersThru.length() - 1) {
            roll -= enc.Chance;
            continue;
        }

        CFoundedEncounter fe = CreateFoundedEncounter(isWater, x, y, enc, zone.Table.LocationPids, leader.Id, group.length() > 1);
        if (not valid(fe)) {
            return;
        }

        int outdoorsman = leader.SkillOutdoorsman + zone.Difficulty;
        outdoorsman = CLAMP(outdoorsman, 6, 95);
        if (outdoorsman >= Game.Random(1, 100) || walkWaterOrFly) {
            leader.SayMsg(Tla::SayEncounterAny, TEXTMSG_GM, STR_QUESTION, "$who @msg gm " + enc.StrNum + "@");
            waitForAnswer = true;

            if (not walkWaterOrFly) {
                if (leader.SkillOutdoorsman <= 95) {
                    leader.Experience += 100 - leader.SkillOutdoorsman - zone.Difficulty;
                }
                else {
                    leader.Experience += 5 - zone.Difficulty;
                }
            }
        }

        for (uint j = 0; j < group.length(); j++) {
            group[j].Say(SAY_FLASH_WINDOW, "");
        }
        encounterDescriptor = fe.Index;
        break;
    }
}

void InviteToEncounter(Critter[] group, Item car, uint encounterDescriptor, int combatMode, uint& mapId, uint16& hexX, uint16& hexY, uint8& dir)
{
    mapId = 0;

    CFoundedEncounter fe = GetFoundedEncounter(encounterDescriptor);
    if (not valid(fe)) {
        Game.Log("GetFoundedEncounter fail.");
        return;
    }

    bool isGenerated = fe.IsGenerated;
    Map map = null;
    if (isGenerated) {
        Location location = Game.GetLocation(fe.LocationId);
        if (not valid(location)) {
            // Game.Log("Location not found.");
            return;
        }

        map = location.GetMapByIndex(0);
    }
    else {
        map = GenerateEncounter(fe, group);
    }

    if (not valid(map)) {
        Game.Log("Map not found.");
        return;
    }

    Critter leader = group[0];
    mapId = map.Id;
    hexX = fe.StartHexX;
    hexY = fe.StartHexY;
    if (isGenerated) {
        if (valid(car)) {
            // Place critters near his car
            hexX = uint16(-1);
            hexY = uint16(-1);
        }
        else {
            dir = GetFreeDir(fe.DirBusy);
            map.MoveHexByDir(hexX, hexY, dir, leader.Perception + leader.PerkCautiousNature * 3);
            dir += 3;
            if (dir > 5) {
                dir -= 6;
            }
        }
    }
    else {
        if (valid(car)) {
            // Place critters near his car
            hexX = uint16(-1);
            hexY = uint16(-1);
        }

        dir = Game.Random(0, 5);
    }

    if (isGenerated || valid(fe.Encounter)) {
        for (uint i = 0, j = group.length(); i < j; i++) {
            Critter cr = group[i];
            if (not isGenerated) {
                cr.SayMsg(SAY_NETMSG, TEXTMSG_GM, STR_VIEW, "$who @msg gm " + fe.Encounter.StrNum + "@");
            }
            else if (valid(fe.Encounter)) {
                cr.SayMsg(SAY_NETMSG,
                          TEXTMSG_GM,
                          fe.OwnerGroup ? STR_VIEW_WITH_PLAYERS : STR_VIEW_WITH_PLAYER,
                          "$who @msg gm " + fe.Encounter.StrNum + "@$player" + Obsolete::GetPlayerName(fe.OwnerId));
            }
            else {
                cr.SayMsg(SAY_NETMSG,
                          TEXTMSG_GM,
                          fe.OwnerGroup ? STR_VIEW_ONLY_PLAYERS : STR_VIEW_ONLY_PLAYER,
                          "$player" + Obsolete::GetPlayerName(fe.OwnerId));
            }
        }
    }
    if (valid(fe.Encounter)) {
        AssignChecks(fe.Encounter.Checks, group);
    }
}

uint GetGlobalMapRelief(uint x, uint y)
{
    // Used low four bits of image
    // Zero is water
    return Game.GetImageColor(Tla::ImageRelief, x, y) & 0xF;
}

void WorldmapInit()
{
    Game.LoadImage(Tla::ImageRelief, "relief_tla.png");

    for (int i = 0; i < GROUP_MAX; i++) {
        EncounterGroups[i] = CEncounterGroup();
    }

    for (int i = 0; i < TABLE_MAX; i++) {
        EncounterTables[i] = CEncounterTable();
    }

    for (int i = 0; i < ZONE_COUNT_X * ZONE_COUNT_Y; i++) {
        WorldmapGround[i] = CZone();
        WorldmapGround[i] = CZone();
    }

    CEncounterGroup group;

    // ARRO_Rats
    group = EncounterGroups[GROUP_ARRO_Rats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::RegularRat).Ratio(95).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::RegularPigRat).Ratio(5).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddItem(Content::Item::broc_flower).Distance(10).CheckRandom(5);

    // ARRO_Pig_Rats
    group = EncounterGroups[GROUP_ARRO_Pig_Rats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::RegularPigRat).Ratio(95).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddItem(Content::Item::xander_root).Ratio(5).Distance(12);
    group.AddCritter(Content::Critter::Molerat).Dialog(hstring()).Script(Mob::_MobInit).CheckRandom(5);

    // ARRO_Sm_Scorpions
    group = EncounterGroups[GROUP_ARRO_Sm_Scorpions];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 4;
    group.AddCritter(Content::Critter::SmallRadscorpion).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::PrimitiveMale).Dead(true).Dialog(hstring()).CheckRandom(10).AddItem(Content::Item::spear, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::PrimitiveFemale).Dead(true).Dialog(hstring()).CheckRandom(10).AddItem(Content::Item::healing_powder, 1, 1, SLOT_INV);

    // ARRO_Silver_Geckos
    group = EncounterGroups[GROUP_ARRO_Silver_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 5;
    group.AddCritter(Content::Critter::SmallSilverGecko).Ratio(90).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughSilverGecko).Ratio(10).Dialog(hstring()).Script(Mob::_MobInit);

    // ARRO_Spore_Plants
    group = EncounterGroups[GROUP_ARRO_Spore_Plants];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::SporePlant).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit).AddItem(Content::Item::plant_spike, 2, 6, SLOT_INV);
    group.AddItem(Content::Item::broc_flower).Distance(10).CheckRandom(10);
    group.AddItem(Content::Item::xander_root).Distance(15).CheckRandom(10);
    group.AddCritter(Content::Critter::PrimitiveFemale)
        .Dead(true)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .CheckRandom(5)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // ARRO_Hunting_Party
    group = EncounterGroups[GROUP_ARRO_Hunting_Party];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleHunter)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::MaleHunter)
        .Ratio(60)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleHunter)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::SmallSilverGecko).Dead(true).Dialog(hstring()).Distance(7);

    // ARRO_War_Party
    group = EncounterGroups[GROUP_ARRO_War_Party];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleHunter)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::sharpened_pole, 3, 6, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleHunter)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::sharpened_pole, 3, 6, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // ARRO_Cannibals
    group = EncounterGroups[GROUP_ARRO_Cannibals];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleCannibal)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::rock, 3, 7, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleCannibal)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::rock, 3, 7, SLOT_INV);

    // ARRO_Outcasts
    group = EncounterGroups[GROUP_ARRO_Outcasts];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::MaleCannibal).Ratio(60).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::FemaleCannibal).Ratio(20).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::MaleCannibal).Ratio(10).Dialog(hstring()).Script(EncounterNpc::_NpcInit).AddItem(Content::Item::knife, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::FemaleCannibal)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1);

    // ARRO_Holy_People
    group = EncounterGroups[GROUP_ARRO_Holy_People];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::HolyMan)
        .Ratio(70)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::HolyWoman)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // ARRO_Nomads
    group = EncounterGroups[GROUP_ARRO_Nomads];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleNomad)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::antidote, 1, 1, SLOT_INV)
        .AddItem(Content::Item::meat_jerky, 1, 1, SLOT_INV)
        .AddItem(Content::Item::spear, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleNomad)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::healing_powder, 1, 1, SLOT_INV)
        .AddItem(Content::Item::knife, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Brahmin).Dialog(hstring()).Script(EncounterNpc::_NpcInit).CheckRandom(10);
    group.AddCritter(Content::Critter::Brahmin).Dialog(hstring()).Script(EncounterNpc::_NpcInit).CheckRandom(15);

    // ARROK_Molerats
    group = EncounterGroups[GROUP_ARROK_Molerats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Molerat).Ratio(85).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GreaterMolerat).Ratio(15).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::SmallSilverGecko).Dead(true).Dialog(hstring()).Distance(10).CheckRandom(15);

    // ARROK_Geckos
    group = EncounterGroups[GROUP_ARROK_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::ToughSilverGecko).Ratio(85).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GoldenGecko).Ratio(15).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::PrimitiveMale).Dead(true).Dialog(hstring()).AddItem(Content::Item::spear, 1, 1, SLOT_INV);
    group.AddItem(Content::Item::sharpened_pole).Distance(15);

    // KLA_Trappers
    group = EncounterGroups[GROUP_KLA_Trappers];
    group.TeamNum = 43;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 5;
    group.AddCritter(Content::Critter::MaleTrapper)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::MaleTrapper)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleTrapper)
        .Ratio(17)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleTrapper)
        .Ratio(17)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // KLA_Bandits
    group = EncounterGroups[GROUP_KLA_Bandits];
    group.TeamNum = 0;
    group.Position = POSITION_DOUBLE_LINE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::WeakMeleeGuardMale)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::BanditMale)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::BanditFemale)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // KLA_Homeless
    group = EncounterGroups[GROUP_KLA_Homeless];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 6;
    group.AddCritter(Content::Critter::StrongPeasant2)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::StrongPeasant)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::brass_knuckles, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::WeakPeasant)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharpened_pole, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::WeakPeasant2).Ratio(15).Dialog(hstring()).Script(EncounterNpc::_NpcInit).AddItem(Content::Item::knife, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::Loser).Ratio(4).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::ChildFemale).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::Loser).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::WildDog).Dead(true).Dialog(hstring());

    // KLA_Farmers
    group = EncounterGroups[GROUP_KLA_Farmers];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 1;
    group.AddCritter(Content::Critter::AveragePeasant)
        .Ratio(67)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 0, 3, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::AveragePeasant2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::springer_rifle, 1, 1, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::ChildFemale)
        .Ratio(4)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::mutated_fruit, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::Loser).Ratio(4).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::WildDog).Dead(true).Dialog(hstring());

    // KLA_Golden_Geckos
    group = EncounterGroups[GROUP_KLA_Golden_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 4;
    group.AddCritter(Content::Critter::GoldenGecko).Ratio(85).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughSilverGecko).Ratio(15).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughGoldenGecko).Dialog(hstring()).Script(Mob::_MobInit).CheckRandom(10);
    group.AddCritter(Content::Critter::MaleTrapper).Dead(true).Dialog(hstring()).AddItem(Content::Item::antidote, 1, 1, SLOT_INV);

    // KLAD_Caravan
    group = EncounterGroups[GROUP_KLAD_Caravan];
    group.TeamNum = 43;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::AverageMerchantMale)
        .Dialog(Content::Dialog::enc_klad_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::club, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::rope, 0, 5, SLOT_INV)
        .AddItem(Content::Item::spear, 0, 5, SLOT_INV)
        .AddItem(Content::Item::brahmin_skin, 0, 3, SLOT_INV)
        .AddItem(Content::Item::gecko_pelt, 0, 2, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 0, 4, SLOT_INV)
        .AddItem(Content::Item::sledgehammer, 0, 1, SLOT_INV)
        .AddItem(Content::Item::pump_parts, 0, 4, SLOT_INV)
        .AddItem(Content::Item::pocket_lint, 0, 5, SLOT_INV)
        .AddItem(Content::Item::metal_trash, 0, 5, SLOT_INV);
    group.AddCritter(Content::Critter::WeakMeleeGuardMale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::WeakMeleeGuardFemale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::WeakMeleeGuardMale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::WeakMeleeGuardMale)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // KLAD_Scorpions
    group = EncounterGroups[GROUP_KLAD_Scorpions];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::SmallRadscorpion).Ratio(70).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::LargeRadscorpion).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::AverageMerchant).Dead(true).Dialog(hstring());

    // KLAD_Mole_Pig_Rat
    group = EncounterGroups[GROUP_KLAD_Mole_Pig_Rat];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Molerat).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GreaterMolerat).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::RegularPigRat).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);

    // DMRV_Caravan
    group = EncounterGroups[GROUP_DMRV_Caravan];
    group.TeamNum = 45;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::AverageMerchantMale)
        .Dialog(Content::Dialog::enc_dmrv_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV)
        .AddItem(Content::Item::spear, 2, 5, SLOT_INV)
        .AddItem(Content::Item::sharp_spear, 0, 2, SLOT_INV)
        .AddItem(Content::Item::club, 2, 5, SLOT_INV)
        .AddItem(Content::Item::rope, 2, 4, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::CuteFemaleSlave)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::MaleCombatSlave)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleSlaver)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(15)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Dog).Dialog(hstring()).CheckRandom(10);

    // DMRV_Robbers
    group = EncounterGroups[GROUP_DMRV_Robbers];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugMale)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spiked_knuckles, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugFemale)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::Level, '>', 6)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // DMRV_Highwaymen
    group = EncounterGroups[GROUP_DMRV_Highwaymen];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::AgileMaleThug)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::AgileFemaleThug)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::Level, '>', 6)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);

    // DMRV_Golden_Geckos
    group = EncounterGroups[GROUP_DMRV_Golden_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::ToughGoldenGecko).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GoldenGecko).Ratio(80).Dialog(hstring()).Script(Mob::_MobInit);

    // DMRV_Scorpions
    group = EncounterGroups[GROUP_DMRV_Scorpions];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::LargeRadscorpion).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::SmallRadscorpion).Dead(true).Dialog(hstring());

    // DEN_Slavers
    group = EncounterGroups[GROUP_DEN_Slavers];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleSlaver)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleSlaver)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::CuteFemaleSlave).Ratio(20).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::StrongMaleSlave).Ratio(20).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::GenericFemaleSlave).Ratio(10).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::GenericMaleSlave).Ratio(10).Dialog(hstring()).Script(EncounterNpc::_NpcInit);

    // DEN_Slave_Run
    group = EncounterGroups[GROUP_DEN_Slave_Run];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 0;
    group.AddCritter(Content::Critter::MaleSlaver)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spiked_knuckles, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleSlaver)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::crowbar, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // DEN_Slaves
    group = EncounterGroups[GROUP_DEN_Slaves];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 4;
    group.AddCritter(Content::Critter::HealthyFemaleSlave)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::springer_rifle, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::HealthyMaleSlave)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::MaleOrphan).Ratio(10).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::FemaleOrphan).Ratio(10).Dialog(hstring()).Script(EncounterNpc::_NpcInit);

    // DEN_Rave_Party
    group = EncounterGroups[GROUP_DEN_Rave_Party];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 5;
    group.AddCritter(Content::Critter::WeakPeasant)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::WeakPeasant2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::broc_flower, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::AveragePeasant)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::AveragePeasant2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // DEN_Molerats
    group = EncounterGroups[GROUP_DEN_Molerats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::GreaterMolerat).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::Molerat).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);

    // MOD_Moonshiners
    group = EncounterGroups[GROUP_MOD_Moonshiners];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 7;
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV)
        .AddItem(Content::Item::booze, 0, 5, SLOT_INV)
        .AddItem(Content::Item::bottle_glass, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV)
        .AddItem(Content::Item::booze, 0, 5, SLOT_INV)
        .AddItem(Content::Item::bottle_glass, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleCombatSlave)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::MaleCombatSlave)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::switchblade, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    // group.AddItem((null)).Distance(14).CheckRandom(20);

    // MOD_Wild_Brahmin
    group = EncounterGroups[GROUP_MOD_Wild_Brahmin];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Brahmin).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::WeakBrahmin).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::WildBrahmin).Ratio(50).Dialog(hstring()).Script(Mob::_MobInit);

    // MOD_Mantis
    group = EncounterGroups[GROUP_MOD_Mantis];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Mantis).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MediumMantis).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::LargeRadscorpion).Dead(true).Dialog(hstring()).CheckRandom(15);

    // DVMV_Robbers
    group = EncounterGroups[GROUP_DVMV_Robbers];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugMale)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugFemale)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::jet, 1, 1, SLOT_INV);

    // DVMV_Highwaymen
    group = EncounterGroups[GROUP_DVMV_Highwaymen];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::Level, '>', 5)
        .AddItem(Content::Item::_44_magnum_revolver, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::fn_fal, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::_7_62mm_ammo, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV);

    // DVMV_Wild_Dogs. With deadman for Android encounter
    group = EncounterGroups[GROUP_DVMV_Wild_Dogs];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::WildDog).Ratio(80).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::FemaleNomad).Ratio(15).Dead(true).Dialog(hstring());
    group.AddCritter(Content::Critter::AgileMaleThug)
        .Ratio(5)
        .Dead(true)
        .Dialog(Content::Dialog::se_android_deadman)
        .Script(SeAndroid::_DeadInit)
        .CheckParam(CritterProperty::Level, '>', 15)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 101)
        .CheckRandom(25)
        .CheckProperty(CritterProperty::SpecialAndroid, '=', 0);

    // DVMV_Mantis_Swarm
    group = EncounterGroups[GROUP_DVMV_Mantis_Swarm];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 1;
    group.AddCritter(Content::Critter::MediumMantis).Ratio(80).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::Brahmin).Ratio(20).Dead(true).Dialog(hstring());

    // DVMV_Caravan
    group = EncounterGroups[GROUP_DVMV_Caravan];
    group.TeamNum = 44;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MasterTrader)
        .Dialog(Content::Dialog::enc_dvmv_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::jet, 2, 4, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::brahmin_skin, 0, 5, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 0, 8, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 5, SLOT_INV)
        .AddItem(Content::Item::_10mm_jhp, 0, 48, SLOT_INV)
        .AddItem(Content::Item::_44_magnum_jhp, 0, 10, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 0, 20, SLOT_INV)
        .AddItem(Content::Item::nuka_cola, 1, 5, SLOT_INV)
        .AddItem(Content::Item::_223_fmj, 0, 5, SLOT_INV)
        .AddItem(Content::Item::assault_rifle, 0, 1, SLOT_INV)
        .AddItem(Content::Item::_10mm_smg, 0, 1, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_10mm_jhp, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard2)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::fn_fal, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard2)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::fn_fal, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 15, SLOT_INV);

    // WILD1_Trader
    group = EncounterGroups[GROUP_WILD1_Trader];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::AverageMerchantMale)
        .Dialog(Content::Dialog::enc_wild1_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::pump_parts, 0, 5, SLOT_INV)
        .AddItem(Content::Item::metal_trash, 0, 5, SLOT_INV)
        .AddItem(Content::Item::pocket_lint, 0, 5, SLOT_INV)
        .AddItem(Content::Item::_10mm_smg, 0, 1, SLOT_INV)
        .AddItem(Content::Item::hunting_rifle, 0, 1, SLOT_INV)
        .AddItem(Content::Item::assault_rifle, 0, 1, SLOT_INV)
        .AddItem(Content::Item::rags, 2, 10, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_9mm_mauser, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::GunGuard2)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1);

    // WILD2_Mutated_Molerats
    group = EncounterGroups[GROUP_WILD2_Mutated_Molerats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MutatedMolerat).Ratio(90).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughGuard).Ratio(10).Dead(true).Dialog(hstring());

    // WILD2_Mutated_Pig_Rats
    group = EncounterGroups[GROUP_WILD2_Mutated_Pig_Rats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MutatedPigRat).Ratio(70).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MutatedRat).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughGuard2).Ratio(10).Dead(true).Dialog(hstring());

    // WILD2_Hermit
    group = EncounterGroups[GROUP_WILD2_Hermit];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::HolyMan)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV)
        .AddItem(Content::Item::healing_powder, 0, 2, SLOT_INV);

    // VPAT_Patrol
    group = EncounterGroups[GROUP_VPAT_Patrol];
    group.TeamNum = 38;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);

    // VPAT_Strong_Slavers
    group = EncounterGroups[GROUP_VPAT_Strong_Slavers];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::StrongSlaver)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::molotov_cocktail, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::StrongSlaver2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::StrongSlaver)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::jet, 0, 2, SLOT_INV);
    group.AddCritter(Content::Critter::StrongSlaver2)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::jet, 0, 1, SLOT_INV);

    // GECK_Ghoul_Crazies
    group = EncounterGroups[GROUP_GECK_Ghoul_Crazies];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Crazies)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sawed_off_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::Crazies)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Crazies)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // GECK_Crazies
    group = EncounterGroups[GROUP_GECK_Crazies];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Crazies)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Crazies)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GlowCrazies)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // GECK_Ghoul_Scavs
    group = EncounterGroups[GROUP_GECK_Ghoul_Scavs];
    group.TeamNum = 41;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(33)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::rock, 5, 8, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(32)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::brass_knuckles, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::molotov_cocktail, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // GECK_Scavs
    group = EncounterGroups[GROUP_GECK_Scavs];
    group.TeamNum = 41;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Scavengers)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GlowScavengers)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // GECK_Mutated_Rats
    group = EncounterGroups[GROUP_GECK_Mutated_Rats];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MutatedRat).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // GECK_Geckos
    group = EncounterGroups[GROUP_GECK_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::ToughSilverGecko).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GoldenGecko).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughGoldenGecko).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);

    // FISH_Fisherman
    group = EncounterGroups[GROUP_FISH_Fisherman];
    group.TeamNum = 0;
    group.Position = POSITION_STRAIGHT_LINE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Fisherman)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Fisherwoman)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Fisherman)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Fisherwoman)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);

    // FISH_Wilder
    group = EncounterGroups[GROUP_FISH_Wilder];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Wilder).Ratio(70).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::Wilder2).Ratio(30).Dialog(hstring()).Script(EncounterNpc::_NpcInit);

    // DNRV_Den_Caravan
    group = EncounterGroups[GROUP_DNRV_Den_Caravan];
    group.TeamNum = 45;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::BadMerchantMale)
        .Dialog(Content::Dialog::enc_den_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::spear, 2, 5, SLOT_INV)
        .AddItem(Content::Item::club, 2, 5, SLOT_INV)
        .AddItem(Content::Item::rope, 2, 4, SLOT_INV);
    group.AddCritter(Content::Critter::StrongSlaver)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::SlaverGuard)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::SlaverGuard)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::HealthyFemaleSlave).Ratio(15).Dialog(hstring()).Script(EncounterNpc::_NpcInit);
    group.AddCritter(Content::Critter::HealthyMaleSlave).Ratio(15).Dialog(hstring()).Script(EncounterNpc::_NpcInit);

    // DNRV_Vault_Caravan
    group = EncounterGroups[GROUP_DNRV_Vault_Caravan];
    group.TeamNum = 38;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::AverageMerchantMale)
        .Dialog(Content::Dialog::enc_vault_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::doctors_bag, 2, 4, SLOT_INV)
        .AddItem(Content::Item::first_aid_kit, 2, 4, SLOT_INV)
        .AddItem(Content::Item::antidote, 2, 5, SLOT_INV)
        .AddItem(Content::Item::radaway, 0, 1, SLOT_INV)
        .AddItem(Content::Item::rad_x, 1, 2, SLOT_INV)
        .AddItem(Content::Item::hypodermic_needle, 0, 10, SLOT_INV)
        .AddItem(Content::Item::stimpak, 2, 5, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGuard2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGuard2)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGuard2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // DNRV_Reno_Caravan
    group = EncounterGroups[GROUP_DNRV_Reno_Caravan];
    group.TeamNum = 46;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::AverageMerchant)
        .Dialog(Content::Dialog::enc_reno_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 5, SLOT_INV)
        .AddItem(Content::Item::healing_powder, 3, 5, SLOT_INV)
        .AddItem(Content::Item::mentats, 1, 3, SLOT_INV)
        .AddItem(Content::Item::buffout, 1, 3, SLOT_INV)
        .AddItem(Content::Item::jet, 5, 15, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeGuard)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::AgileGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::frag_grenade, 3, 6, SLOT_HAND1)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV);

    // DNRV_Redding_Caravan
    group = EncounterGroups[GROUP_DNRV_Redding_Caravan];
    group.TeamNum = 39;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MasterMerchantFemale)
        .Dialog(Content::Dialog::enc_redd_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::gold_nugget, 3, 20, SLOT_INV)
        .AddItem(Content::Item::jet, 4, 10, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_5mm_jhp, 20, 80, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_14mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GunGuard2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RED_Bootlegger
    group = EncounterGroups[GROUP_RED_Bootlegger];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Bootlegger)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Bootlegger)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::booze, 0, 5, SLOT_INV)
        .AddItem(Content::Item::bottle_glass, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Bootlegger)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::pancor_jackhammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Bootlegger2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV)
        .AddItem(Content::Item::bottle_glass, 0, 10, SLOT_INV);
    group.AddCritter(Content::Critter::Bootlegger2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    // group.AddItem((null)).Distance(14).CheckRandom(10);

    // RED_Trappers
    group = EncounterGroups[GROUP_RED_Trappers];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 5;
    group.AddCritter(Content::Critter::MeleeThugMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_14mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::MeleeThugFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RED_Prospector
    group = EncounterGroups[GROUP_RED_Prospector];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 4;
    group.AddCritter(Content::Critter::Prospector)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Prospector)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Prospector)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::pancor_jackhammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Prospector2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::Prospector2)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RED_Claim_Jumper
    group = EncounterGroups[GROUP_RED_Claim_Jumper];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::m60, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::needler_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RED_Wolves
    group = EncounterGroups[GROUP_RED_Wolves];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 0;
    group.AddCritter(Content::Critter::WildDog).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // RED_Homesteaders
    group = EncounterGroups[GROUP_RED_Homesteaders];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::HomesteaderMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::cattle_prod, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::HomesteaderMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::cattle_prod, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::HomesteaderFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::HomesteaderFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RDRC_Broken_Hills_Caravan
    group = EncounterGroups[GROUP_RDRC_Broken_Hills_Caravan];
    group.TeamNum = 40;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MasterMerchantFemale)
        .Dialog(Content::Dialog::enc_brok_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV)
        .AddItem(Content::Item::uranium_ore, 2, 10, SLOT_INV)
        .AddItem(Content::Item::sledgehammer, 1, 1, SLOT_INV)
        .AddItem(Content::Item::dynamite, 2, 4, SLOT_INV)
        .AddItem(Content::Item::first_aid_kit, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardMale)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_5mm_jhp, 20, 80, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardMale)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_5mm_jhp, 20, 80, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardFemale)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // RDRC_Gecko_Caravan
    group = EncounterGroups[GROUP_RDRC_Gecko_Caravan];
    group.TeamNum = 41;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::GenericGhoul)
        .Dialog(Content::Dialog::enc_geck_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 3, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::leather_jacket, 0, 1, SLOT_INV)
        .AddItem(Content::Item::wrench, 1, 3, SLOT_INV)
        .AddItem(Content::Item::multi_tool, 1, 1, SLOT_INV)
        .AddItem(Content::Item::oil_can, 0, 1, SLOT_INV)
        .AddItem(Content::Item::metal_trash, 2, 8, SLOT_INV)
        .AddItem(Content::Item::welding, 0, 1, SLOT_INV)
        .AddItem(Content::Item::pump_parts, 2, 5, SLOT_INV);
    group.AddCritter(Content::Critter::GenericGhoul)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GenericGhoul)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);
    group.AddCritter(Content::Critter::GenericGhoul)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 20, SLOT_INV);

    // RDRC_Raiders
    group = EncounterGroups[GROUP_RDRC_Raiders];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::RaiderMale)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::RaiderMale)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::RaiderFemale)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::RaiderFemale)
        .Ratio(35)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // EPA_Fire_Geckos
    group = EncounterGroups[GROUP_EPA_Fire_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::FireGecko)
        .Ratio(100)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::fire_gecko_flame_weapon, 1, 1, SLOT_HAND1);

    // EPA_Tough_Fire_Geckos
    group = EncounterGroups[GROUP_EPA_Tough_Fire_Geckos];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::FireGecko)
        .Ratio(40)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::fire_gecko_flame_weapon, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ToughFireGecko)
        .Ratio(60)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::fire_gecko_flame_weapon, 1, 1, SLOT_HAND1);

    // EPA_Alien
    group = EncounterGroups[GROUP_EPA_Alien];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Alien).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // EPA_Tough_Alien
    group = EncounterGroups[GROUP_EPA_Tough_Alien];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Alien).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::ToughAlien).Ratio(70).Dialog(hstring()).Script(Mob::_MobInit);

    // EPA_Deathclaws
    group = EncounterGroups[GROUP_EPA_Deathclaws];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::SmToughDeathclaw)
        .Ratio(70)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::deathclaw_claw_1, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ToughDeathclaw)
        .Ratio(15)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::deathclaw_claw_1, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ToughDeathclaw)
        .Ratio(15)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .CheckRandom(10)
        .AddItem(Content::Item::deathclaw_claw_2, 1, 1, SLOT_HAND1);

    // EPA_Centaurs
    group = EncounterGroups[GROUP_EPA_Centaurs];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Centaur).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MeanCentaur).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);

    // EPA_Floaters
    group = EncounterGroups[GROUP_EPA_Floaters];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Floater).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::NastyFloater).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);

    // EPA_Floater_Centaurs
    group = EncounterGroups[GROUP_EPA_Floater_Centaurs];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Centaur).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MeanCentaur).Ratio(20).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::Floater).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::NastyFloater).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);

    // NAV_Enclave_Patrol
    group = EncounterGroups[GROUP_NAV_Enclave_Patrol];
    group.TeamNum = 47;
    group.Position = POSITION_DOUBLE_LINE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::EnclavePatrolMale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(10)
        .AddItem(Content::Item::avenger_minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::EnclavePatrolMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::EnclavePatrolMale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(10)
        .AddItem(Content::Item::hk_g11e, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::EnclavePatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(10)
        .AddItem(Content::Item::gatling_laser, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::EnclavePatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::yk32_pulse_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::EnclavePatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::pk12_gauss_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // FRAN_Mercenaries
    group = EncounterGroups[GROUP_FRAN_Mercenaries];
    group.TeamNum = 0;
    group.Position = POSITION_DOUBLE_LINE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MercenaryMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::MercenaryMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::needler_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::MercenearyFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_grenade, 4, 8, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::MercenearyFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::ripper, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // FRAN_Elronologists
    group = EncounterGroups[GROUP_FRAN_Elronologists];
    group.TeamNum = 36;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::ElronologistMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::power_fist, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::ElronologistMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_g11e, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::ElronologistFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_grenade, 4, 8, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::ElronologistFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_g11e, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // FRAN_Press_Gang
    group = EncounterGroups[GROUP_FRAN_Press_Gang];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::PressGangMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(BrokenCommon::_SaboteurInit)
        .AddItem(Content::Item::power_fist, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::PressGangMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(BrokenCommon::_SaboteurInit)
        .AddItem(Content::Item::ripper, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::PressGangFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(BrokenCommon::_SaboteurInit)
        .AddItem(Content::Item::power_fist, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::PressGangFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(BrokenCommon::_SaboteurInit)
        .AddItem(Content::Item::ripper, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);

    // FRAN2_San_Fran_Caravan
    group = EncounterGroups[GROUP_FRAN2_San_Fran_Caravan];
    group.TeamNum = 48;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::GrandMasterTraderMale)
        .Dialog(Content::Dialog::enc_fran_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::needler_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 70, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 0, 5, SLOT_INV)
        .AddItem(Content::Item::rocket_ap, 0, 5, SLOT_INV)
        .AddItem(Content::Item::_223_fmj, 0, 100, SLOT_INV)
        .AddItem(Content::Item::rot_gut, 2, 5, SLOT_INV)
        .AddItem(Content::Item::explosive_rocket, 0, 3, SLOT_INV)
        .AddItem(Content::Item::rocket_ap, 0, 2, SLOT_INV)
        .AddItem(Content::Item::flamethrower_fuel, 0, 15, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::laser_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::laser_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::avenger_minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::light_support_weapon, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_p90c, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // BROK_Unity_Patrol
    group = EncounterGroups[GROUP_BROK_Unity_Patrol];
    group.TeamNum = 40;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Nightkin)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughNightkin)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::rocket_ap, 3, 5, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGhoul)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughGhoul)
        .Ratio(15)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardMale)
        .Ratio(12)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunGuardFemale)
        .Ratio(13)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::explosive_rocket, 3, 5, SLOT_INV);

    // BROK_Rogues
    group = EncounterGroups[GROUP_BROK_Rogues];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::shotgun_shells, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::pancor_jackhammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunThugFemale)
        .Ratio(10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunThugMale)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // NEW_Mobsters
    group = EncounterGroups[GROUP_NEW_Mobsters];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Mobster)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::tommy_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::FemaleGunThug)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::tommy_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);

    // NEW_Yakuza
    group = EncounterGroups[GROUP_NEW_Yakuza];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Yakuza)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::wakizashi_blade, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::Yakuza)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::wakizashi_blade, 1, 1, SLOT_INV)
        .AddItem(Content::Item::throwing_knife, 4, 7, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);

    // NEW_Gang
    group = EncounterGroups[GROUP_NEW_Gang];
    group.TeamNum = 46;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(20)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::AgileFemaleThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_14mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunThugFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_223_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // NEW_Traveller
    group = EncounterGroups[GROUP_NEW_Traveller];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::HomesteaderFemale)
        .Dialog(Content::Dialog::enc_trav_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV)
        .AddItem(Content::Item::flare, 1, 1, SLOT_INV)
        .AddItem(Content::Item::rags, 0, 10, SLOT_INV)
        .AddItem(Content::Item::pocket_lint, 0, 5, SLOT_INV)
        .AddItem(Content::Item::broc_flower, 0, 5, SLOT_INV)
        .AddItem(Content::Item::xander_root, 0, 5, SLOT_INV);

    // NCR_Rangers
    group = EncounterGroups[GROUP_NCR_Rangers];
    group.TeamNum = 37;
    group.Position = POSITION_NONE;
    group.Spacing = 0;
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);

    // NCR_Marauders
    group = EncounterGroups[GROUP_NCR_Marauders];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MauraderMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::MauraderMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_p90c, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::MauraderFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::MauraderFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // NCR_Masters_Army
    group = EncounterGroups[GROUP_NCR_Masters_Army];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 5;
    group.AddCritter(Content::Critter::ToughNightkin).Ratio(25).Dialog(hstring()).Script(Mob::_MobInit).AddItem(Content::Item::laser_rifle, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::Nightkin)
        .Ratio(10)
        .Dialog(hstring())
        .Script(Mob::_MobInit)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::explosive_rocket, 2, 5, SLOT_INV);
    group.AddCritter(Content::Critter::Centaur).Ratio(35).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::Floater).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);

    // NCR_Caravan
    group = EncounterGroups[GROUP_NCR_Caravan];
    group.TeamNum = 37;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MasterMerchantFemale)
        .Dialog(Content::Dialog::enc_ncr_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 60, SLOT_INV)
        .AddItem(Content::Item::scout_handbook, 2, 4, SLOT_INV)
        .AddItem(Content::Item::broc_flower, 0, 5, SLOT_INV)
        .AddItem(Content::Item::xander_root, 0, 5, SLOT_INV)
        .AddItem(Content::Item::brahmin_skin, 0, 12, SLOT_INV)
        .AddItem(Content::Item::meat_jerky, 0, 45, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 40, SLOT_INV);

    // V15_Caravan
    group = EncounterGroups[GROUP_V15_Caravan];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MasterMerchantFemale)
        .Dialog(Content::Dialog::enc_v15_trader)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV)
        .AddItem(Content::Item::mutated_fruit, 0, 5, SLOT_INV)
        .AddItem(Content::Item::brahmin_skin, 0, 5, SLOT_INV)
        .AddItem(Content::Item::_223_fmj, 0, 50, SLOT_INV)
        .AddItem(Content::Item::meat_jerky, 0, 12, SLOT_INV)
        .AddItem(Content::Item::leather_jacket, 0, 1, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Dialog(Content::Dialog::enc_caravan_guard)
        .CheckGVar(GameProperty::GameEventCaches, '>', 0)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerMale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::NCRRangerFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::grease_gun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // V15_Squatters
    group = EncounterGroups[GROUP_V15_Squatters];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 3;
    group.AddCritter(Content::Critter::Prospector)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::Prospector2)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // Special1
    group = EncounterGroups[GROUP_Special1];
    group.TeamNum = 0;
    group.Position = POSITION_NONE;
    group.Spacing = 0;
    group.AddItem(Content::Item::rock);

    // Bounty_Hunter_Low
    group = EncounterGroups[GROUP_Bounty_Hunter_Low];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::BountyHunter_1)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::healing_powder, 1, 3, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 10, 20, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_2)
        .Ratio(100)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::desert_eagle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::healing_powder, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 5, 15, SLOT_INV);

    // Bounty_Hunter_Low_Mid
    group = EncounterGroups[GROUP_Bounty_Hunter_Low_Mid];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::BountyHunter_3)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sniper_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 20, 50, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_1)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::healing_powder, 1, 3, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 10, 20, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_4)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_14mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 15, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_4)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::super_sledge, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 15, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_5)
        .Ratio(30)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_INV)
        .AddItem(Content::Item::frag_grenade, 3, 8, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 15, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_5)
        .Ratio(20)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckRandom(15)
        .AddItem(Content::Item::assault_rifle, 1, 1, SLOT_INV)
        .AddItem(Content::Item::frag_grenade, 3, 8, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 15, 30, SLOT_INV);

    // Bounty_Hunter_High_Mid
    group = EncounterGroups[GROUP_Bounty_Hunter_High_Mid];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::BountyHunter_6)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::laser_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::micro_fusion_cell, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 30, 70, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_3)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sniper_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::combat_knife, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 20, 50, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_7)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::laser_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 25, 40, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_7)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1)
        .AddItem(Content::Item::hk_p90c, 1, 1, SLOT_INV)
        .AddItem(Content::Item::frag_grenade, 2, 5, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 25, 40, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_7)
        .Ratio(50)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::frag_grenade, 2, 5, SLOT_HAND1)
        .AddItem(Content::Item::power_fist, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 25, 40, SLOT_INV);

    // Bounty_Hunter_High
    group = EncounterGroups[GROUP_Bounty_Hunter_High];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::BountyHunter_9)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::m72_gauss_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 2, 4, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 40, 80, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_6)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::micro_fusion_cell, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 30, 70, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::plasma_grenade, 2, 4, SLOT_HAND1)
        .AddItem(Content::Item::ripper, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 35, 50, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '<', 2)
        .AddItem(Content::Item::plasma_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 35, 50, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1)
        .AddItem(Content::Item::vindicator_minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 35, 50, SLOT_INV);
    group.AddCritter(Content::Critter::BountyHunter_10)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckParam(CritterProperty::Level, '>', 27)
        .AddItem(Content::Item::plasma_grenade, 2, 4, SLOT_HAND1)
        .AddItem(Content::Item::plasma_pistol, 1, 1, SLOT_INV)
        .AddItem(Content::Item::stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 35, 50, SLOT_INV);

    // Morton_Brother
    group = EncounterGroups[GROUP_Morton_Brother];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::RaiderMale)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckProperty(CritterProperty::ReddingMortonBrothers, '=', 1)
        .AddItem(Content::Item::hk_caws, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::MysteriousStranger7)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckProperty(CritterProperty::ReddingMortonBrothers, '=', 3)
        .AddItem(Content::Item::light_support_weapon, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::BountyHunter_7)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .CheckProperty(CritterProperty::ReddingMortonBrothers, '=', 5)
        .AddItem(Content::Item::hk_g11e, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::MaleGunThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::combat_shotgun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::AgileFemaleThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_14mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::BigGunThugFemale)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(25)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_223_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // ARRO_Ants
    group = EncounterGroups[GROUP_ARRO_Ants];
    group.TeamNum = 0;
    group.Position = POSITION_NONE;
    group.Spacing = 0;
    group.AddCritter(Content::Critter::Ant).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // Game_Foreshadowing
    group = EncounterGroups[GROUP_Game_Foreshadowing];
    group.TeamNum = 0;
    group.Position = POSITION_NONE;
    group.Spacing = 0;
    group.AddItem(Content::Item::rock);

    // SF Mirelurk invasion (FOnline)
    group = EncounterGroups[GROUP_SF_Mirelurk];
    group.TeamNum = 0;
    group.Position = POSITION_SURROUNDING;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::GiantWasp).Ratio(70).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::GiantBeetle).Ratio(30).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::Critter_486)
        .Dead(true)
        .Dialog(hstring())
        .CheckRandom(10)
        .CheckGVar(GameProperty::SFBosArmourCounter, '>', 0)
        .CheckParam(CritterProperty::Level, '>', 2)
        .Script(SfInvasion::_DeadPaladinInit);

    // Rangers patrol quest raiders (FOnline)
    group = EncounterGroups[GROUP_NCR_Patrol_Raiders];
    group.TeamNum = 8; // TEAM_Bandit
    group.Position = POSITION_STRAIGHT_LINE;
    group.Distance = 15;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(20)
        .Dialog(hstring())
        .Script(AiPattern::_Term1Init)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::explosive_rocket, 3, 6, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughMaleThug)
        .Ratio(30)
        .Dialog(hstring())
        .Script(AiPattern::_Term1Init)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_5mm_jhp, 100, 200, SLOT_INV)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::ToughFemaleThug)
        .Ratio(20)
        .Dialog(hstring())
        .Script(AiPattern::_Medic2Init)
        .AddItem(Content::Item::laser_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::MercenaryCaptain)
        .Ratio(30)
        .Dialog(hstring())
        .Script(AiPattern::_Sniper1Init)
        .AddItem(Content::Item::hunting_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_223_fmj, 33, 44, SLOT_HAND2)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // Rangers patrol quest rebels (FOnline)
    group = EncounterGroups[GROUP_NCR_Patrol_Rebels];
    group.TeamNum = 8; // TEAM_Bandit
    group.Position = POSITION_SURROUNDING;
    group.Distance = 15;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(20)
        .Dialog(Content::Dialog::crvg_ncr_patroller)
        .Script(AiPattern::_Term1Init)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::super_stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::_5mm_jhp, 100, 200, SLOT_INV)
        .AddItem(Content::Item::explosive_rocket, 3, 6, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(30)
        .Dialog(Content::Dialog::crvg_ncr_patroller)
        .Script(AiPattern::_Slayer2Init)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_5mm_jhp, 100, 200, SLOT_INV)
        .AddItem(Content::Item::super_stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(20)
        .Dialog(Content::Dialog::crvg_ncr_patroller)
        .Script(AiPattern::_Medic2Init)
        .AddItem(Content::Item::laser_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::super_stimpak, 3, 5, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);
    group.AddCritter(Content::Critter::VaultCityPatrolMale)
        .Ratio(30)
        .Dialog(Content::Dialog::crvg_ncr_patroller)
        .Script(AiPattern::_Sniper4Init)
        .AddItem(Content::Item::sniper_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::super_stimpak, 1, 2, SLOT_INV)
        .AddItem(Content::Item::_223_fmj, 33, 44, SLOT_HAND2)
        .AddItem(Content::Item::bottle_caps, 0, 30, SLOT_INV);

    // Arroyo patrol (FOnline)
    group = EncounterGroups[GROUP_ARRO_Patrol];
    group.TeamNum = 42;
    group.Position = POSITION_WEDGE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ArroyoPatrol)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ArroyoPatrol)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ArroyoPatrol2)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::radio, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::bottle_caps, 5, 35, SLOT_INV)
        .AddItem(Content::Item::stimpak, 0, 1, SLOT_INV);
    group.AddCritter(Content::Critter::ArroyoPatrol3)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 0, 2, SLOT_INV);
    group.AddCritter(Content::Critter::ArroyoPatrol2)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::spear, 1, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::ArroyoPatrol)
        .Dialog(Content::Dialog::enc_arroyo_patrol)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::radio, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::_10mm_smg, 1, 1, SLOT_HAND1);

    // Hubologists hell partol (FOnline)
    group = EncounterGroups[GROUP_HELL_Patrol];
    group.TeamNum = 36;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ElronologistMale)
        .Ratio(50)
        .Dialog(Content::Dialog::enc_hell_patrol_hub)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::needler_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::hn_needler_cartridge, 0, 10, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::ElronologistFemale)
        .Ratio(25)
        .Dialog(Content::Dialog::enc_hell_patrol_hub)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::frag_grenade, 4, 6, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::ElronologistFemale)
        .Ratio(25)
        .Dialog(Content::Dialog::enc_hell_patrol_hub)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::needler_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::hn_needler_cartridge, 0, 10, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // Reinforced hubologists hell partol (FOnline)
    group = EncounterGroups[GROUP_HELL_Patrol_R];
    group.TeamNum = 36;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::ElronologistMale)
        .Dialog(Content::Dialog::enc_hell_patrol_hub)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::hk_g11, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::HubologistGuard)
        .Dialog(Content::Dialog::enc_hell_patrol_guard)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::fn_fal, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_7_62mm_ammo, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 0, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::HubologistGuard)
        .Dialog(Content::Dialog::enc_hell_patrol_guard)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::pancor_jackhammer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::club, 1, 1, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);
    group.AddCritter(Content::Critter::HubologistGuard)
        .Dialog(Content::Dialog::enc_hell_patrol_guard)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::explosive_rocket, 2, 5, SLOT_INV)
        .AddItem(Content::Item::club, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::HubologistGuard)
        .Dialog(Content::Dialog::enc_hell_patrol_guard)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::flamethrower_fuel, 2, 8, SLOT_INV)
        .AddItem(Content::Item::club, 1, 1, SLOT_INV);
    group.AddCritter(Content::Critter::HubologistGuard2)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::laser_pistol, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::stimpak, 0, 2, SLOT_INV);

    // Hell fugitives (FOnline)
    group = EncounterGroups[GROUP_HELL_Fugitives];
    group.TeamNum = 0;
    group.Position = POSITION_WEDGE;
    group.Spacing = 1;
    group.AddCritter(Content::Critter::Fugitive)
        .Ratio(40)
        .Dialog(Content::Dialog::enc_hell_fugitive)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::club, 0, 1, SLOT_HAND1)
        .AddItem(Content::Item::sledgehammer, 0, 1, SLOT_INV)
        .AddItem(Content::Item::sharpened_pole, 0, 2, SLOT_INV);
    group.AddCritter(Content::Critter::Fugitive2)
        .Ratio(10)
        .Dialog(Content::Dialog::enc_hell_fugitive)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sledgehammer, 0, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::Fugitive3)
        .Ratio(15)
        .Dialog(Content::Dialog::enc_hell_fugitive)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::sharp_spear, 0, 1, SLOT_HAND1);
    group.AddCritter(Content::Critter::Fugitive4)
        .Ratio(25)
        .Dialog(Content::Dialog::enc_hell_fugitive)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::rock, 0, 8, SLOT_HAND1)
        .AddItem(Content::Item::knife, 0, 1, SLOT_INV);
    group.AddCritter(Content::Critter::Fugitive5)
        .Ratio(10)
        .Dialog(Content::Dialog::enc_hell_fugitive)
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::knife, 0, 1, SLOT_HAND1);

    // Water voles (FOnline)
    group = EncounterGroups[GROUP_OCEAN_W_Voles_Low];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::RegularRat).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // Strong water voles (FOnline)
    group = EncounterGroups[GROUP_OCEAN_W_Voles_High];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::MutatedRat).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // Mutated water voles (FOnline)
    group = EncounterGroups[GROUP_OCEAN_W_Voles_Mutated];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::GreaterMolerat).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MutatedMolerat).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);

    // Ocean mantis (FOnline)
    group = EncounterGroups[GROUP_OCEAN_Mantis];
    group.TeamNum = 0;
    group.Position = POSITION_HUDDLE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::Mantis).Ratio(40).Dialog(hstring()).Script(Mob::_MobInit);
    group.AddCritter(Content::Critter::MediumMantis).Ratio(60).Dialog(hstring()).Script(Mob::_MobInit);

    // Ocean wasps (FOnline)
    group = EncounterGroups[GROUP_OCEAN_Wasps];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::GiantWasp).Ratio(100).Dialog(hstring()).Script(Mob::_MobInit);

    // Lynett Hitman (FOnline)
    group = EncounterGroups[GROUP_QUEST_Lynett_Hitman];
    group.TeamNum = 0;
    group.Position = POSITION_CONE;
    group.Spacing = 2;
    group.AddCritter(Content::Critter::NCRRangerMale).Ratio(100).Dialog(Content::Dialog::vc_killer).Script(VcLynnet::_KillerInit);
    // Carlos Jackals
    group = EncounterGroups[GROUP_QUEST_Carlos_Jackals];
    group.TeamNum = 8;
    group.Position = POSITION_CONE;
    group.Spacing = 4;
    group.Distance = 10;
    group.AddCritter(Content::Critter::JackalSniper)
        .Ratio(40)
        .Dialog(hstring())
        .Script(AiPattern::_Sniper4Init)
        .AddItem(Content::Item::sniper_rifle, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_223_fmj, 40, 70, SLOT_HAND2)
        .AddItem(Content::Item::frag_grenade, 0, 2, SLOT_HAND1)
        .AddItem(Content::Item::super_stimpak, 3, 4, SLOT_INV);
    group.AddCritter(Content::Critter::JackalTerminator)
        .Ratio(40)
        .Dialog(hstring())
        .Script(AiPattern::_Term3Init)
        .AddItem(Content::Item::rocket_launcher, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::explosive_rocket, 5, 5, SLOT_INV)
        .AddItem(Content::Item::minigun, 1, 1, SLOT_HAND2)
        .AddItem(Content::Item::super_stimpak, 1, 1, SLOT_INV)
        .AddItem(Content::Item::_5mm_jhp, 100, 400, SLOT_INV)
        .AddItem(Content::Item::flamer, 1, 1, SLOT_INV)
        .AddItem(Content::Item::flamethrower_fuel, 2, 8, SLOT_INV);
    group.AddCritter(Content::Critter::JackalSniper)
        .Ratio(40)
        .Dialog(hstring())
        .Script(EncounterNpc::_NpcInit)
        .AddItem(Content::Item::fn_fal, 1, 1, SLOT_HAND1)
        .AddItem(Content::Item::_7_62mm_ammo, 0, 20, SLOT_INV)
        .AddItem(Content::Item::stimpak, 0, 2, SLOT_INV)
        .AddItem(Content::Item::bottle_caps, 0, 50, SLOT_INV);

    // Global tables
    CEncounterTable globalTable = CEncounterTable();
    globalTable.AddEncounter(15, 10033040)
        .AddGroup(GROUP_Bounty_Hunter_Low, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '<', 7)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1);
    globalTable.AddEncounter(15, 10033050)
        .AddGroup(GROUP_Bounty_Hunter_Low_Mid, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 6)
        .CheckParam(CritterProperty::Level, '<', 13)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1);
    globalTable.AddEncounter(15, 10033060)
        .AddGroup(GROUP_Bounty_Hunter_High_Mid, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckParam(CritterProperty::Level, '<', 19)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1);
    globalTable.AddEncounter(15, 10033070)
        .AddGroup(GROUP_Bounty_Hunter_High, 2, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 18)
        .CheckParam(CritterProperty::KarmaPerkChildkiller, '>', 1);
    globalTable.AddEncounter(15, 10033080)
        .AddGroup(GROUP_Bounty_Hunter_Low, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '<', 7)
        .CheckParam(CritterProperty::Karma, '<', -500);
    globalTable.AddEncounter(15, 10033090)
        .AddGroup(GROUP_Bounty_Hunter_Low_Mid, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 6)
        .CheckParam(CritterProperty::Level, '<', 13)
        .CheckParam(CritterProperty::Karma, '<', -500);
    globalTable.AddEncounter(15, 10033100)
        .AddGroup(GROUP_Bounty_Hunter_High_Mid, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckParam(CritterProperty::Level, '<', 19)
        .CheckParam(CritterProperty::Karma, '<', -500);
    globalTable.AddEncounter(15, 10033110)
        .AddGroup(GROUP_Bounty_Hunter_High, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::Level, '>', 18)
        .CheckParam(CritterProperty::Karma, '<', -500);
    globalTable.AddEncounter(10, 10033120)
        .AddGroup(GROUP_Morton_Brother, 4, 7)
        .CheckProperty(CritterProperty::ReddingMortonBrothers, '>', 0)
        .CheckProperty(CritterProperty::ReddingMortonBrothers, '<', 6)
        .AssignProperty(CritterProperty::ReddingMortonBrothers, '=', 6);
    globalTable.AddEncounter(15, 10033070)
        .AddGroup(GROUP_Bounty_Hunter_High, 2, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckParam(CritterProperty::KarmaPerkPedobear, '>', 0);
    globalTable.AddEncounter(10, 10030050)
        .AddGroup(GROUP_QUEST_Lynett_Hitman, 1, 1)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::VCLynettRefuse, '=', 1)
        .AssignProperty(CritterProperty::VCLynettRefuse, '=', 2);
    globalTable.AddEncounter(1, 10030060)
        .Special(true)
        .LocationPid(Content::Location::broc_and_xander)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBaxChurch, '<', 1)
        .CheckParam(CritterProperty::Karma, '>', 150)
        .AssignProperty(CritterProperty::SpecialEncounterBaxChurch, '=', 1);
    globalTable.AddEncounter(1, 10030070)
        .Special(true)
        .LocationPid(Content::Location::tim_cain)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounteTim, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounteTim, '=', 1);
    globalTable.AddEncounter(50, 10030080)
        .AddGroup(GROUP_QUEST_Carlos_Jackals, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Special(true)
        .Fighting(0, 1)
        .CheckGVar(GameProperty::RacingEvent, '=', 1)
        .CheckPropertyAny(CritterProperty::DenBillRacingWin, '=', 2)
        .CheckParamAny(CritterProperty::SkillSneak, '>', 140)
        .CheckPropertyAny(CritterProperty::RacingSneakersTrap, '=', 0)
        .AssignProperty(CritterProperty::RacingSneakersTrap, '=', 1);
    // Add yours special encounters here
    AddTableToAllTables(globalTable);

    // Local tables
    CEncounterTable table;

    // Arro_M (Areas around Arroyo to nearly the ocean)
    table = EncounterTables[TABLE_Arro_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddEncounter(6, 10032990).AddGroup(GROUP_ARRO_Patrol, 3, 6).CheckProperty(CritterProperty::EncLoyalityArroyo, '<', 8);
    table.AddEncounter(6, 10032990)
        .AddGroup(GROUP_ARRO_Patrol, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityArroyo, '>', 7);
    table.AddEncounter(9, 10033000).AddGroup(GROUP_ARRO_War_Party, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10033010).AddGroup(GROUP_ARRO_Cannibals, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10033020)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_ARRO_Silver_Geckos, 1, 2)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10033030).AddGroup(GROUP_ARRO_Silver_Geckos, 1, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033130).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033140).AddGroup(GROUP_ARRO_Spore_Plants, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033150).AddGroup(GROUP_ARRO_Pig_Rats, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033160).AddGroup(GROUP_ARRO_Rats, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10033170)
        .AddGroup(GROUP_ARRO_Hunting_Party, 2, 4)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(3, 10033180).AddGroup(GROUP_ARRO_Ants, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10033190).AddGroup(GROUP_ARRO_Hunting_Party, 2, 4).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).Fighting(0, 1);
    table.AddEncounter(3, 10033200).AddGroup(GROUP_ARRO_Pig_Rats, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(4, 10033210).AddGroup(GROUP_ARRO_Sm_Scorpions, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(4, 10033220).AddGroup(GROUP_ARRO_Ants, 5, 8);
    table.AddEncounter(5, 10033230).AddGroup(GROUP_ARRO_Hunting_Party, 3, 6);
    table.AddEncounter(5, 10033240).AddGroup(GROUP_ARRO_Nomads, 3, 5);
    table.AddEncounter(1, 10033250)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10033260)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Arro_D (Areas around Arroyo to nearly the ocean)
    table = EncounterTables[TABLE_Arro_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddEncounter(6, 10033490).AddGroup(GROUP_ARRO_Patrol, 3, 6).CheckProperty(CritterProperty::EncLoyalityArroyo, '<', 8);
    table.AddEncounter(6, 10033490)
        .AddGroup(GROUP_ARRO_Patrol, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityArroyo, '>', 7);
    table.AddEncounter(2, 10033500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10033510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10033520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(9, 10033530).AddGroup(GROUP_ARRO_War_Party, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10033630).AddGroup(GROUP_ARRO_Cannibals, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10033640)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_ARRO_Silver_Geckos, 1, 2)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10033650).AddGroup(GROUP_ARRO_Silver_Geckos, 1, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033660).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033670).AddGroup(GROUP_ARRO_Spore_Plants, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033680).AddGroup(GROUP_ARRO_Pig_Rats, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10033690).AddGroup(GROUP_ARRO_Rats, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10033700)
        .AddGroup(GROUP_ARRO_Hunting_Party, 2, 4)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(3, 10033710).AddGroup(GROUP_ARRO_Ants, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10033720).AddGroup(GROUP_ARRO_Hunting_Party, 2, 4).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).Fighting(0, 1);
    table.AddEncounter(2, 10033730).AddGroup(GROUP_ARRO_Pig_Rats, 4, 6);
    table.AddEncounter(4, 10033740).AddGroup(GROUP_ARRO_Sm_Scorpions, 2, 4);
    table.AddEncounter(4, 10033750).AddGroup(GROUP_ARRO_Ants, 5, 8);
    table.AddEncounter(5, 10033760).AddGroup(GROUP_ARRO_Hunting_Party, 3, 6);
    table.AddEncounter(5, 10033770).AddGroup(GROUP_ARRO_Nomads, 3, 5);
    table.AddEncounter(1, 10033780)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10033790)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10033800)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10033810)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10033820)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10033830)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10033840)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // Arro_O (Areas around Arroyo to nearly the ocean)
    table = EncounterTables[TABLE_Arro_O];
    table.AddLocationPid(Content::Location::coast_9);
    table.AddLocationPid(Content::Location::coast_8);
    table.AddLocationPid(Content::Location::coast_4);
    table.AddLocationPid(Content::Location::coast_3);
    table.AddEncounter(6, 10033990).AddGroup(GROUP_ARRO_Patrol, 3, 6).CheckProperty(CritterProperty::EncLoyalityArroyo, '<', 8);
    table.AddEncounter(6, 10033990)
        .AddGroup(GROUP_ARRO_Patrol, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityArroyo, '>', 7);
    table.AddEncounter(9, 10034000).AddGroup(GROUP_ARRO_War_Party, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10034010).AddGroup(GROUP_ARRO_Cannibals, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10034020)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_ARRO_Silver_Geckos, 1, 2)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10034030).AddGroup(GROUP_ARRO_Silver_Geckos, 1, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10034130).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10034140).AddGroup(GROUP_ARRO_Spore_Plants, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10034150).AddGroup(GROUP_ARRO_Pig_Rats, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10034160).AddGroup(GROUP_ARRO_Rats, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10034170)
        .AddGroup(GROUP_ARRO_Hunting_Party, 2, 4)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(3, 10034180).AddGroup(GROUP_ARRO_Ants, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10034190).AddGroup(GROUP_ARRO_Hunting_Party, 2, 4).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6).Fighting(0, 1);
    table.AddEncounter(4, 10034200).AddGroup(GROUP_ARRO_Pig_Rats, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(4, 10034210).AddGroup(GROUP_ARRO_Sm_Scorpions, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(4, 10034220).AddGroup(GROUP_ARRO_Ants, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10034230).AddGroup(GROUP_ARRO_Hunting_Party, 3, 6);
    table.AddEncounter(5, 10034240).AddGroup(GROUP_ARRO_Nomads, 3, 5);

    // Arrok_D (Arroyo Klamath Trade Route)
    table = EncounterTables[TABLE_Arrok_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10034500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10034510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10034520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10034530).AddGroup(GROUP_ARRO_Outcasts, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10034630).AddGroup(GROUP_ARRO_Holy_People, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10034640)
        .AddGroup(GROUP_ARRO_Silver_Geckos, 1, 2)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10034650).AddGroup(GROUP_ARROK_Geckos, 1, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10034660)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10034670).AddGroup(GROUP_ARRO_Spore_Plants, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10034680).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10034690).AddGroup(GROUP_ARROK_Molerats, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10034700)
        .AddGroup(GROUP_ARRO_Holy_People, 4, 6)
        .AddGroup(GROUP_ARRO_War_Party, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(6, 10034710).AddGroup(GROUP_ARRO_Nomads, 2, 4);
    table.AddEncounter(1, 10034720)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10034730)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10034740)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10034750)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10034760)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10034770)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10034780)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034790)
        .Special(true)
        .LocationPid(Content::Location::wasteland_children)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialWastelandChildren, '<', 1)
        .AssignProperty(CritterProperty::SpecialWastelandChildren, '=', 1);

    // Arrok_M (Arroyo Klamath Trade Route)
    table = EncounterTables[TABLE_Arrok_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddEncounter(10, 10035000).AddGroup(GROUP_ARRO_Outcasts, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035010).AddGroup(GROUP_ARRO_Holy_People, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035110)
        .AddGroup(GROUP_ARRO_Silver_Geckos, 4, 6)
        .AddGroup(GROUP_ARRO_Spore_Plants, 5, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10035120).AddGroup(GROUP_ARROK_Geckos, 3, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10035130)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 8)
        .AddGroup(GROUP_ARRO_Spore_Plants, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10035140).AddGroup(GROUP_ARRO_Spore_Plants, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035150).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035160).AddGroup(GROUP_ARROK_Molerats, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10035170)
        .AddGroup(GROUP_ARRO_Holy_People, 4, 6)
        .AddGroup(GROUP_ARRO_War_Party, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(6, 10035180).AddGroup(GROUP_ARRO_Nomads, 2, 4);
    table.AddEncounter(5, 10035190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10035200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Kla_D (Areas around Klamath)
    table = EncounterTables[TABLE_Kla_D];
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddLocationPid(Content::Location::desert_12);
    table.AddLocationPid(Content::Location::desert_11);
    table.AddEncounter(2, 10035500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10035510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10035520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(0, 10035530)
        .AddGroup(GROUP_KLA_Golden_Geckos, 4, 8)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10035540).AddGroup(GROUP_KLA_Bandits, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035550).AddGroup(GROUP_KLA_Homeless, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035560).AddGroup(GROUP_KLA_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035660).AddGroup(GROUP_ARRO_Sm_Scorpions, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10035670).AddGroup(GROUP_ARRO_Spore_Plants, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10035680).AddGroup(GROUP_KLA_Bandits, 3, 5).AddGroup(GROUP_KLA_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(0, 10035690).AddGroup(GROUP_KLA_Farmers, 2, 4).AddGroup(GROUP_ARROK_Geckos, 3, 5).Fighting(0, 1);
    table.AddEncounter(0, 10035700).AddGroup(GROUP_KLA_Farmers, 2, 4).AddGroup(GROUP_KLA_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(2, 10035710)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 3)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10035710)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 3)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(0, 10035720)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_KLA_Bandits, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(2, 10035730)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_ARROK_Geckos, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10035730)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_ARROK_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(0, 10035740).AddGroup(GROUP_KLA_Bandits, 3, 6).AddGroup(GROUP_KLA_Homeless, 2, 5).Fighting(0, 1);
    table.AddEncounter(3, 10035750).AddGroup(GROUP_KLA_Homeless, 3, 5).AddGroup(GROUP_KLA_Farmers, 2, 4).Fighting(0, 1);
    table.AddEncounter(3, 10035760).AddGroup(GROUP_KLA_Bandits, 3, 6).AddGroup(GROUP_KLA_Farmers, 2, 4).Fighting(0, 1);
    table.AddEncounter(0, 10035770).AddGroup(GROUP_KLA_Farmers, 2, 5).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 4).Fighting(0, 1);
    table.AddEncounter(0, 10035780).AddGroup(GROUP_KLA_Trappers, 3, 5).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 7).Fighting(0, 1);
    table.AddEncounter(2, 10035790)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_ARRO_Pig_Rats, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10035790)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_ARRO_Pig_Rats, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(2, 10035800).AddGroup(GROUP_KLA_Farmers, 2, 3).AddGroup(GROUP_ARRO_Pig_Rats, 3, 6).Fighting(0, 1);
    table.AddEncounter(7, 10035810).AddGroup(GROUP_KLA_Farmers, 2, 4);
    table.AddEncounter(8, 10035820).AddGroup(GROUP_KLA_Trappers, 4, 7).CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(8, 10035820)
        .AddGroup(GROUP_KLA_Trappers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(1, 10035830)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10035840)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10035850)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10035860)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10035870)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10035880)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10035890)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10035900)
        .Special(true)
        .LocationPid(Content::Location::wasteland_children)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialWastelandChildren, '<', 1)
        .AssignProperty(CritterProperty::SpecialWastelandChildren, '=', 1);
    table.AddEncounter(1, 10035910)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10035920)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);
    table.AddEncounter(1, 10035930)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // Kla_M (Areas around Klamath)
    table = EncounterTables[TABLE_Kla_M];
    table.AddLocationPid(Content::Location::mountain_6);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_1);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(0, 10036000)
        .AddGroup(GROUP_KLA_Golden_Geckos, 4, 8)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10036010).AddGroup(GROUP_KLA_Bandits, 3, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10036020).AddGroup(GROUP_KLA_Homeless, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10036030).AddGroup(GROUP_KLA_Golden_Geckos, 1, 3).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10036130).AddGroup(GROUP_ARRO_Sm_Scorpions, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10036140).AddGroup(GROUP_ARRO_Spore_Plants, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10036150).AddGroup(GROUP_KLA_Bandits, 3, 5).AddGroup(GROUP_KLA_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(0, 10036160).AddGroup(GROUP_KLA_Farmers, 2, 4).AddGroup(GROUP_ARROK_Geckos, 3, 5).Fighting(0, 1);
    table.AddEncounter(0, 10036170).AddGroup(GROUP_KLA_Farmers, 2, 4).AddGroup(GROUP_KLA_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(2, 10036180)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 7)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10036180)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(0, 10036190)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_KLA_Bandits, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(2, 10036200)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_ARROK_Geckos, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10036200)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_ARROK_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(0, 10036210).AddGroup(GROUP_KLA_Bandits, 3, 6).AddGroup(GROUP_KLA_Homeless, 2, 5).Fighting(0, 1);
    table.AddEncounter(2, 10036220).AddGroup(GROUP_KLA_Homeless, 3, 5).AddGroup(GROUP_KLA_Farmers, 2, 4).Fighting(0, 1);
    table.AddEncounter(2, 10036230).AddGroup(GROUP_KLA_Bandits, 3, 6).AddGroup(GROUP_KLA_Farmers, 2, 4).Fighting(0, 1);
    table.AddEncounter(0, 10036240).AddGroup(GROUP_KLA_Farmers, 2, 5).AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 4).Fighting(0, 1);
    table.AddEncounter(0, 10036250).AddGroup(GROUP_KLA_Trappers, 3, 5).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 7).Fighting(0, 1);
    table.AddEncounter(2, 10036260)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_ARRO_Pig_Rats, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10036260)
        .AddGroup(GROUP_KLA_Trappers, 2, 4)
        .AddGroup(GROUP_ARRO_Pig_Rats, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(2, 10036270).AddGroup(GROUP_KLA_Farmers, 2, 3).AddGroup(GROUP_ARRO_Pig_Rats, 3, 6).Fighting(0, 1);
    table.AddEncounter(7, 10036280).AddGroup(GROUP_KLA_Farmers, 2, 4);
    table.AddEncounter(8, 10036290).AddGroup(GROUP_KLA_Trappers, 4, 7).CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(8, 10036290)
        .AddGroup(GROUP_KLA_Trappers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(5, 10036300)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10036310)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(1, 10036320)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // Klad_D (Klamath-Den Trade Route)
    table = EncounterTables[TABLE_Klad_D];
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10036500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10036510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10036520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10036530).AddGroup(GROUP_KLAD_Caravan, 4, 5);
    table.AddEncounter(5, 10036630).AddGroup(GROUP_KLA_Trappers, 4, 7).CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(5, 10036630)
        .AddGroup(GROUP_KLA_Trappers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(3, 10036640)
        .AddGroup(GROUP_KLA_Bandits, 3, 6)
        .AddGroup(GROUP_KLAD_Caravan, 4, 5)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(3, 10036640)
        .AddGroup(GROUP_KLA_Bandits, 3, 6)
        .AddGroup(GROUP_KLAD_Caravan, 4, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(0, 10036650).AddGroup(GROUP_KLA_Bandits, 4, 8).AddGroup(GROUP_KLA_Trappers, 3, 6).Fighting(0, 1);
    table.AddEncounter(3, 10036660).AddGroup(GROUP_KLAD_Scorpions, 4, 8).AddGroup(GROUP_KLAD_Caravan, 4, 5).Fighting(0, 1);
    table.AddEncounter(3, 10036670)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_KLAD_Scorpions, 4, 9)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(3, 10036670)
        .AddGroup(GROUP_KLA_Trappers, 4, 6)
        .AddGroup(GROUP_KLAD_Scorpions, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(9, 10036680).AddGroup(GROUP_KLAD_Scorpions, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10036690).AddGroup(GROUP_KLAD_Mole_Pig_Rat, 5, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(9, 10036700).AddGroup(GROUP_KLA_Bandits, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10036710)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(2, 10036710)
        .AddGroup(GROUP_KLA_Trappers, 3, 5)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(3, 10036720).AddGroup(GROUP_KLAD_Scorpions, 4, 7).AddGroup(GROUP_KLA_Golden_Geckos, 4, 8).Fighting(0, 1);
    table.AddEncounter(0, 10036730)
        .AddGroup(GROUP_KLAD_Scorpions, 4, 8)
        .AddGroup(GROUP_KLAD_Mole_Pig_Rat, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(3, 10036740)
        .AddGroup(GROUP_KLA_Trappers, 3, 6)
        .AddGroup(GROUP_KLAD_Caravan, 4, 5)
        .AddGroup(GROUP_KLA_Bandits, 8, 12)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '<', 10);
    table.AddEncounter(3, 10036740)
        .AddGroup(GROUP_KLA_Trappers, 3, 6)
        .AddGroup(GROUP_KLAD_Caravan, 4, 5)
        .AddGroup(GROUP_KLA_Bandits, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .Fighting(0, 3)
        .Fighting(1, 3)
        .CheckProperty(CritterProperty::EncLoyalityKlamath, '>', 9);
    table.AddEncounter(10, 10036750).AddGroup(GROUP_KLA_Golden_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10036760).AddGroup(GROUP_KLA_Trappers, 3, 5).AddGroup(GROUP_KLAD_Mole_Pig_Rat, 6, 8).Fighting(0, 1);
    table.AddEncounter(0, 10036770).AddGroup(GROUP_KLAD_Caravan, 4, 5).AddGroup(GROUP_KLAD_Mole_Pig_Rat, 6, 10).Fighting(0, 1);
    table.AddEncounter(1, 10036780)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10036790)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10036800)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10036810)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10036820)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10036830)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10036840)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034790)
        .Special(true)
        .LocationPid(Content::Location::wasteland_children)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialWastelandChildren, '<', 1)
        .AssignProperty(CritterProperty::SpecialWastelandChildren, '=', 1);
    table.AddEncounter(1, 10034800)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);
    table.AddEncounter(1, 10034830)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // DMRV_D (Den-Modoc-Vault City-Redding Trade Route)
    table = EncounterTables[TABLE_DMRV_D];
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10037000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10037010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10037020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(7, 10037030).AddGroup(GROUP_DMRV_Highwaymen, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037130).AddGroup(GROUP_DMRV_Robbers, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10037140)
        .AddGroup(GROUP_DMRV_Robbers, 2, 4)
        .AddGroup(GROUP_DMRV_Highwaymen, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10037150)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10037160).AddGroup(GROUP_DMRV_Golden_Geckos, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037170).AddGroup(GROUP_KLAD_Mole_Pig_Rat, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037180).AddGroup(GROUP_DMRV_Scorpions, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037190).AddGroup(GROUP_ARRO_Spore_Plants, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10037200).AddGroup(GROUP_DMRV_Robbers, 3, 5).AddGroup(GROUP_DMRV_Highwaymen, 3, 5).Fighting(0, 1);
    table.AddEncounter(2, 10037210)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037210)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037220)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037220)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037230)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037230)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037240).AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8).AddGroup(GROUP_DMRV_Scorpions, 5, 8).Fighting(0, 1);
    table.AddEncounter(15, 10037250).AddGroup(GROUP_DMRV_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(15, 10037250)
        .AddGroup(GROUP_DMRV_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(1, 10037260)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10037270)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10037280)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10037290)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10037300)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10037310)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10037320)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10037330)
        .Special(true)
        .LocationPid(Content::Location::trappers_home)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialTrapperHolo, '<', 1)
        .AssignProperty(CritterProperty::SpecialTrapperHolo, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);

    // DMRV_M (Den-Modoc-Redding-Vault City Trade Route)
    table = EncounterTables[TABLE_DMRV_M];
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::cavern_1);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddEncounter(7, 10037500).AddGroup(GROUP_DMRV_Highwaymen, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037510).AddGroup(GROUP_DMRV_Robbers, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037520)
        .AddGroup(GROUP_DMRV_Robbers, 2, 4)
        .AddGroup(GROUP_DMRV_Highwaymen, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10037530)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10037630).AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037640).AddGroup(GROUP_KLAD_Mole_Pig_Rat, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037650).AddGroup(GROUP_DMRV_Scorpions, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10037660).AddGroup(GROUP_ARRO_Spore_Plants, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10037670).AddGroup(GROUP_DMRV_Robbers, 5, 8).AddGroup(GROUP_DMRV_Highwaymen, 5, 8).Fighting(0, 1);
    table.AddEncounter(2, 10037680)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037680)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037690)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037690)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037700)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(2, 10037700)
        .AddGroup(GROUP_DMRV_Caravan, 3, 6)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(2, 10037710).AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8).AddGroup(GROUP_DMRV_Scorpions, 5, 8).Fighting(0, 1);
    table.AddEncounter(15, 10037720).AddGroup(GROUP_DMRV_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(15, 10037720)
        .AddGroup(GROUP_DMRV_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(5, 10037730)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10037740)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Den_D (Areas around the Den)
    table = EncounterTables[TABLE_Den_D];
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddLocationPid(Content::Location::desert_7);
    table.AddEncounter(2, 10038000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10038010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10038020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(8, 10038030).AddGroup(GROUP_DEN_Slavers, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10038130).AddGroup(GROUP_DMRV_Highwaymen, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10038140).AddGroup(GROUP_DMRV_Robbers, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10038150)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 2, 4)
        .AddGroup(GROUP_ARRO_Spore_Plants, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10038160)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 5)
        .AddGroup(GROUP_DEN_Molerats, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10038170).AddGroup(GROUP_DMRV_Scorpions, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10038180).AddGroup(GROUP_DEN_Molerats, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10038190)
        .AddGroup(GROUP_DMRV_Robbers, 3, 5)
        .AddGroup(GROUP_DMRV_Highwaymen, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(4, 10038200)
        .AddGroup(GROUP_DEN_Slave_Run, 3, 5)
        .AddGroup(GROUP_DEN_Slaves, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(1, 10038210)
        .AddGroup(GROUP_DEN_Slavers, 4, 6)
        .AddGroup(GROUP_DMRV_Robbers, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(1, 10038220)
        .AddGroup(GROUP_DEN_Slavers, 4, 6)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(1, 10038230)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 5)
        .AddGroup(GROUP_DEN_Rave_Party, 6, 10)
        .Fighting(0, 1)
        .LocationPid(Content::Location::desert_7)
        .CheckHour('>', 19);
    table.AddEncounter(8, 10038240).AddGroup(GROUP_DEN_Rave_Party, 6, 10).LocationPid(Content::Location::desert_7).CheckHour('>', 19);
    table.AddEncounter(1, 10038250)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10038260)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10038270)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10038280)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10038290)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10038300)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10038310)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034790)
        .Special(true)
        .LocationPid(Content::Location::wasteland_children)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialWastelandChildren, '<', 1)
        .AssignProperty(CritterProperty::SpecialWastelandChildren, '=', 1);
    table.AddEncounter(1, 10034800)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10034810)
        .Special(true)
        .LocationPid(Content::Location::doll_holodisk)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialDollHolo, '<', 1)
        .AssignProperty(CritterProperty::SpecialDollHolo, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);
    table.AddEncounter(1, 10034830)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // Den_M (Areas around the Den)
    table = EncounterTables[TABLE_Den_M];
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddEncounter(10, 10038500).AddGroup(GROUP_DEN_Slavers, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10038510).AddGroup(GROUP_DMRV_Highwaymen, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10038520).AddGroup(GROUP_DMRV_Robbers, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10038530)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 2, 4)
        .AddGroup(GROUP_ARRO_Spore_Plants, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10038630)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 5)
        .AddGroup(GROUP_DEN_Molerats, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10038640).AddGroup(GROUP_DMRV_Scorpions, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10038650).AddGroup(GROUP_DEN_Molerats, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10038660)
        .AddGroup(GROUP_DMRV_Robbers, 3, 5)
        .AddGroup(GROUP_DMRV_Highwaymen, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(4, 10038670)
        .AddGroup(GROUP_DEN_Slave_Run, 3, 5)
        .AddGroup(GROUP_DEN_Slaves, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(2, 10038680)
        .AddGroup(GROUP_DEN_Slavers, 4, 6)
        .AddGroup(GROUP_DMRV_Robbers, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(2, 10038690)
        .AddGroup(GROUP_DEN_Slavers, 6, 8)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(5, 10038700)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10038710)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Band_M (Bandits Pass)
    table = EncounterTables[TABLE_Band_M];
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddEncounter(5, 10039000)
        .AddGroup(GROUP_DMRV_Highwaymen, 2, 4)
        .AddGroup(GROUP_DMRV_Robbers, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10039010).AddGroup(GROUP_DMRV_Highwaymen, 2, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10039020).AddGroup(GROUP_DMRV_Golden_Geckos, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10039030)
        .AddGroup(GROUP_DMRV_Scorpions, 3, 5)
        .AddGroup(GROUP_ARRO_Spore_Plants, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(2, 10039130).AddGroup(GROUP_DMRV_Robbers, 3, 5).AddGroup(GROUP_DMRV_Scorpions, 3, 6).Fighting(0, 1);
    table.AddEncounter(15, 10039140).AddGroup(GROUP_DMRV_Robbers, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10039150)
        .AddGroup(GROUP_DMRV_Caravan, 4, 5)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10039150)
        .AddGroup(GROUP_DMRV_Caravan, 4, 5)
        .AddGroup(GROUP_DMRV_Highwaymen, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(4, 10039160)
        .AddGroup(GROUP_DMRV_Caravan, 4, 5)
        .AddGroup(GROUP_DMRV_Robbers, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(4, 10039160)
        .AddGroup(GROUP_DMRV_Caravan, 4, 5)
        .AddGroup(GROUP_DMRV_Robbers, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(0, 10039170).AddGroup(GROUP_DMRV_Highwaymen, 3, 6).AddGroup(GROUP_ARRO_Spore_Plants, 6, 12).Fighting(0, 1);
    table.AddEncounter(10, 10039180).AddGroup(GROUP_DMRV_Caravan, 4, 5).CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(10, 10039180)
        .AddGroup(GROUP_DMRV_Caravan, 4, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(5, 10039190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10039200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Mod_M (Areas around Modoc)
    table = EncounterTables[TABLE_Mod_M];
    table.AddLocationPid(Content::Location::mountain_6);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(7, 10039500).AddGroup(GROUP_DMRV_Highwaymen, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10039510).AddGroup(GROUP_DMRV_Robbers, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10039520).AddGroup(GROUP_KLA_Homeless, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(0, 10039530)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 4, 7)
        .AddGroup(GROUP_MOD_Mantis, 6, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(6, 10039630).AddGroup(GROUP_MOD_Wild_Brahmin, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(6, 10039640).AddGroup(GROUP_KLAD_Scorpions, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10039650)
        .AddGroup(GROUP_MOD_Moonshiners, 3, 4)
        .AddGroup(GROUP_DMRV_Highwaymen, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(0, 10039660)
        .AddGroup(GROUP_DMRV_Highwaymen, 6, 9)
        .AddGroup(GROUP_KLA_Homeless, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(2, 10039670).AddGroup(GROUP_MOD_Moonshiners, 3, 4).AddGroup(GROUP_KLA_Farmers, 3, 5);
    table.AddEncounter(3, 10039680).AddGroup(GROUP_MOD_Mantis, 5, 8).AddGroup(GROUP_KLA_Farmers, 3, 5).Fighting(0, 1);
    table.AddEncounter(0, 10039690).AddGroup(GROUP_MOD_Moonshiners, 3, 5).AddGroup(GROUP_KLA_Farmers, 3, 6).Fighting(0, 1);
    table.AddEncounter(4, 10039700).AddGroup(GROUP_MOD_Mantis, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(4, 10039710).AddGroup(GROUP_MOD_Mantis, 5, 9).AddGroup(GROUP_DEN_Molerats, 3, 6).Fighting(0, 1);
    table.AddEncounter(7, 10039720).AddGroup(GROUP_MOD_Moonshiners, 4, 6);
    table.AddEncounter(7, 10039730).AddGroup(GROUP_KLA_Farmers, 3, 5);
    // table.AddEncounter(100, 10039740).Special(true).LocationPid(LOCATION_BessDead).CheckGVar(GameProperty::ModocBrahminEscaped,'>',0);
    table.AddEncounter(5, 10039750)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10039760)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(1, 10037330)
        .Special(true)
        .LocationPid(Content::Location::trappers_home)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialTrapperHolo, '<', 1)
        .AssignProperty(CritterProperty::SpecialTrapperHolo, '=', 1);

    // DVMV_M (Den - Vault City - Modoc Trade Route)
    table = EncounterTables[TABLE_DVMV_M];
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddEncounter(8, 10040000)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040010)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040020).AddGroup(GROUP_DVMV_Robbers, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10040030).AddGroup(GROUP_DVMV_Highwaymen, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10040130)
        .AddGroup(GROUP_DVMV_Mantis_Swarm, 5, 8)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10040140)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_ARRO_Spore_Plants, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040150).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10040160).AddGroup(GROUP_DVMV_Wild_Dogs, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10040170)
        .AddGroup(GROUP_DVMV_Robbers, 2, 4)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(3, 10040180)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040180)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(3, 10040190)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040190)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(3, 10040200)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040200)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(10, 10040210).AddGroup(GROUP_DVMV_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(10, 10040210)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(5, 10040220)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10040230)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // DVMV_D (Den - Vault City - Modoc Trade Route)
    table = EncounterTables[TABLE_DVMV_D];
    table.AddLocationPid(Content::Location::desert_11);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_12);
    table.AddEncounter(2, 10040500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10040510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10040520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(8, 10040530)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040630)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040640).AddGroup(GROUP_DVMV_Robbers, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10040650).AddGroup(GROUP_DVMV_Highwaymen, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10040660)
        .AddGroup(GROUP_DVMV_Mantis_Swarm, 5, 8)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10040670)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_ARRO_Spore_Plants, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(8, 10040680).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10040690).AddGroup(GROUP_DVMV_Wild_Dogs, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10040700)
        .AddGroup(GROUP_DVMV_Robbers, 2, 4)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(3, 10040710)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040710)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(3, 10040720)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040720)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(3, 10040730)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(3, 10040730)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(10, 10040740).AddGroup(GROUP_DVMV_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityDen, '<', 15);
    table.AddEncounter(10, 10040740)
        .AddGroup(GROUP_DVMV_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityDen, '>', 14);
    table.AddEncounter(1, 10040750)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10040760)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10040770)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10040780)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10040790)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10040800)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10040810)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);

    // Wild1_M (Wilderness North of Modoc)
    table = EncounterTables[TABLE_Wild1_M];
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddEncounter(10, 10041000).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041010).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041020).AddGroup(GROUP_DMRV_Scorpions, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041030).AddGroup(GROUP_MOD_Wild_Brahmin, 4, 8);
    table.AddEncounter(1, 10041130).AddGroup(GROUP_WILD1_Trader, 3, 5).AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6).Fighting(0, 1);
    table.AddEncounter(1, 10041140).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).AddGroup(GROUP_WILD1_Trader, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10041150).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 8).AddGroup(GROUP_MOD_Wild_Brahmin, 5, 8).Fighting(0, 1);
    table.AddEncounter(1, 10041160).AddGroup(GROUP_DMRV_Scorpions, 3, 6).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).Fighting(0, 1);
    table.AddEncounter(1, 10041170).AddGroup(GROUP_DMRV_Scorpions, 6, 10).AddGroup(GROUP_MOD_Wild_Brahmin, 6, 8).Fighting(0, 1);
    table.AddEncounter(10, 10041180).AddGroup(GROUP_WILD1_Trader, 3, 6);
    table.AddEncounter(5, 10041190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10041200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(1, 10037330)
        .Special(true)
        .LocationPid(Content::Location::trappers_home)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialTrapperHolo, '<', 1)
        .AssignProperty(CritterProperty::SpecialTrapperHolo, '=', 1);

    // Wild1_D (Wilderness North of Modoc)
    table = EncounterTables[TABLE_Wild1_D];
    table.AddLocationPid(Content::Location::desert_12);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddEncounter(2, 10041500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10041510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10041520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10041530).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041630).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041640).AddGroup(GROUP_DMRV_Scorpions, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10041650).AddGroup(GROUP_MOD_Wild_Brahmin, 6, 10);
    table.AddEncounter(1, 10041660).AddGroup(GROUP_WILD1_Trader, 3, 6).AddGroup(GROUP_DMRV_Golden_Geckos, 3, 6).Fighting(0, 1);
    table.AddEncounter(1, 10041670).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).AddGroup(GROUP_WILD1_Trader, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10041680).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 8).AddGroup(GROUP_MOD_Wild_Brahmin, 5, 8).Fighting(0, 1);
    table.AddEncounter(1, 10041690).AddGroup(GROUP_DMRV_Scorpions, 3, 6).AddGroup(GROUP_DVMV_Mantis_Swarm, 6, 10).Fighting(0, 1);
    table.AddEncounter(1, 10041700).AddGroup(GROUP_DMRV_Scorpions, 6, 10).AddGroup(GROUP_MOD_Wild_Brahmin, 6, 8).Fighting(0, 1);
    table.AddEncounter(10, 10041710).AddGroup(GROUP_WILD1_Trader, 3, 6);
    table.AddEncounter(1, 10041720)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10041730)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10041740)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10041750)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10041760)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10041770)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10041780)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10037330)
        .Special(true)
        .LocationPid(Content::Location::trappers_home)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialTrapperHolo, '<', 1)
        .AssignProperty(CritterProperty::SpecialTrapperHolo, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);
    table.AddEncounter(40, 10037331)
        .Special(true)
        .LocationPid(Content::Location::modoc_vampire)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 99)
        .CheckProperty(CritterProperty::ModJoeVampire, '=', 5)
        .AssignProperty(CritterProperty::ModJoeVampire, '=', 6);

    // Wild2_D (Wilderness North of Vault City)
    table = EncounterTables[TABLE_Wild2_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10042000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10042010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10042020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10042030).AddGroup(GROUP_WILD2_Mutated_Molerats, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10042130).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10042140).AddGroup(GROUP_ARRO_Spore_Plants, 4, 8);
    table.AddEncounter(10, 10042150)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 8)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(1, 10042160).AddGroup(GROUP_WILD2_Hermit, 1, 2).AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10042170).AddGroup(GROUP_WILD2_Hermit, 1, 2).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10042180)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 3, 6)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(1, 10042190).AddGroup(GROUP_WILD2_Mutated_Molerats, 3, 5).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 4, 6).Fighting(0, 1);
    table.AddEncounter(1, 10042200).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 9).AddGroup(GROUP_ARRO_Spore_Plants, 6, 12).Fighting(0, 1);
    table.AddEncounter(1, 10042210).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 5).AddGroup(GROUP_DVMV_Wild_Dogs, 5, 8).Fighting(0, 1);
    table.AddEncounter(5, 10042220).AddGroup(GROUP_WILD2_Hermit, 1, 2);
    table.AddEncounter(1, 10042230)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10042240)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10042250)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10042260)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10042270)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10042280)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10042290)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(30, 10042300)
        .Special(true)
        .LocationPid(Content::Location::vc_recon_mutants)
        .CheckProperty(CritterProperty::VCHartmannRecon, '=', 1)
        .AssignProperty(CritterProperty::VCHartmannRecon, '=', 2);

    // Wild2_M (Wilderness North of Vault City)
    table = EncounterTables[TABLE_Wild2_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddEncounter(10, 10042500).AddGroup(GROUP_WILD2_Mutated_Molerats, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10042510).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10042520).AddGroup(GROUP_ARRO_Spore_Plants, 6, 8);
    table.AddEncounter(10, 10042530)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 8)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(1, 10042630).AddGroup(GROUP_WILD2_Hermit, 1, 2).AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10042640).AddGroup(GROUP_WILD2_Hermit, 1, 2).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 5).Fighting(0, 1);
    table.AddEncounter(1, 10042650)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 5)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 3, 6)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(1, 10042660).AddGroup(GROUP_WILD2_Mutated_Molerats, 3, 5).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 4, 6).Fighting(0, 1);
    table.AddEncounter(1, 10042670).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 9).AddGroup(GROUP_ARRO_Spore_Plants, 6, 12).Fighting(0, 1);
    table.AddEncounter(1, 10042680).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 3, 5).AddGroup(GROUP_DVMV_Wild_Dogs, 5, 8).Fighting(0, 1);
    table.AddEncounter(5, 10042690).AddGroup(GROUP_WILD2_Hermit, 1, 2);
    table.AddEncounter(5, 10042700)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10042710)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // VPat_M (Areas around Vault City)
    table = EncounterTables[TABLE_VPat_M];
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::mountain_6);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddEncounter(10, 10043000)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10043010).AddGroup(GROUP_VPAT_Strong_Slavers, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10043020).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10043030).AddGroup(GROUP_DVMV_Wild_Dogs, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10043130)
        .AddGroup(GROUP_VPAT_Patrol, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 4)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .Fighting(2, 3)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(5, 10043130)
        .AddGroup(GROUP_VPAT_Patrol, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 4)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .Fighting(0, 3)
        .Fighting(2, 3)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043140).AddGroup(GROUP_VPAT_Strong_Slavers, 4, 7).AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8).Fighting(0, 1);
    table.AddEncounter(10, 10043150)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(10, 10043150)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043160)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(1, 10043160)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043170)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(1, 10043170)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(10, 10043180).AddGroup(GROUP_VPAT_Patrol, 5, 8).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(10, 10043180)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(5, 10043190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10043200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(30, 10042300)
        .Special(true)
        .LocationPid(Content::Location::vc_recon_mutants)
        .CheckProperty(CritterProperty::VCHartmannRecon, '=', 1)
        .AssignProperty(CritterProperty::VCHartmannRecon, '=', 2);

    // VPat_D (Areas around Vault City)
    table = EncounterTables[TABLE_VPat_D];
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_11);
    table.AddLocationPid(Content::Location::desert_12);
    table.AddEncounter(2, 10043500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10043510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10043520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10043530)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 3, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10043630).AddGroup(GROUP_VPAT_Strong_Slavers, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10043640).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10043650).AddGroup(GROUP_DVMV_Wild_Dogs, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10043660)
        .AddGroup(GROUP_VPAT_Patrol, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 4)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .Fighting(2, 3)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(5, 10043660)
        .AddGroup(GROUP_VPAT_Patrol, 3, 6)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 2, 4)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .Fighting(0, 3)
        .Fighting(2, 3)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(2, 10043670)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 4, 7)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(10, 10043680)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(10, 10043680)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_VPAT_Strong_Slavers, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043690)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(1, 10043690)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043700)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(1, 10043700)
        .AddGroup(GROUP_VPAT_Patrol, 3, 5)
        .AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(10, 10043710).AddGroup(GROUP_VPAT_Patrol, 5, 8).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 5);
    table.AddEncounter(10, 10043710)
        .AddGroup(GROUP_VPAT_Patrol, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 4);
    table.AddEncounter(1, 10043720)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10043730)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10043740)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10043750)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10043760)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10043770)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10043780)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // Geck_M (Areas around Gecko)
    table = EncounterTables[TABLE_Geck_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_1);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddEncounter(10, 10044000).AddGroup(GROUP_GECK_Scavs, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044010).AddGroup(GROUP_GECK_Ghoul_Scavs, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044020).AddGroup(GROUP_GECK_Crazies, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044030).AddGroup(GROUP_GECK_Ghoul_Crazies, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044130).AddGroup(GROUP_GECK_Geckos, 5, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044140).AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044150).AddGroup(GROUP_DMRV_Scorpions, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044160).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044170).AddGroup(GROUP_GECK_Mutated_Rats, 10, 15).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10044180)
        .AddGroup(GROUP_GECK_Scavs, 6, 9)
        .AddGroup(GROUP_GECK_Crazies, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044190)
        .AddGroup(GROUP_GECK_Ghoul_Scavs, 5, 9)
        .AddGroup(GROUP_GECK_Crazies, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044200)
        .AddGroup(GROUP_GECK_Geckos, 7, 12)
        .AddGroup(GROUP_GECK_Crazies, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044210)
        .AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 5, 9)
        .AddGroup(GROUP_GECK_Ghoul_Scavs, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(5, 10044220)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10044230)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Geck_D (Areas around Gecko)
    table = EncounterTables[TABLE_Geck_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10044500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10044510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10044520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10044530).AddGroup(GROUP_GECK_Scavs, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044630).AddGroup(GROUP_GECK_Ghoul_Scavs, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044640).AddGroup(GROUP_GECK_Crazies, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10044650).AddGroup(GROUP_GECK_Ghoul_Crazies, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044660).AddGroup(GROUP_GECK_Geckos, 5, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044670).AddGroup(GROUP_DVMV_Wild_Dogs, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044680).AddGroup(GROUP_DMRV_Scorpions, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044690).AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10044700).AddGroup(GROUP_GECK_Mutated_Rats, 10, 15).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10044710)
        .AddGroup(GROUP_GECK_Scavs, 6, 9)
        .AddGroup(GROUP_GECK_Crazies, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044720)
        .AddGroup(GROUP_GECK_Ghoul_Scavs, 5, 9)
        .AddGroup(GROUP_GECK_Crazies, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044730)
        .AddGroup(GROUP_GECK_Geckos, 7, 12)
        .AddGroup(GROUP_GECK_Crazies, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044740)
        .AddGroup(GROUP_WILD2_Mutated_Pig_Rats, 5, 9)
        .AddGroup(GROUP_GECK_Ghoul_Scavs, 2, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10044750)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10044760)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10044770)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10044780)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10044790)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10044800)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10044810)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // Fish_O (Coastal Regions of the north)
    table = EncounterTables[TABLE_Fish_O];
    table.AddLocationPid(Content::Location::coast_5);
    table.AddLocationPid(Content::Location::coast_4);
    table.AddLocationPid(Content::Location::coast_1);
    table.AddLocationPid(Content::Location::coast_8);
    table.AddEncounter(10, 10045000).AddGroup(GROUP_ARRO_Cannibals, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045010).AddGroup(GROUP_FISH_Wilder, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045020).AddGroup(GROUP_ARRO_War_Party, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045030).AddGroup(GROUP_ARRO_Outcasts, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045130).AddGroup(GROUP_DMRV_Scorpions, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045140).AddGroup(GROUP_DEN_Molerats, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10045150)
        .AddGroup(GROUP_FISH_Fisherman, 3, 5)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(0, 10045160)
        .AddGroup(GROUP_ARRO_Cannibals, 4, 7)
        .AddGroup(GROUP_FISH_Wilder, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10045170)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 8)
        .AddGroup(GROUP_FISH_Wilder, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(10, 10045180).AddGroup(GROUP_FISH_Fisherman, 3, 6);

    // Prim_D (Primitive Tribe Region)
    table = EncounterTables[TABLE_Prim_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddEncounter(2, 10045500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10045510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10045520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(7, 10045530).AddGroup(GROUP_ARRO_Cannibals, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10045630).AddGroup(GROUP_ARRO_Outcasts, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10045640).AddGroup(GROUP_FISH_Wilder, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10045650).AddGroup(GROUP_ARRO_War_Party, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10045660)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 4)
        .AddGroup(GROUP_ARRO_Spore_Plants, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10045670)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 5)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10045680).AddGroup(GROUP_KLA_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10045690)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 8)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10045700).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10045710)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_ARRO_Outcasts, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10045720)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_FISH_Wilder, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(7, 10045730)
        .AddGroup(GROUP_KLAD_Scorpions, 4, 8)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(7, 10045740)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(10, 10045750).AddGroup(GROUP_WILD2_Hermit, 1, 2);
    table.AddEncounter(1, 10045760)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10045770)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10045780)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10045790)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10045800)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10045810)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10045820)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);

    // Prim_M (Primitive Tribe Region)
    table = EncounterTables[TABLE_Prim_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddEncounter(7, 10046000).AddGroup(GROUP_ARRO_Cannibals, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10046010).AddGroup(GROUP_ARRO_Outcasts, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10046020).AddGroup(GROUP_FISH_Wilder, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(8, 10046030).AddGroup(GROUP_ARRO_War_Party, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10046130)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 5)
        .AddGroup(GROUP_ARRO_Spore_Plants, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10046140)
        .AddGroup(GROUP_KLA_Golden_Geckos, 2, 5)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10046150).AddGroup(GROUP_KLA_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10046160)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 8)
        .AddGroup(GROUP_ARRO_Spore_Plants, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(7, 10046170).AddGroup(GROUP_ARRO_Sm_Scorpions, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10046180)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_ARRO_Outcasts, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(1, 10046190)
        .AddGroup(GROUP_KLA_Golden_Geckos, 3, 5)
        .AddGroup(GROUP_FISH_Wilder, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(7, 10046200)
        .AddGroup(GROUP_KLAD_Scorpions, 4, 8)
        .AddGroup(GROUP_ARRO_Cannibals, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(7, 10046210)
        .AddGroup(GROUP_ARRO_Sm_Scorpions, 3, 6)
        .AddGroup(GROUP_WILD2_Hermit, 1, 2)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(10, 10046220).AddGroup(GROUP_WILD2_Hermit, 1, 2);
    table.AddEncounter(5, 10046230)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10046240)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // DNRV_D (Den - New Reno - Redding - Vault City Caravan Route)
    table = EncounterTables[TABLE_DNRV_D];
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10046500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10046510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10046520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10046530).AddGroup(GROUP_DNRV_Den_Caravan, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10046630)
        .AddGroup(GROUP_DVMV_Highwaymen, 2, 4)
        .AddGroup(GROUP_DVMV_Robbers, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10046640).AddGroup(GROUP_DVMV_Highwaymen, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10046650).AddGroup(GROUP_DVMV_Robbers, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10046660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 4, 7)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10046660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 4, 7)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(5, 10046670)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10046670)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10046680)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10046690)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(10, 10046690)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(1, 10046700)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(1, 10046700)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(0, 10046710)
        .AddGroup(GROUP_DVMV_Highwaymen, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(5, 10046720).AddGroup(GROUP_DNRV_Vault_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(5, 10046720)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(7, 10046730).AddGroup(GROUP_DNRV_Den_Caravan, 4, 8);
    table.AddEncounter(1, 10046740)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10046750)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10046760)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10046770)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10046780)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10046790)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10046800)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // DNRV_M (Den - New Reno - Redding - Vault City Caravan Route)
    table = EncounterTables[TABLE_DNRV_M];
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddEncounter(10, 10047000).AddGroup(GROUP_DNRV_Den_Caravan, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10047010)
        .AddGroup(GROUP_DVMV_Highwaymen, 2, 4)
        .AddGroup(GROUP_DVMV_Robbers, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10047020).AddGroup(GROUP_DVMV_Highwaymen, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10047030).AddGroup(GROUP_DVMV_Robbers, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10047130)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 4, 7)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10047130)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 4, 7)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(5, 10047140)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10047140)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Robbers, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10047150)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DVMV_Highwaymen, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10047160)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(10, 10047160)
        .AddGroup(GROUP_DVMV_Robbers, 2, 5)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(1, 10047170)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(1, 10047170)
        .AddGroup(GROUP_DNRV_Den_Caravan, 4, 8)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(0, 10047180)
        .AddGroup(GROUP_DVMV_Highwaymen, 6, 8)
        .AddGroup(GROUP_DVMV_Robbers, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .Fighting(0, 2);
    table.AddEncounter(5, 10047190).AddGroup(GROUP_DNRV_Vault_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(5, 10047190)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(7, 10047200).AddGroup(GROUP_DNRV_Den_Caravan, 4, 8);
    table.AddEncounter(5, 10047210)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10047220)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Red_D (Area around Redding)
    table = EncounterTables[TABLE_Red_D];
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_7);
    table.AddEncounter(2, 10047500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10047510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10047520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10047530)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8)
        .AddGroup(GROUP_RED_Wolves, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10047630).AddGroup(GROUP_RED_Claim_Jumper, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10047640).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10047650).AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10047660)
        .AddGroup(GROUP_RED_Prospector, 3, 5)
        .AddGroup(GROUP_RED_Claim_Jumper, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckParam(CritterProperty::Level, '>', 9);
    table.AddEncounter(5, 10047670).AddGroup(GROUP_RED_Trappers, 4, 6).AddGroup(GROUP_DMRV_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(1, 10047680).AddGroup(GROUP_RED_Bootlegger, 2, 4).AddGroup(GROUP_RED_Wolves, 5, 8).Fighting(0, 1);
    table.AddEncounter(1, 10047690)
        .AddGroup(GROUP_RED_Homesteaders, 2, 4)
        .AddGroup(GROUP_RED_Claim_Jumper, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckParam(CritterProperty::Level, '>', 9);
    table.AddEncounter(5, 10047700).AddGroup(GROUP_RED_Homesteaders, 4, 6).AddGroup(GROUP_RED_Wolves, 4, 8).Fighting(0, 1);
    table.AddEncounter(7, 10047710).AddGroup(GROUP_RED_Bootlegger, 4, 6);
    table.AddEncounter(7, 10047720).AddGroup(GROUP_RED_Trappers, 4, 6);
    table.AddEncounter(7, 10047730).AddGroup(GROUP_RED_Prospector, 3, 6);
    table.AddEncounter(1, 10047740)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10047750)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10047760)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10047770)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10047780)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10047790)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10047800)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10034820)
        .Special(true)
        .LocationPid(Content::Location::zergs_laboratory)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterZergLaboratory, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterZergLaboratory, '=', 1);

    // Red_M (Area around Redding)
    table = EncounterTables[TABLE_Red_M];
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(10, 10048000)
        .AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8)
        .AddGroup(GROUP_RED_Wolves, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10048010).AddGroup(GROUP_RED_Claim_Jumper, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10048020).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10048030).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10048130)
        .AddGroup(GROUP_RED_Prospector, 3, 5)
        .AddGroup(GROUP_RED_Claim_Jumper, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckParam(CritterProperty::Level, '>', 9);
    table.AddEncounter(10, 10048140).AddGroup(GROUP_RED_Trappers, 4, 6).AddGroup(GROUP_DMRV_Golden_Geckos, 2, 4).Fighting(0, 1);
    table.AddEncounter(1, 10048150).AddGroup(GROUP_RED_Bootlegger, 2, 4).AddGroup(GROUP_RED_Wolves, 5, 8).Fighting(0, 1);
    table.AddEncounter(1, 10048160)
        .AddGroup(GROUP_RED_Homesteaders, 2, 4)
        .AddGroup(GROUP_RED_Claim_Jumper, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckParam(CritterProperty::Level, '>', 9);
    table.AddEncounter(5, 10048170).AddGroup(GROUP_RED_Homesteaders, 4, 6).AddGroup(GROUP_RED_Wolves, 4, 8).Fighting(0, 1);
    table.AddEncounter(7, 10048180).AddGroup(GROUP_RED_Bootlegger, 4, 6);
    table.AddEncounter(7, 10048190).AddGroup(GROUP_RED_Trappers, 4, 6);
    table.AddEncounter(7, 10048200).AddGroup(GROUP_RED_Prospector, 3, 6);
    table.AddEncounter(5, 10048210)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10048220)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Wild3_M (Wild area between Redding and Raiders)
    table = EncounterTables[TABLE_Wild3_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddEncounter(1, 10048500)
        .AddGroup(GROUP_RED_Wolves, 3, 6)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10048510)
        .AddGroup(GROUP_DMRV_Scorpions, 5, 10)
        .AddGroup(GROUP_RED_Wolves, 5, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(0, 10048520)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 4, 9)
        .AddGroup(GROUP_DMRV_Scorpions, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(10, 10048530).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10048630).AddGroup(GROUP_RED_Wolves, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10048640).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10048650).AddGroup(GROUP_DMRV_Scorpions, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10048660).AddGroup(GROUP_RED_Wolves, 7, 12).AddGroup(GROUP_DMRV_Golden_Geckos, 5, 8).Fighting(0, 1);
    table.AddEncounter(2, 10048670).AddGroup(GROUP_WILD2_Mutated_Molerats, 4, 9).AddGroup(GROUP_DMRV_Golden_Geckos, 7, 12).Fighting(0, 1);
    table.AddEncounter(2, 10048680).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 9).AddGroup(GROUP_DMRV_Scorpions, 6, 9).Fighting(0, 1);
    table.AddEncounter(5, 10048690)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10048700)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // RDRC_M (Vault City - New Reno - Gecko - Broken Hills Trade Route)
    table = EncounterTables[TABLE_RDRC_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_1);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddEncounter(25, 10049000)
        .AddGroup(GROUP_RDRC_Raiders, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10049010).AddGroup(GROUP_RED_Wolves, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10049020)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(5, 10049030)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_RDRC_Raiders, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10049130)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 8)
        .AddGroup(GROUP_RDRC_Raiders, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(3, 10049140)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '<', 12);
    table.AddEncounter(5, 10049020)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(5, 10049030)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_RDRC_Raiders, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10049130)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 8)
        .AddGroup(GROUP_RDRC_Raiders, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(3, 10049140)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '>', 11);
    table.AddEncounter(6, 10049150).AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(6, 10049160).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(6, 10049170).AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(6, 10049180).AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityGecko, '<', 12);
    table.AddEncounter(6, 10049150)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(6, 10049160)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(6, 10049170)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(6, 10049180)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '>', 11);
    table.AddEncounter(5, 10049190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10049200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // RDRC_D (Vault City - New Reno - Gecko - Broken Hills Trade Route)
    table = EncounterTables[TABLE_RDRC_D];
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddEncounter(2, 10049500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10049510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10049520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(25, 10049530)
        .AddGroup(GROUP_RDRC_Raiders, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10049630).AddGroup(GROUP_RED_Wolves, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10049640)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(5, 10049650)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_RDRC_Raiders, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10049660)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 8)
        .AddGroup(GROUP_RDRC_Raiders, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(3, 10049670)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '<', 12);
    table.AddEncounter(5, 10049640)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(5, 10049650)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 4, 8)
        .AddGroup(GROUP_RDRC_Raiders, 3, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10049660)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 8)
        .AddGroup(GROUP_RDRC_Raiders, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(3, 10049670)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_RDRC_Raiders, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '>', 11);
    table.AddEncounter(6, 10049680).AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityVCity, '<', 12);
    table.AddEncounter(6, 10049690).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(6, 10049700).AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(6, 10049710).AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityGecko, '<', 12);
    table.AddEncounter(6, 10049680)
        .AddGroup(GROUP_DNRV_Vault_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityVCity, '>', 11);
    table.AddEncounter(6, 10049690)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(6, 10049700)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(6, 10049710)
        .AddGroup(GROUP_RDRC_Gecko_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityGecko, '>', 11);
    table.AddEncounter(1, 10049720)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10049730)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10049740)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10049750)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10049760)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10049770)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10049780)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10053200)
        .Special(true)
        .LocationPid(Content::Location::soldiers_bunker)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialSoldierHolo, '=', 0)
        .AssignProperty(CritterProperty::SpecialSoldierHolo, '=', 1);

    // Raid_M (Areas patroled by the Raiders)
    table = EncounterTables[TABLE_Raid_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_1);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(15, 10050000)
        .AddGroup(GROUP_RDRC_Raiders, 3, 6)
        .AddGroup(GROUP_RED_Wolves, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10050010)
        .AddGroup(GROUP_ARRO_Spore_Plants, 4, 10)
        .AddGroup(GROUP_RED_Wolves, 5, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(30, 10050020)
        .AddGroup(GROUP_RDRC_Raiders, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10050030).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10050130).AddGroup(GROUP_DMRV_Scorpions, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10050140)
        .AddGroup(GROUP_RED_Wolves, 5, 10)
        .AddGroup(GROUP_RDRC_Raiders, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(5, 10050150)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10050160)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Raid_D (Areas patroled by the Raiders)
    table = EncounterTables[TABLE_Raid_D];
    table.AddLocationPid(Content::Location::desert_7);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_7);
    table.AddLocationPid(Content::Location::desert_12);
    table.AddEncounter(2, 10050500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10050510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10050520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(15, 10050530)
        .AddGroup(GROUP_RDRC_Raiders, 3, 6)
        .AddGroup(GROUP_RED_Wolves, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10050630)
        .AddGroup(GROUP_ARRO_Spore_Plants, 4, 10)
        .AddGroup(GROUP_RED_Wolves, 5, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(30, 10050640)
        .AddGroup(GROUP_RDRC_Raiders, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(15, 10050650).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10050660).AddGroup(GROUP_DMRV_Scorpions, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10050670)
        .AddGroup(GROUP_RED_Wolves, 5, 10)
        .AddGroup(GROUP_RDRC_Raiders, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckGVar(GameProperty::RaidersDead, '<', 1);
    table.AddEncounter(1, 10050680)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10050690)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10050700)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10050710)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10050720)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10050730)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10050740)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // Nav_D (Areas around Navarro)
    table = EncounterTables[TABLE_Nav_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10051000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10051010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10051020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(100, 10051030)
        .AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityEnclave, '>', -1);
    table.AddEncounter(100, 10051030).AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7).CheckProperty(CritterProperty::EncLoyalityEnclave, '<', 0);
    table.AddEncounter(1, 10051130)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10051140)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10051150)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10051160)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10051170)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10051180)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10051190)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10051200)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);

    // Nav_M (Areas around Navarro)
    table = EncounterTables[TABLE_Nav_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddEncounter(100, 10051500)
        .AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityEnclave, '>', -1);
    table.AddEncounter(100, 10051500).AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7).CheckProperty(CritterProperty::EncLoyalityEnclave, '<', 0);
    table.AddEncounter(5, 10051600)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10051610)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Nav_O (Areas around Navarro)
    table = EncounterTables[TABLE_Nav_O];
    table.AddLocationPid(Content::Location::coast_3);
    table.AddLocationPid(Content::Location::coast_4);
    table.AddLocationPid(Content::Location::coast_4);
    table.AddLocationPid(Content::Location::coast_8);
    table.AddEncounter(100, 10052000)
        .AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityEnclave, '>', -1);
    table.AddEncounter(100, 10052000).AddGroup(GROUP_NAV_Enclave_Patrol, 4, 7).CheckProperty(CritterProperty::EncLoyalityEnclave, '<', 0);

    // EPA_D (Area around the EPA)
    table = EncounterTables[TABLE_EPA_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10052500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10052510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10052520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(4, 10052530)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10052630).AddGroup(GROUP_EPA_Floater_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052640).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052650).AddGroup(GROUP_EPA_Tough_Alien, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052660).AddGroup(GROUP_EPA_Deathclaws, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052670).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052680).AddGroup(GROUP_EPA_Alien, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052690).AddGroup(GROUP_EPA_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10052700).AddGroup(GROUP_EPA_Floaters, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10052710)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10052720)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10052730)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10052740)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10052750)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10052760)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10052770)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10052780)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(1, 10053200)
        .Special(true)
        .LocationPid(Content::Location::soldiers_bunker)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialSoldierHolo, '=', 0)
        .AssignProperty(CritterProperty::SpecialSoldierHolo, '=', 1);
    table.AddEncounter(1, 10053210)
        .Special(true)
        .LocationPid(Content::Location::android)
        .CheckParam(CritterProperty::Intellect, '>', 6)
        .CheckParam(CritterProperty::Level, '>', 15)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 100)
        .CheckProperty(CritterProperty::SpecialAndroid, '=', 2)
        .AssignProperty(CritterProperty::SpecialAndroid, '=', 3);

    // EPA_M (Area around the EPA)
    table = EncounterTables[TABLE_EPA_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddEncounter(4, 10053000)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_EPA_Deathclaws, 2, 4)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10053010).AddGroup(GROUP_EPA_Floater_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053020).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053030).AddGroup(GROUP_EPA_Tough_Alien, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053130).AddGroup(GROUP_EPA_Deathclaws, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053140).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053150).AddGroup(GROUP_EPA_Alien, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053160).AddGroup(GROUP_EPA_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053170).AddGroup(GROUP_EPA_Floaters, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10053180)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10053190)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(1, 10053200)
        .Special(true)
        .LocationPid(Content::Location::soldiers_bunker)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialSoldierHolo, '=', 0)
        .AssignProperty(CritterProperty::SpecialSoldierHolo, '=', 1);
    table.AddEncounter(1, 10053210)
        .Special(true)
        .LocationPid(Content::Location::android)
        .CheckParam(CritterProperty::Charisma, '<', 2)
        .CheckParam(CritterProperty::Perception, '>', 7)
        .CheckParam(CritterProperty::Intellect, '>', 6)
        .CheckParam(CritterProperty::Level, '>', 15)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 100)
        .CheckProperty(CritterProperty::SpecialAndroid, '=', 2)
        .AssignProperty(CritterProperty::SpecialAndroid, '=', 3);

    // EPA_C (Area around the EPA)
    table = EncounterTables[TABLE_EPA_C];
    table.AddLocationPid(Content::Location::city_1);
    table.AddLocationPid(Content::Location::city_2);
    table.AddLocationPid(Content::Location::city_3);
    table.AddLocationPid(Content::Location::city_4);
    table.AddLocationPid(Content::Location::city_5);
    table.AddLocationPid(Content::Location::city_6);
    table.AddLocationPid(Content::Location::city_7);
    table.AddLocationPid(Content::Location::city_8);
    table.AddEncounter(4, 10053500)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(12, 10053510).AddGroup(GROUP_EPA_Floater_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053520).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053530).AddGroup(GROUP_EPA_Tough_Alien, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053630).AddGroup(GROUP_EPA_Deathclaws, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053640).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053650).AddGroup(GROUP_EPA_Alien, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053660).AddGroup(GROUP_EPA_Centaurs, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(12, 10053670).AddGroup(GROUP_EPA_Floaters, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10054230)
        .Special(true)
        .LocationPid(Content::Location::mad_scientists_lab)
        .CheckParam(CritterProperty::Level, '>', 10)
        .CheckProperty(CritterProperty::SpecialEncounterTeleport, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterTeleport, '=', 1);
    table.AddEncounter(1, 10054240)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10054250)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);
    table.AddEncounter(1, 10054260)
        .Special(true)
        .LocationPid(Content::Location::church_of_atom)
        .CheckProperty(CritterProperty::SpecialEncounterAtomChurch, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterAtomChurch, '=', 1);

    // Wild4_D (Area Between EPA and Coast)
    table = EncounterTables[TABLE_Wild4_D];
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_11);
    table.AddEncounter(2, 10054000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10054010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10054020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(40, 10054030).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(40, 10054130).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10054140).AddGroup(GROUP_DMRV_Golden_Geckos, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10054150)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10054160)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10054170)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10054180)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10054190)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10054200)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10054210)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10054220)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(1, 10054230)
        .Special(true)
        .LocationPid(Content::Location::mad_scientists_lab)
        .CheckParam(CritterProperty::Level, '>', 10)
        .CheckProperty(CritterProperty::SpecialEncounterTeleport, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterTeleport, '=', 1);
    table.AddEncounter(1, 10054240)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10054250)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // Wild4_M (Area Between EPA and Coast)
    table = EncounterTables[TABLE_Wild4_M];
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddEncounter(40, 10054500).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 8, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(40, 10054510).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10054520).AddGroup(GROUP_DMRV_Golden_Geckos, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10054620)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10054630)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Wild4_O (Area Between EPA and Coast)
    table = EncounterTables[TABLE_Wild4_O];
    table.AddLocationPid(Content::Location::coast_1);
    table.AddLocationPid(Content::Location::coast_2);
    table.AddEncounter(40, 10055000).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 8, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(40, 10055010).AddGroup(GROUP_EPA_Fire_Geckos, 6, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10055020).AddGroup(GROUP_DMRV_Golden_Geckos, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);

    // SRNRRN_D (San Fran - NCR - Redding - Reno Trade route)
    table = EncounterTables[TABLE_SRNRRN_D];
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddEncounter(2, 10055500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10055510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10055520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10055530).AddGroup(GROUP_EPA_Deathclaws, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10055630).AddGroup(GROUP_EPA_Fire_Geckos, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10055640)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(3, 10055650)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 4, 7)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(8, 10055660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(8, 10055670)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 7)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(3, 10055640)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(3, 10055650)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(8, 10055660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(8, 10055670)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10055680).AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(20, 10055690).AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(15, 10055700).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(13, 10055710)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(10, 10055680)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(20, 10055690)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(15, 10055700)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(13, 10055710)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(1, 10055720)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10055730)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10055740)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10055750)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10055760)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10055770)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10055780)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10055790)
        .Special(true)
        .LocationPid(Content::Location::mad_scientists_lab)
        .CheckParam(CritterProperty::Level, '>', 10)
        .CheckProperty(CritterProperty::SpecialEncounterTeleport, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterTeleport, '=', 1);
    table.AddEncounter(1, 10055800)
        .Special(true)
        .LocationPid(Content::Location::knights_of_the_wasteland)
        .CheckParam(CritterProperty::Level, '>', 12)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterKotw, '=', 1);
    table.AddEncounter(1, 10055810)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // SRNRRN_M (San Fran - NCR - Redding - Reno Trade route)
    table = EncounterTables[TABLE_SRNRRN_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddEncounter(10, 10056000).AddGroup(GROUP_EPA_Deathclaws, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10056010).AddGroup(GROUP_EPA_Fire_Geckos, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10056020)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(3, 10056030)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 4, 7)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(8, 10056130)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 6)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(8, 10056140)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 7)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(3, 10056020)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(3, 10056030)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(8, 10056130)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(8, 10056140)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_EPA_Fire_Geckos, 4, 7)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10056150).AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(20, 10056160).AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(15, 10056170).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(13, 10056180)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(10, 10056150)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(20, 10056160)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 5, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(15, 10056170)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(13, 10056180)
        .AddGroup(GROUP_NCR_Caravan, 7, 11)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10056190)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10056200)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // New_D (Areas around New Reno)
    table = EncounterTables[TABLE_New_D];
    table.AddLocationPid(Content::Location::desert_7);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddEncounter(2, 10056500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10056510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10056520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(15, 10056530).AddGroup(GROUP_NEW_Yakuza, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10056630).AddGroup(GROUP_NEW_Gang, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10056640).AddGroup(GROUP_RED_Wolves, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10056650)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10056650)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(5, 10056660)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10056660)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(20, 10056670).AddGroup(GROUP_NEW_Mobsters, 4, 8).CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(20, 10056670)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(10, 10056680).AddGroup(GROUP_NEW_Traveller, 1, 2);
    table.AddEncounter(1, 10056690)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10056700)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10056710)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10056720)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10056730)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10056740)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10056750)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10056760)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);

    // New_M (Areas around New Reno)
    table = EncounterTables[TABLE_New_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddEncounter(15, 10057000).AddGroup(GROUP_NEW_Yakuza, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10057010).AddGroup(GROUP_NEW_Gang, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10057020).AddGroup(GROUP_RED_Wolves, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10057030)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10057030)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(5, 10057130)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10057130)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(20, 10057140).AddGroup(GROUP_NEW_Mobsters, 4, 8).CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(20, 10057140)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(10, 10057150).AddGroup(GROUP_NEW_Traveller, 1, 2);
    table.AddEncounter(5, 10057160)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10057170)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // New_C (Areas around New Reno)
    table = EncounterTables[TABLE_New_C];
    table.AddLocationPid(Content::Location::city_1);
    table.AddLocationPid(Content::Location::city_2);
    table.AddLocationPid(Content::Location::city_3);
    table.AddLocationPid(Content::Location::city_4);
    table.AddLocationPid(Content::Location::city_5);
    table.AddLocationPid(Content::Location::city_6);
    table.AddLocationPid(Content::Location::city_7);
    table.AddLocationPid(Content::Location::city_8);
    table.AddEncounter(15, 10057500).AddGroup(GROUP_NEW_Yakuza, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10057510).AddGroup(GROUP_NEW_Gang, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10057520).AddGroup(GROUP_RED_Wolves, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10057530)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10057530)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Yakuza, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(5, 10057630)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(5, 10057630)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_NEW_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(20, 10057640).AddGroup(GROUP_NEW_Mobsters, 4, 8).CheckProperty(CritterProperty::EncLoyalityReno, '<', 15);
    table.AddEncounter(20, 10057640)
        .AddGroup(GROUP_NEW_Mobsters, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 14);
    table.AddEncounter(10, 10057650).AddGroup(GROUP_NEW_Traveller, 1, 2);
    table.AddEncounter(1, 10057660)
        .Special(true)
        .LocationPid(Content::Location::church_of_atom)
        .CheckProperty(CritterProperty::SpecialEncounterAtomChurch, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterAtomChurch, '=', 1);

    // Brok_D (Areas around Broken Hills)
    table = EncounterTables[TABLE_Brok_D];
    table.AddLocationPid(Content::Location::desert_8);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddLocationPid(Content::Location::desert_11);
    table.AddEncounter(2, 10058000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10058010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10058020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10058030)
        .AddGroup(GROUP_BROK_Rogues, 2, 6)
        .AddGroup(GROUP_RED_Wolves, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(20, 10058130).AddGroup(GROUP_BROK_Rogues, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058140).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058150).AddGroup(GROUP_DMRV_Scorpions, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058160).AddGroup(GROUP_ARRO_Spore_Plants, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10058170)
        .AddGroup(GROUP_BROK_Unity_Patrol, 6, 10)
        .AddGroup(GROUP_BROK_Rogues, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(5, 10058170)
        .AddGroup(GROUP_BROK_Unity_Patrol, 6, 10)
        .AddGroup(GROUP_BROK_Rogues, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(5, 10058180)
        .AddGroup(GROUP_BROK_Unity_Patrol, 5, 8)
        .AddGroup(GROUP_RED_Wolves, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(5, 10058180)
        .AddGroup(GROUP_BROK_Unity_Patrol, 5, 8)
        .AddGroup(GROUP_RED_Wolves, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(20, 10058190).AddGroup(GROUP_BROK_Unity_Patrol, 8, 10).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(20, 10058190)
        .AddGroup(GROUP_BROK_Unity_Patrol, 8, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(1, 10058200)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10058210)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10058220)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10058230)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10058240)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10058250)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10058260)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);

    // Brok_M (Areas around Broken Hills)
    table = EncounterTables[TABLE_Brok_M];
    table.AddLocationPid(Content::Location::mountain_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(10, 10058500)
        .AddGroup(GROUP_BROK_Rogues, 2, 6)
        .AddGroup(GROUP_RED_Wolves, 3, 5)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 2)
        .Fighting(1, 2);
    table.AddEncounter(20, 10058510).AddGroup(GROUP_BROK_Rogues, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058520).AddGroup(GROUP_RED_Wolves, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058530).AddGroup(GROUP_DMRV_Scorpions, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10058630).AddGroup(GROUP_ARRO_Spore_Plants, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10058640)
        .AddGroup(GROUP_BROK_Unity_Patrol, 6, 10)
        .AddGroup(GROUP_BROK_Rogues, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(5, 10058640)
        .AddGroup(GROUP_BROK_Unity_Patrol, 6, 10)
        .AddGroup(GROUP_BROK_Rogues, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(5, 10058650)
        .AddGroup(GROUP_BROK_Unity_Patrol, 5, 8)
        .AddGroup(GROUP_RED_Wolves, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(5, 10058650)
        .AddGroup(GROUP_BROK_Unity_Patrol, 5, 8)
        .AddGroup(GROUP_RED_Wolves, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(20, 10058660).AddGroup(GROUP_BROK_Unity_Patrol, 8, 10).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 9);
    table.AddEncounter(20, 10058660)
        .AddGroup(GROUP_BROK_Unity_Patrol, 8, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 8);
    table.AddEncounter(5, 10058670)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10058680)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Fran_O (Areas around San Francisco)
    table = EncounterTables[TABLE_Fran_O];
    table.AddLocationPid(Content::Location::coast_7);
    table.AddLocationPid(Content::Location::coast_8);
    table.AddLocationPid(Content::Location::coast_10);
    table.AddLocationPid(Content::Location::coast_5);
    table.AddLocationPid(Content::Location::coast_11);
    table.AddEncounter(15, 10059000).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10059010).AddGroup(GROUP_FRAN_Press_Gang, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(99, 10059010)
        .AddGroup(GROUP_FRAN_Press_Gang, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::BHSuperNewTechnology, '=', 2)
        .CheckProperty(CritterProperty::BHDeadSaboteursCounter, '<', 40);
    table.AddEncounter(7, 10059020).AddGroup(GROUP_EPA_Deathclaws, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10059030).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10059130).AddGroup(GROUP_EPA_Tough_Alien, 10, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10059140)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10059140)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(10, 10059150)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10059150)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(20, 10059160).AddGroup(GROUP_FRAN_Elronologists, 4, 8).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(20, 10059160)
        .AddGroup(GROUP_FRAN_Elronologists, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(40, 10059170)
        .AddGroup(GROUP_SF_Mirelurk, 10, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .CheckGVar(GameProperty::SFInvasionStatus, '>', 0)
        .Fighting(0, 1);
    table.AddEncounter(35, 10059180)
        .Special(true)
        .LocationPid(Content::Location::nancy_and_sid)
        .CheckProperty(CritterProperty::SFSlimSidnancy, '=', 2)
        .AssignProperty(CritterProperty::SFSlimSidnancy, '=', 3);

    // Fran_M (Areas around San Francisco)
    table = EncounterTables[TABLE_Fran_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddLocationPid(Content::Location::cavern_3);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddEncounter(15, 10059500).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10059510).AddGroup(GROUP_FRAN_Press_Gang, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(99, 10059010)
        .AddGroup(GROUP_FRAN_Press_Gang, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::BHSuperNewTechnology, '=', 2)
        .CheckProperty(CritterProperty::BHDeadSaboteursCounter, '<', 40);
    table.AddEncounter(7, 10059520).AddGroup(GROUP_EPA_Deathclaws, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10059530).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10059630).AddGroup(GROUP_EPA_Tough_Alien, 10, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10059640)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10059640)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(10, 10059650)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10059650)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(20, 10059660).AddGroup(GROUP_FRAN_Elronologists, 4, 8).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(20, 10059660)
        .AddGroup(GROUP_FRAN_Elronologists, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(5, 10059670)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10059680)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Fran_C (Areas around San Francisco)
    table = EncounterTables[TABLE_Fran_C];
    table.AddLocationPid(Content::Location::city_1);
    table.AddLocationPid(Content::Location::city_2);
    table.AddLocationPid(Content::Location::city_3);
    table.AddLocationPid(Content::Location::city_4);
    table.AddLocationPid(Content::Location::city_5);
    table.AddLocationPid(Content::Location::city_6);
    table.AddLocationPid(Content::Location::city_7);
    table.AddLocationPid(Content::Location::city_8);
    table.AddEncounter(15, 10060000).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10060010).AddGroup(GROUP_FRAN_Press_Gang, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(99, 10059010)
        .AddGroup(GROUP_FRAN_Press_Gang, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::BHSuperNewTechnology, '=', 2)
        .CheckProperty(CritterProperty::BHDeadSaboteursCounter, '<', 40);
    table.AddEncounter(7, 10060020).AddGroup(GROUP_EPA_Deathclaws, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10060030).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10060130).AddGroup(GROUP_EPA_Tough_Alien, 10, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10060140)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10060140)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(10, 10060150)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10060150)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(20, 10060160).AddGroup(GROUP_FRAN_Elronologists, 4, 8).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(20, 10060160)
        .AddGroup(GROUP_FRAN_Elronologists, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(40, 10060170)
        .AddGroup(GROUP_SF_Mirelurk, 10, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .CheckGVar(GameProperty::SFInvasionStatus, '>', 0)
        .Fighting(0, 1);
    table.AddEncounter(1, 10060180)
        .Special(true)
        .LocationPid(Content::Location::church_of_atom)
        .CheckProperty(CritterProperty::SpecialEncounterAtomChurch, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterAtomChurch, '=', 1);

    // Fran_D (Areas around San Francisco)
    table = EncounterTables[TABLE_Fran_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10060500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10060510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10060520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(15, 10060530).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10060630).AddGroup(GROUP_FRAN_Press_Gang, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(99, 10059010)
        .AddGroup(GROUP_FRAN_Press_Gang, 7, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::BHSuperNewTechnology, '=', 2)
        .CheckProperty(CritterProperty::BHDeadSaboteursCounter, '<', 40);
    table.AddEncounter(7, 10060640).AddGroup(GROUP_EPA_Deathclaws, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10060650).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(7, 10060660).AddGroup(GROUP_EPA_Tough_Alien, 10, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10060670)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10060670)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(10, 10060680)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(10, 10060680)
        .AddGroup(GROUP_FRAN_Elronologists, 5, 8)
        .AddGroup(GROUP_FRAN_Press_Gang, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(20, 10060690).AddGroup(GROUP_FRAN_Elronologists, 4, 8).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 6);
    table.AddEncounter(20, 10060690)
        .AddGroup(GROUP_FRAN_Elronologists, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 5);
    table.AddEncounter(1, 10060700)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10060710)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10060720)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10060730)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10060740)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10060750)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10060760)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10060770)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(40, 10060780)
        .AddGroup(GROUP_SF_Mirelurk, 10, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .CheckGVar(GameProperty::SFInvasionStatus, '>', 0)
        .Fighting(0, 1);

    // Fran2_D (San Francisco - Redding Trade Route)
    table = EncounterTables[TABLE_Fran2_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10061000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10061010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10061020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10061030).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10061130).AddGroup(GROUP_EPA_Deathclaws, 5, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10061140).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 8, 12);
    table.AddEncounter(10, 10061150).AddGroup(GROUP_EPA_Tough_Alien, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10061160)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(3, 10061170)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10061180)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_EPA_Tough_Fire_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(3, 10061190)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10061160)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(3, 10061170)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(3, 10061180)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_EPA_Tough_Fire_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(3, 10061190)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(10, 10061200).AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8).CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(10, 10061210).AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(10, 10061200)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(10, 10061210)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(1, 10061220)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10061230)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10061240)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10061250)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10061260)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10061270)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10061280)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10061290)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);

    // Fran2_C (San Francisco - Redding Trade Route)
    table = EncounterTables[TABLE_Fran2_C];
    table.AddLocationPid(Content::Location::city_1);
    table.AddLocationPid(Content::Location::city_2);
    table.AddLocationPid(Content::Location::city_3);
    table.AddLocationPid(Content::Location::city_4);
    table.AddLocationPid(Content::Location::city_5);
    table.AddLocationPid(Content::Location::city_6);
    table.AddLocationPid(Content::Location::city_7);
    table.AddLocationPid(Content::Location::city_8);
    table.AddEncounter(10, 10061500).AddGroup(GROUP_FRAN_Mercenaries, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10061510).AddGroup(GROUP_EPA_Deathclaws, 5, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10061520).AddGroup(GROUP_EPA_Tough_Fire_Geckos, 8, 12);
    table.AddEncounter(10, 10061530).AddGroup(GROUP_EPA_Tough_Alien, 10, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10061630)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(3, 10061640)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10061650)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_EPA_Tough_Fire_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(3, 10061660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10061630)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(3, 10061640)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_FRAN_Mercenaries, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(3, 10061650)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_EPA_Tough_Fire_Geckos, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(3, 10061660)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_EPA_Tough_Alien, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(10, 10061670).AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8).CheckProperty(CritterProperty::EncLoyalitySf, '<', 12);
    table.AddEncounter(10, 10061680).AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(10, 10061670)
        .AddGroup(GROUP_FRAN2_San_Fran_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalitySf, '>', 11);
    table.AddEncounter(10, 10061680)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);

    // Wild5_D (Areas between San Francisco and NCR)
    table = EncounterTables[TABLE_Wild5_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10062000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10062010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10062020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(0, 10062030).AddGroup(GROUP_NAV_Enclave_Patrol, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10062130).AddGroup(GROUP_NCR_Masters_Army, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10062140).AddGroup(GROUP_EPA_Deathclaws, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(35, 10062150).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10062160)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10062170)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10062180)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10062190)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10062200)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10062210)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10062220)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10062230)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(1, 10053200)
        .Special(true)
        .LocationPid(Content::Location::soldiers_bunker)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialSoldierHolo, '=', 0)
        .AssignProperty(CritterProperty::SpecialSoldierHolo, '=', 1);

    // Wild5_M (Areas between San Francisco and NCR)
    table = EncounterTables[TABLE_Wild5_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddEncounter(0, 10062500).AddGroup(GROUP_NAV_Enclave_Patrol, 5, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10062510).AddGroup(GROUP_NCR_Masters_Army, 4, 9).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10062520).AddGroup(GROUP_EPA_Deathclaws, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(35, 10062530).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10062630)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10062640)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // NRNR_D (NCR - New Reno - Redding Trade Route)
    table = EncounterTables[TABLE_NRNR_D];
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_9);
    table.AddLocationPid(Content::Location::desert_10);
    table.AddEncounter(2, 10063000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10063010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10063020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(3, 10063030)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 12);
    table.AddEncounter(3, 10063130)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(1, 10063140)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10063030)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 11);
    table.AddEncounter(3, 10063130)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(1, 10063140)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(13, 10063150).AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(13, 10063160).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(13, 10063170)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 12)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(13, 10063150)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(13, 10063160)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(13, 10063170)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 11)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(1, 10063180)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10063190)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10063200)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10063210)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10063220)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10063230)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10063240)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10063250)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);

    // NRNR_M (NCR - New Reno - Redding Trade Route)
    table = EncounterTables[TABLE_NRNR_M];
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::cavern_2);
    table.AddLocationPid(Content::Location::cavern_4);
    table.AddLocationPid(Content::Location::cavern_5);
    table.AddEncounter(3, 10063500)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(3, 10063510)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(1, 10063520)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 12);
    table.AddEncounter(3, 10063500)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(3, 10063510)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(1, 10063520)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_EPA_Deathclaws, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 11);
    table.AddEncounter(13, 10063530).AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityRedding, '<', 12);
    table.AddEncounter(13, 10063630).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(13, 10063640)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 12)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(13, 10063530)
        .AddGroup(GROUP_DNRV_Redding_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityRedding, '>', 11);
    table.AddEncounter(13, 10063630)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(13, 10063640)
        .AddGroup(GROUP_NCR_Caravan, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 11)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10063650)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10063660)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);
    table.AddEncounter(1, 10063670)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // Wild6_M (Area between New Reno and NCR)
    table = EncounterTables[TABLE_Wild6_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddEncounter(33, 10064000).AddGroup(GROUP_RED_Wolves, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(33, 10064010).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(33, 10064020).AddGroup(GROUP_DMRV_Scorpions, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10064120)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10064130)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // Wild6_D (Area between New Reno and NCR)
    table = EncounterTables[TABLE_Wild6_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(2, 10064500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10064510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10064520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(33, 10064530).AddGroup(GROUP_RED_Wolves, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(33, 10064630).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(33, 10064640).AddGroup(GROUP_DMRV_Scorpions, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10064650)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10064660)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10064670)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10064680)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10064690)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10064700)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10064710)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10064720)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(1, 10064730)
        .Special(true)
        .LocationPid(Content::Location::soldiers_bunker)
        .CheckParam(CritterProperty::SkillOutdoorsman, '>', 119)
        .CheckProperty(CritterProperty::SpecialSoldierHolo, '=', 0)
        .AssignProperty(CritterProperty::SpecialSoldierHolo, '=', 1);
    table.AddEncounter(1, 10064740)
        .Special(true)
        .LocationPid(Content::Location::doughnut)
        .CheckProperty(CritterProperty::SpecialEncounterKotw, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterDoughnutWarehouse, '=', 1);

    // VNNB_D (Vault 15 - New Reno - NCR - Broken Hills)
    table = EncounterTables[TABLE_VNNB_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddEncounter(2, 10065000)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10065010)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10065020)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(20, 10065030).AddGroup(GROUP_NCR_Marauders, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10065130).AddGroup(GROUP_RED_Wolves, 8, 10);
    table.AddEncounter(10, 10065140).AddGroup(GROUP_DMRV_Scorpions, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10065150)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(3, 10065160)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(1, 10065170)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_RED_Wolves, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(0, 10065180)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(3, 10065150)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(3, 10065160)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 1);
    table.AddEncounter(1, 10065170)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_RED_Wolves, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(0, 10065180)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(5, 10065190).AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(5, 10065200).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10065210)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10065220).AddGroup(GROUP_V15_Caravan, 4, 8).CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(5, 10065190)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(5, 10065200)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10065210)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10065220)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(8, 10065230).AddGroup(GROUP_NEW_Traveller, 1, 2);
    table.AddEncounter(1, 10065240)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10065250)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10065260)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10065270)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10065280)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10065290)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10065300)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10065310)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);

    // VNNB_M (Vault 15 - New Reno - NCR - Broken Hills)
    table = EncounterTables[TABLE_VNNB_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddEncounter(20, 10065500).AddGroup(GROUP_NCR_Marauders, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10065510).AddGroup(GROUP_RED_Wolves, 8, 10);
    table.AddEncounter(10, 10065520).AddGroup(GROUP_DMRV_Scorpions, 7, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10065530)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(3, 10065630)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(1, 10065640)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_RED_Wolves, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(0, 10065650)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(3, 10065630)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(3, 10065630)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_NCR_Marauders, 3, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 1);
    table.AddEncounter(1, 10065640)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_RED_Wolves, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(0, 10065550)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_DMRV_Scorpions, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(5, 10065660).AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9).CheckProperty(CritterProperty::EncLoyalityBroken, '<', 12);
    table.AddEncounter(5, 10065670).AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9).CheckProperty(CritterProperty::EncLoyalityReno, '<', 12);
    table.AddEncounter(5, 10065680)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10065690).AddGroup(GROUP_V15_Caravan, 4, 8).CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(5, 10065660)
        .AddGroup(GROUP_RDRC_Broken_Hills_Caravan, 5, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityBroken, '>', 11);
    table.AddEncounter(5, 10065670)
        .AddGroup(GROUP_DNRV_Reno_Caravan, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityReno, '>', 11);
    table.AddEncounter(5, 10065680)
        .AddGroup(GROUP_NCR_Caravan, 5, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6)
        .CheckGVar(GameProperty::NCRSiegeCampsNum, '<', 1);
    table.AddEncounter(5, 10065690)
        .AddGroup(GROUP_V15_Caravan, 4, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(8, 10065700).AddGroup(GROUP_NEW_Traveller, 1, 2);
    table.AddEncounter(5, 10065710)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10065720)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // NCR_M (Area arounc NCR)
    table = EncounterTables[TABLE_NCR_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_5);
    table.AddLocationPid(Content::Location::mountain_6);
    table.AddLocationPid(Content::Location::mountain_4);
    table.AddEncounter(10, 10066000).AddGroup(GROUP_NCR_Masters_Army, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10066010).AddGroup(GROUP_NCR_Marauders, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10066020)
        .AddGroup(GROUP_NCR_Rangers, 5, 9)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(10, 10066030)
        .AddGroup(GROUP_NCR_Rangers, 5, 10)
        .AddGroup(GROUP_NCR_Marauders, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(2, 10066020)
        .AddGroup(GROUP_NCR_Rangers, 5, 9)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10066030)
        .AddGroup(GROUP_NCR_Rangers, 5, 10)
        .AddGroup(GROUP_NCR_Marauders, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(2, 10066130)
        .AddGroup(GROUP_KLA_Farmers, 2, 6)
        .AddGroup(GROUP_NCR_Masters_Army, 5, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(10, 10066140)
        .AddGroup(GROUP_KLA_Farmers, 3, 6)
        .AddGroup(GROUP_NCR_Marauders, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(20, 10066150).AddGroup(GROUP_NCR_Rangers, 6, 10).CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(20, 10066150)
        .AddGroup(GROUP_NCR_Rangers, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10066160).AddGroup(GROUP_KLA_Farmers, 3, 5);
    table.AddEncounter(50, 10066190)
        .AddGroup(GROUP_NCR_Patrol_Raiders, 3, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(30, 10066200)
        .AddGroup(GROUP_NCR_Patrol_Rebels, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(5, 10066170)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10066180)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // NCR_D (Area arounc NCR)
    table = EncounterTables[TABLE_NCR_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddLocationPid(Content::Location::desert_4);
    table.AddLocationPid(Content::Location::desert_5);
    table.AddLocationPid(Content::Location::desert_6);
    table.AddLocationPid(Content::Location::desert_11);
    table.AddEncounter(2, 10066500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10066510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10066520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(10, 10066530).AddGroup(GROUP_NCR_Masters_Army, 5, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10066630).AddGroup(GROUP_NCR_Marauders, 6, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(2, 10066640)
        .AddGroup(GROUP_NCR_Rangers, 5, 9)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(10, 10066650)
        .AddGroup(GROUP_NCR_Rangers, 5, 10)
        .AddGroup(GROUP_NCR_Marauders, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(2, 10066640)
        .AddGroup(GROUP_NCR_Rangers, 5, 9)
        .AddGroup(GROUP_NCR_Masters_Army, 4, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10066650)
        .AddGroup(GROUP_NCR_Rangers, 5, 10)
        .AddGroup(GROUP_NCR_Marauders, 4, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .Fighting(1, 2)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(2, 10066660)
        .AddGroup(GROUP_KLA_Farmers, 2, 6)
        .AddGroup(GROUP_NCR_Masters_Army, 5, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(10, 10066670)
        .AddGroup(GROUP_KLA_Farmers, 3, 6)
        .AddGroup(GROUP_NCR_Marauders, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(1, 2);
    table.AddEncounter(20, 10066680).AddGroup(GROUP_NCR_Rangers, 6, 10).CheckProperty(CritterProperty::EncLoyalityNcr, '<', 7);
    table.AddEncounter(20, 10066680)
        .AddGroup(GROUP_NCR_Rangers, 6, 10)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityNcr, '>', 6);
    table.AddEncounter(10, 10066690).AddGroup(GROUP_KLA_Farmers, 3, 5);
    table.AddEncounter(1, 10066700)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10066710)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10066720)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10066730)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10066740)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10066750)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10066760)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10066770)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(30, 10066190)
        .AddGroup(GROUP_NCR_Patrol_Raiders, 3, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(20, 10066200)
        .AddGroup(GROUP_NCR_Patrol_Rebels, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);

    // V15_M (Area arounc Vault 15)
    table = EncounterTables[TABLE_V15_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::cavern_0);
    table.AddEncounter(99, 10067750)
        .LocationPid(Content::Location::dappo_lost_caravan)
        .CheckProperty(CritterProperty::NcrDappoLostCCtatus, '=', 3)
        .AssignProperty(CritterProperty::NcrDappoLostCCtatus, '=', 4);
    table.AddEncounter(0, 10067000)
        .AddGroup(GROUP_NCR_Masters_Army, 5, 9)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(8, 10067010).AddGroup(GROUP_NCR_Masters_Army, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10067020).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 10).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10067030).AddGroup(GROUP_WILD2_Mutated_Molerats, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10067130).AddGroup(GROUP_DMRV_Scorpions, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(40, 10066190)
        .AddGroup(GROUP_NCR_Patrol_Raiders, 3, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(20, 10066200)
        .AddGroup(GROUP_NCR_Patrol_Rebels, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(5, 10067140)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10067150)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // V15_D (Area arounc Vault 15)
    table = EncounterTables[TABLE_V15_D];
    table.AddLocationPid(Content::Location::desert_1);
    table.AddLocationPid(Content::Location::desert_2);
    table.AddLocationPid(Content::Location::desert_3);
    table.AddEncounter(99, 10067750)
        .LocationPid(Content::Location::dappo_lost_caravan)
        .CheckProperty(CritterProperty::NcrDappoLostCCtatus, '=', 3)
        .AssignProperty(CritterProperty::NcrDappoLostCCtatus, '=', 4);
    table.AddEncounter(2, 10067500)
        .Special(true)
        .LocationPid(Content::Location::toxic)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterToxic, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterToxic, '=', 1);
    table.AddEncounter(2, 10067510)
        .Special(true)
        .LocationPid(Content::Location::pariahs)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterPariah, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterPariah, '=', 1);
    table.AddEncounter(2, 10067520)
        .Special(true)
        .LocationPid(Content::Location::mad_brahmins)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterBrahmin, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBrahmin, '=', 1);
    table.AddEncounter(0, 10067530)
        .AddGroup(GROUP_NCR_Masters_Army, 5, 9)
        .AddGroup(GROUP_WILD2_Mutated_Molerats, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2);
    table.AddEncounter(8, 10067630).AddGroup(GROUP_NCR_Masters_Army, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10067640).AddGroup(GROUP_DVMV_Mantis_Swarm, 8, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10067650).AddGroup(GROUP_WILD2_Mutated_Molerats, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10067660).AddGroup(GROUP_DMRV_Scorpions, 6, 12).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10067670)
        .Special(true)
        .LocationPid(Content::Location::whale)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWhale, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWhale, '=', 1);
    table.AddEncounter(1, 10067680)
        .Special(true)
        .LocationPid(Content::Location::vault_dwellers_head)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHead, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHead, '=', 1);
    table.AddEncounter(1, 10067690)
        .Special(true)
        .LocationPid(Content::Location::star_trek_shuttle)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterShuttle, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterShuttle, '=', 1);
    table.AddEncounter(1, 10067700)
        .Special(true)
        .LocationPid(Content::Location::guardian_of_forever)
        .CheckParam(CritterProperty::Level, '>', 7)
        .CheckProperty(CritterProperty::SpecialEncounterGuardian, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterGuardian, '=', 1);
    table.AddEncounter(1, 10067710)
        .Special(true)
        .LocationPid(Content::Location::king_arthur_and_knights)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly1, '=', 1);
    table.AddEncounter(1, 10067720)
        .Special(true)
        .LocationPid(Content::Location::tin_woodsman)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterWoodsman, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterWoodsman, '=', 1);
    table.AddEncounter(1, 10067730)
        .Special(true)
        .LocationPid(Content::Location::unwashed_villagers)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::SpecialEncounterUnwashed, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterUnwashed, '=', 1);
    table.AddEncounter(1, 10067740)
        .Special(true)
        .LocationPid(Content::Location::cafe)
        .CheckParam(CritterProperty::Level, '>', 5)
        .CheckProperty(CritterProperty::GeckoFindWoody, '<', 1)
        .AssignProperty(CritterProperty::GeckoFindWoody, '=', 1);
    table.AddEncounter(40, 10066190)
        .AddGroup(GROUP_NCR_Patrol_Raiders, 3, 8)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);
    table.AddEncounter(20, 10066200)
        .AddGroup(GROUP_NCR_Patrol_Rebels, 6, 9)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::NcrHatePatrol, '=', 2);

    // Ocean1_O (Ocean North, FOnline encounters)
    table = EncounterTables[TABLE_Ocean1_O];
    table.AddLocationPid(Content::Location::ocean_1);
    table.AddLocationPid(Content::Location::ocean_2);
    table.AddLocationPid(Content::Location::ocean_3);
    table.AddEncounter(30, 10068020).AddGroup(GROUP_OCEAN_W_Voles_Low, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(20, 10068030).AddGroup(GROUP_OCEAN_W_Voles_Low, 4, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068040).AddGroup(GROUP_OCEAN_W_Voles_High, 2, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068050).AddGroup(GROUP_OCEAN_Mantis, 5, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10068060).LocationPid(Content::Location::ocean_raft);
    table.AddEncounter(1, 10068070).LocationPid(Content::Location::ocean_trader).CheckGVar(GameProperty::EncOceanTraderAlive, '>', 0);

    // Ocean2_O (Ocean South, FOnline encounters)
    table = EncounterTables[TABLE_Ocean2_O];
    table.AddLocationPid(Content::Location::ocean_1);
    table.AddLocationPid(Content::Location::ocean_2);
    table.AddLocationPid(Content::Location::ocean_3);
    table.AddEncounter(20, 10068240).AddGroup(GROUP_OCEAN_Mantis, 5, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068210).AddGroup(GROUP_OCEAN_W_Voles_High, 3, 5).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068220).AddGroup(GROUP_OCEAN_W_Voles_High, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068230).AddGroup(GROUP_OCEAN_W_Voles_Mutated, 3, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(15, 10068250).AddGroup(GROUP_OCEAN_Wasps, 2, 3).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(10, 10068260).AddGroup(GROUP_OCEAN_Wasps, 4, 7).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(1, 10068270).LocationPid(Content::Location::ocean_raft);
    table.AddEncounter(1, 10068280).LocationPid(Content::Location::ocean_trader).CheckGVar(GameProperty::EncOceanTraderAlive, '>', 0);

    // HELL_M (Area around Hell, FOnline encounters)
    table = EncounterTables[TABLE_HELL_M];
    table.AddLocationPid(Content::Location::mountain_1);
    table.AddLocationPid(Content::Location::mountain_2);
    table.AddLocationPid(Content::Location::mountain_7);
    table.AddEncounter(8, 10068400).AddGroup(GROUP_HELL_Fugitives, 3, 5);
    table.AddEncounter(8, 10068410).AddGroup(GROUP_HELL_Patrol, 3, 3).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 7);
    table.AddEncounter(10, 10068420).AddGroup(GROUP_HELL_Patrol_R, 5, 6).CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 7);
    table.AddEncounter(8, 10068430)
        .AddGroup(GROUP_HELL_Patrol_R, 5, 6)
        .AddGroup(GROUP_HELL_Fugitives, 10, 15)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 7);
    table.AddEncounter(8, 10068440)
        .AddGroup(GROUP_HELL_Patrol, 3, 3)
        .AddGroup(GROUP_HELL_Fugitives, 8, 12)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '<', 7);
    table.AddEncounter(8, 10068410)
        .AddGroup(GROUP_HELL_Patrol, 3, 3)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 6);
    table.AddEncounter(10, 10068420)
        .AddGroup(GROUP_HELL_Patrol_R, 5, 6)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 6);
    table.AddEncounter(8, 10068430)
        .AddGroup(GROUP_HELL_Patrol_R, 5, 6)
        .AddGroup(GROUP_HELL_Fugitives, 10, 15)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 6);
    table.AddEncounter(8, 10068440)
        .AddGroup(GROUP_HELL_Patrol, 3, 3)
        .AddGroup(GROUP_HELL_Fugitives, 8, 12)
        .AddGroup(GROUP_Player, 0, 0)
        .Fighting(0, 1)
        .Fighting(0, 2)
        .CheckProperty(CritterProperty::EncLoyalityHubologists, '>', 6);
    table.AddEncounter(5, 10068450).AddGroup(GROUP_HELL_Fugitives, 3, 4).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(6, 10068460).AddGroup(GROUP_HELL_Fugitives, 7, 15).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10068470).AddGroup(GROUP_DMRV_Golden_Geckos, 4, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(5, 10068480).AddGroup(GROUP_RED_Wolves, 6, 8).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10068490).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 6).AddGroup(GROUP_Player, 0, 0).Fighting(0, 1);
    table.AddEncounter(3, 10068500).AddGroup(GROUP_WILD2_Mutated_Molerats, 4, 9).AddGroup(GROUP_DMRV_Golden_Geckos, 7, 12).Fighting(0, 1);
    table.AddEncounter(3, 10068510).AddGroup(GROUP_WILD2_Mutated_Molerats, 5, 9).AddGroup(GROUP_DMRV_Scorpions, 6, 9).Fighting(0, 1);
    table.AddEncounter(5, 10068520)
        .Special(true)
        .LocationPid(Content::Location::bridge_keeper)
        .CheckParam(CritterProperty::Level, '>', 9)
        .CheckProperty(CritterProperty::SpecialEncounterBridge, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterBridge, '=', 1);
    table.AddEncounter(1, 10068530)
        .Special(true)
        .LocationPid(Content::Location::killer_bunny)
        .CheckProperty(CritterProperty::SpecialEncounterHoly1, '>', 0)
        .CheckProperty(CritterProperty::SpecialEncounterHoly2, '<', 1)
        .AssignProperty(CritterProperty::SpecialEncounterHoly2, '=', 1);

    // All of the Tile information:

    SetZone(0, 0, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 1, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 2, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 3, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 4, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 5, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 6, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 7, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(0, 7, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 8, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(0, 8, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 9, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Common);
    SetZone(0, 9, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 10, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Common);
    SetZone(0, 10, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 11, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 12, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 13, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 14, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 15, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 16, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 17, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 18, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 19, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 20, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(0, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(1, 0, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(1, 0, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 1, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(1, 1, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 2, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(1, 2, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 3, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(1, 3, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 4, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(1, 4, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 5, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(1, 5, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 6, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(1, 6, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 7, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(1, 7, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 8, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(1, 9, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(1, 10, TABLE_Fish_O, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(1, 10, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 11, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Common);
    SetZone(1, 11, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 12, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 13, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 14, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 15, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 16, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 17, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 18, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 19, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 20, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(1, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(2, 0, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(2, 1, TABLE_Arro_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(2, 1, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 2, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(2, 3, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(2, 4, TABLE_Arro_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(2, 5, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(2, 6, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(2, 7, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(2, 8, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(2, 9, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(2, 10, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(2, 11, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Common);
    SetZone(2, 11, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 12, TABLE_Fish_O, -40, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(2, 12, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 13, TABLE_Fish_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(2, 13, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 14, TABLE_Nav_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(2, 14, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 15, TABLE_Nav_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(2, 15, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 16, TABLE_Nav_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(2, 16, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 17, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 18, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 19, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 20, TABLE_Ocean1_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(2, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(3, 0, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 1, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(3, 2, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(3, 3, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(3, 4, TABLE_Arro_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(3, 5, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 6, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(3, 7, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(3, 8, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(3, 9, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 10, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 11, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 12, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 13, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(3, 14, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(3, 15, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(3, 16, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(3, 16, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 17, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(3, 17, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 18, TABLE_Nav_O, -25, TERRAIN_Coast, CHANCE_Common);
    SetZone(3, 18, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 19, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 20, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(3, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(4, 0, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 1, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(4, 2, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(4, 3, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(4, 4, TABLE_Arro_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(4, 5, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 6, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 7, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 8, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 9, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 10, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(4, 11, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 12, TABLE_Prim_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(4, 13, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(4, 14, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(4, 15, TABLE_Nav_D, -40, TERRAIN_Desert, CHANCE_Common);
    SetZone(4, 16, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(4, 17, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(4, 18, TABLE_Nav_M, -25, TERRAIN_Mountain, CHANCE_Common);
    SetZone(4, 19, TABLE_Nav_O, -25, TERRAIN_Coast, CHANCE_Common);
    SetZone(4, 19, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 20, TABLE_Nav_O, 0, TERRAIN_Coast, CHANCE_Common);
    SetZone(4, 20, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(4, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(5, 0, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 1, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(5, 2, TABLE_Arrok_D, 0, TERRAIN_Desert, CHANCE_Rare);
    SetZone(5, 3, TABLE_Arro_D, 0, TERRAIN_Desert, CHANCE_Rare);
    SetZone(5, 4, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 5, TABLE_Arro_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 6, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 7, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(5, 8, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(5, 9, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 10, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 11, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(5, 12, TABLE_Prim_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(5, 13, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(5, 14, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(5, 15, TABLE_Nav_D, -40, TERRAIN_Desert, CHANCE_Common);
    SetZone(5, 16, TABLE_Nav_D, -40, TERRAIN_Desert, CHANCE_Common);
    SetZone(5, 17, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(5, 18, TABLE_Nav_D, -25, TERRAIN_Desert, CHANCE_Common);
    SetZone(5, 19, TABLE_Nav_M, -25, TERRAIN_Mountain, CHANCE_Common);
    SetZone(5, 20, TABLE_Nav_O, -25, TERRAIN_Coast, CHANCE_Common);
    SetZone(5, 20, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 21, TABLE_Nav_O, -25, TERRAIN_Coast, CHANCE_Common);
    SetZone(5, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(5, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(6, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 1, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 2, TABLE_Arrok_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(6, 3, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 4, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 5, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 6, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 7, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 8, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 9, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 10, TABLE_Prim_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(6, 11, TABLE_Prim_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 12, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 13, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(6, 14, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(6, 15, TABLE_Nav_D, -40, TERRAIN_Desert, CHANCE_Common);
    SetZone(6, 16, TABLE_Nav_D, -40, TERRAIN_Desert, CHANCE_Common);
    SetZone(6, 17, TABLE_Nav_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(6, 18, TABLE_Nav_D, -25, TERRAIN_Desert, CHANCE_Common);
    SetZone(6, 19, TABLE_Nav_D, -25, TERRAIN_Desert, CHANCE_Common);
    SetZone(6, 20, TABLE_Nav_M, -25, TERRAIN_Mountain, CHANCE_Common);
    SetZone(6, 21, TABLE_Wild4_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(6, 21, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 22, TABLE_Wild4_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(6, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 23, TABLE_Wild4_O, 0, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(6, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(6, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(7, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 1, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 2, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(7, 3, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 4, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 5, TABLE_Den_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 6, TABLE_Den_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 7, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 8, TABLE_Prim_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 9, TABLE_Prim_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 10, TABLE_Prim_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 11, TABLE_Prim_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 12, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 13, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 14, TABLE_Wild4_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 15, TABLE_Wild4_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 16, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 17, TABLE_Wild4_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 18, TABLE_Wild4_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 19, TABLE_Wild4_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(7, 20, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 21, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 22, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(7, 23, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(7, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 24, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(7, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(7, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(8, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 1, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 2, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 3, TABLE_Klad_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 4, TABLE_Klad_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 5, TABLE_Den_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 6, TABLE_Den_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 7, TABLE_Den_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 8, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 9, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 10, TABLE_Prim_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 11, TABLE_Prim_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 12, TABLE_Prim_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 13, TABLE_Prim_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 14, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 15, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 16, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 17, TABLE_Wild4_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 18, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 19, TABLE_Wild4_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 20, TABLE_Wild4_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(8, 21, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 22, TABLE_Wild4_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(8, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 23, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(8, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 24, TABLE_Fran_O, 0, TERRAIN_Coast, CHANCE_Common);
    SetZone(8, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 25, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(8, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 26, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(8, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 27, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(8, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 28, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(8, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(8, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(9, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(9, 1, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 2, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(9, 3, TABLE_Den_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 4, TABLE_Klad_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 5, TABLE_Den_D, 0, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(9, 6, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 7, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 8, TABLE_DNRV_M, -20, TERRAIN_Mountain, CHANCE_Common);
    SetZone(9, 9, TABLE_DNRV_M, -20, TERRAIN_Mountain, CHANCE_Common);
    SetZone(9, 10, TABLE_DNRV_M, -20, TERRAIN_Mountain, CHANCE_Common);
    SetZone(9, 11, TABLE_Prim_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 12, TABLE_Prim_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 13, TABLE_Prim_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 14, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 15, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(9, 16, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(9, 17, TABLE_EPA_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(9, 18, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(9, 19, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(9, 20, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(9, 21, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(9, 22, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(9, 22, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 23, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(9, 23, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 24, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Uncommon);
    SetZone(9, 24, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 25, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(9, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 26, TABLE_Fran_C, -50, TERRAIN_City, CHANCE_Frequent);
    SetZone(9, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 27, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(9, 27, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 28, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(9, 28, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(9, 29, TABLE_Fran_O, 0, TERRAIN_Coast, CHANCE_Rare);
    SetZone(9, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(10, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 1, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 2, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 3, TABLE_DMRV_D, 0, TERRAIN_Desert, CHANCE_Common);
    SetZone(10, 4, TABLE_DMRV_D, 0, TERRAIN_Desert, CHANCE_Common);
    SetZone(10, 5, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 6, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 7, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 8, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 9, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(10, 10, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 11, TABLE_DNRV_D, -20, TERRAIN_Desert, CHANCE_Rare);
    SetZone(10, 12, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 13, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 14, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 15, TABLE_Wild4_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 16, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(10, 17, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(10, 18, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(10, 19, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(10, 20, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(10, 21, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(10, 22, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(10, 23, TABLE_Fran_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(10, 24, TABLE_Fran_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(10, 25, TABLE_Fran_C, -50, TERRAIN_City, CHANCE_Common);
    SetZone(10, 25, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(10, 26, TABLE_Fran_C, -50, TERRAIN_City, CHANCE_Common);
    SetZone(10, 26, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);
    SetZone(10, 27, TABLE_Fran_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(10, 28, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(10, 29, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(10, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(11, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 1, TABLE_Kla_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 2, TABLE_DMRV_D, 0, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 3, TABLE_DMRV_D, 0, TERRAIN_Desert, CHANCE_Common);
    SetZone(11, 4, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 5, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 6, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 7, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 8, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 9, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 10, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(11, 11, TABLE_Red_M, -20, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 12, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 13, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 14, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 15, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 16, TABLE_EPA_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(11, 17, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(11, 18, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(11, 19, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(11, 20, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(11, 21, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(11, 22, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(11, 23, TABLE_Fran_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(11, 24, TABLE_Fran_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(11, 25, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(11, 26, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(11, 27, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(11, 28, TABLE_Fran2_C, -50, TERRAIN_City, CHANCE_Uncommon);
    SetZone(11, 29, TABLE_Fran_O, -50, TERRAIN_Coast, CHANCE_Rare);
    SetZone(11, 29, TABLE_Ocean2_O, 0, TERRAIN_Water, CHANCE_Rare);

    SetZone(12, 0, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 1, TABLE_Kla_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 2, TABLE_DMRV_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 3, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 4, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 5, TABLE_Den_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 6, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 7, TABLE_Den_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 8, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 9, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(12, 10, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(12, 11, TABLE_Red_D, -20, TERRAIN_Desert, CHANCE_Rare);
    SetZone(12, 12, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 13, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 14, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 15, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 16, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 17, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 18, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 19, TABLE_EPA_M, -50, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(12, 20, TABLE_EPA_M, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 21, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 22, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(12, 23, TABLE_Fran2_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 24, TABLE_Fran2_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 25, TABLE_Fran_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 26, TABLE_Fran_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 27, TABLE_Fran_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(12, 28, TABLE_Fran_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(12, 29, TABLE_Fran_C, -50, TERRAIN_City, CHANCE_Uncommon);

    SetZone(13, 0, TABLE_Band_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(13, 1, TABLE_Band_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(13, 2, TABLE_DMRV_M, 0, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(13, 3, TABLE_Band_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(13, 4, TABLE_Band_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(13, 5, TABLE_Band_M, 0, TERRAIN_Mountain, CHANCE_Common);
    SetZone(13, 6, TABLE_Band_M, -20, TERRAIN_Mountain, CHANCE_Common);
    SetZone(13, 7, TABLE_Band_M, -20, TERRAIN_Mountain, CHANCE_Common);
    SetZone(13, 8, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 9, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 10, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 11, TABLE_Red_M, -20, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 12, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 13, TABLE_Red_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 14, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 15, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 16, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(13, 17, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(13, 18, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(13, 19, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(13, 20, TABLE_EPA_D, -50, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(13, 21, TABLE_EPA_C, -50, TERRAIN_City, CHANCE_Frequent);
    SetZone(13, 22, TABLE_EPA_C, -50, TERRAIN_City, CHANCE_Frequent);
    SetZone(13, 23, TABLE_Wild4_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 24, TABLE_Wild5_D, -50, TERRAIN_Desert, CHANCE_Common);
    SetZone(13, 25, TABLE_Wild5_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(13, 26, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 27, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 28, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(13, 29, TABLE_Wild5_D, -50, TERRAIN_Desert, CHANCE_Rare);

    SetZone(14, 0, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(14, 1, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(14, 2, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(14, 3, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 4, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 5, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 6, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 7, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 8, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(14, 9, TABLE_HELL_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(14, 10, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(14, 11, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(14, 12, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(14, 13, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(14, 14, TABLE_SRNRRN_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(14, 15, TABLE_SRNRRN_D, -40, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(14, 16, TABLE_EPA_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(14, 17, TABLE_EPA_D, -40, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(14, 18, TABLE_EPA_D, -30, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(14, 19, TABLE_EPA_D, -30, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(14, 20, TABLE_EPA_D, -30, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(14, 21, TABLE_EPA_C, -30, TERRAIN_City, CHANCE_Frequent);
    SetZone(14, 22, TABLE_EPA_C, -30, TERRAIN_City, CHANCE_Frequent);
    SetZone(14, 23, TABLE_NRNR_D, -30, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(14, 24, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Common);
    SetZone(14, 25, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(14, 26, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Rare);
    SetZone(14, 27, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Rare);
    SetZone(14, 28, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(14, 29, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Rare);

    SetZone(15, 0, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 1, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 2, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 3, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 4, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 5, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 6, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 7, TABLE_Band_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 8, TABLE_HELL_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 9, TABLE_HELL_M, -15, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(15, 10, TABLE_HELL_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 11, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(15, 12, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 13, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 14, TABLE_SRNRRN_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 15, TABLE_SRNRRN_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 16, TABLE_EPA_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(15, 17, TABLE_EPA_M, -40, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(15, 18, TABLE_EPA_M, -30, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(15, 19, TABLE_EPA_D, -30, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(15, 20, TABLE_EPA_M, -30, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(15, 21, TABLE_EPA_C, -30, TERRAIN_City, CHANCE_Frequent);
    SetZone(15, 22, TABLE_EPA_C, -30, TERRAIN_City, CHANCE_Frequent);
    SetZone(15, 23, TABLE_NRNR_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(15, 24, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Common);
    SetZone(15, 25, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(15, 26, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(15, 27, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(15, 28, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(15, 29, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);

    SetZone(16, 0, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 1, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 2, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(16, 3, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 4, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 5, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 6, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 7, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 8, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(16, 9, TABLE_HELL_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 10, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(16, 11, TABLE_Red_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(16, 12, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(16, 13, TABLE_Red_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 14, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 15, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 16, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 17, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 18, TABLE_New_D, -30, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(16, 19, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 20, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 21, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 22, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 23, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 24, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(16, 25, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 26, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(16, 27, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(16, 28, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(16, 29, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);

    SetZone(17, 0, TABLE_Wild1_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(17, 1, TABLE_Wild1_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(17, 2, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(17, 3, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 4, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 5, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 6, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 7, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 8, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(17, 9, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 10, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 11, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 12, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 13, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(17, 14, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 15, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 16, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 17, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 18, TABLE_New_D, -30, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(17, 19, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 20, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 21, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 22, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 23, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 24, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(17, 25, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 26, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(17, 27, TABLE_NRNR_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(17, 28, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(17, 29, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Uncommon);

    SetZone(18, 0, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 1, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 2, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(18, 3, TABLE_DMRV_D, -15, TERRAIN_Desert, CHANCE_Common);
    SetZone(18, 4, TABLE_DMRV_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(18, 5, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(18, 6, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 7, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 8, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(18, 9, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(18, 10, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 11, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 12, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 13, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 14, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 15, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(18, 16, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(18, 17, TABLE_New_C, -40, TERRAIN_City, CHANCE_Common);
    SetZone(18, 18, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(18, 19, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(18, 20, TABLE_New_C, -30, TERRAIN_City, CHANCE_Uncommon);
    SetZone(18, 21, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(18, 22, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 23, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 24, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(18, 25, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 26, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 27, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(18, 28, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Rare);
    SetZone(18, 29, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Rare);

    SetZone(19, 0, TABLE_Wild1_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(19, 1, TABLE_Wild1_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(19, 2, TABLE_Wild1_D, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 3, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 4, TABLE_DVMV_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(19, 5, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(19, 6, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 7, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 8, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 9, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 10, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(19, 11, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 12, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 13, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 14, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 15, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(19, 16, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(19, 17, TABLE_New_C, -40, TERRAIN_City, CHANCE_Common);
    SetZone(19, 18, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(19, 19, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(19, 20, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 21, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Common);
    SetZone(19, 22, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(19, 23, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 24, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(19, 25, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 26, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 27, TABLE_NRNR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(19, 28, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(19, 29, TABLE_Wild5_D, -70, TERRAIN_Desert, CHANCE_Rare);

    SetZone(20, 0, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 1, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 2, TABLE_Wild1_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 3, TABLE_DMRV_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 4, TABLE_DVMV_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(20, 5, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(20, 6, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 7, TABLE_Mod_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 8, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 9, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 10, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 11, TABLE_Wild3_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 12, TABLE_Raid_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 13, TABLE_Raid_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 14, TABLE_Wild3_M, -40, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 15, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(20, 16, TABLE_New_M, -40, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(20, 17, TABLE_New_C, -40, TERRAIN_City, CHANCE_Common);
    SetZone(20, 18, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(20, 19, TABLE_New_C, -30, TERRAIN_City, CHANCE_Common);
    SetZone(20, 20, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 21, TABLE_New_M, -30, TERRAIN_Mountain, CHANCE_Common);
    SetZone(20, 22, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(20, 23, TABLE_Wild6_M, -30, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 24, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Common);
    SetZone(20, 25, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 26, TABLE_Wild5_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 27, TABLE_NCR_M, -70, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(20, 28, TABLE_NCR_D, -70, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(20, 29, TABLE_NCR_D, -70, TERRAIN_Desert, CHANCE_Rare);

    SetZone(21, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 1, TABLE_Wild2_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 2, TABLE_Wild2_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 3, TABLE_Wild2_D, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 4, TABLE_DVMV_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 5, TABLE_VPat_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 6, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 7, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 8, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 9, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 10, TABLE_Raid_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 11, TABLE_Raid_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 12, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 13, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 14, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 15, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 16, TABLE_New_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 17, TABLE_New_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 18, TABLE_New_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 19, TABLE_New_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 20, TABLE_New_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 21, TABLE_New_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(21, 22, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 23, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 24, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(21, 25, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 26, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(21, 27, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(21, 28, TABLE_NCR_D, -50, TERRAIN_Desert, CHANCE_Rare);
    SetZone(21, 29, TABLE_NCR_D, -50, TERRAIN_Desert, CHANCE_Rare);

    SetZone(22, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 1, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 2, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 3, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 4, TABLE_DVMV_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 5, TABLE_VPat_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 6, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 7, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 9, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 10, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 11, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 12, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Common);
    SetZone(22, 13, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Common);
    SetZone(22, 14, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Common);
    SetZone(22, 15, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 16, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Rare);
    SetZone(22, 17, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Rare);
    SetZone(22, 18, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(22, 19, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 20, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 21, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 22, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 23, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(22, 24, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(22, 25, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 26, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(22, 27, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(22, 28, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(22, 29, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);

    SetZone(23, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 1, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 2, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 3, TABLE_Wild2_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 4, TABLE_DVMV_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 5, TABLE_DVMV_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(23, 6, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(23, 7, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(23, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 9, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 10, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 11, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 12, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Common);
    SetZone(23, 13, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(23, 14, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Common);
    SetZone(23, 15, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 16, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Rare);
    SetZone(23, 17, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Rare);
    SetZone(23, 18, TABLE_Brok_D, -45, TERRAIN_Desert, CHANCE_Rare);
    SetZone(23, 19, TABLE_Brok_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 20, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 21, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 22, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 23, TABLE_VNNB_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(23, 24, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(23, 25, TABLE_VNNB_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 26, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(23, 27, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(23, 28, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(23, 29, TABLE_NCR_M, -50, TERRAIN_Mountain, CHANCE_Rare);

    SetZone(24, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 1, TABLE_Wild2_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(24, 2, TABLE_Wild2_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(24, 3, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(24, 4, TABLE_Geck_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 5, TABLE_DVMV_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(24, 6, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Common);
    SetZone(24, 7, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 9, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 10, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 11, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 12, TABLE_RDRC_M, -55, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(24, 13, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(24, 14, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Common);
    SetZone(24, 15, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(24, 16, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 17, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 18, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(24, 19, TABLE_Brok_D, -45, TERRAIN_Desert, CHANCE_Common);
    SetZone(24, 20, TABLE_Wild6_D, -45, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(24, 21, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Common);
    SetZone(24, 22, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 23, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 24, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(24, 25, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 26, TABLE_V15_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(24, 27, TABLE_V15_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(24, 28, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(24, 29, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);

    SetZone(25, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(25, 1, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(25, 2, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(25, 3, TABLE_Geck_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(25, 4, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(25, 5, TABLE_DVMV_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(25, 6, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Rare);
    SetZone(25, 7, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Rare);
    SetZone(25, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 9, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 10, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 11, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 12, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(25, 13, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Frequent);
    SetZone(25, 14, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Common);
    SetZone(25, 15, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(25, 16, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 17, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 18, TABLE_Brok_D, -45, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(25, 19, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Common);
    SetZone(25, 20, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Frequent);
    SetZone(25, 21, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Common);
    SetZone(25, 22, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 23, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 24, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(25, 25, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 26, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 27, TABLE_V15_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(25, 28, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(25, 29, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);

    SetZone(26, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Common);
    SetZone(26, 1, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(26, 2, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(26, 3, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Rare);
    SetZone(26, 4, TABLE_Geck_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(26, 5, TABLE_Geck_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(26, 6, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(26, 7, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(26, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 9, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 10, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 11, TABLE_RDRC_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 12, TABLE_RDRC_D, -55, TERRAIN_Desert, CHANCE_Common);
    SetZone(26, 13, TABLE_Raid_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(26, 14, TABLE_Raid_D, -55, TERRAIN_Desert, CHANCE_Rare);
    SetZone(26, 15, TABLE_Brok_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(26, 16, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 17, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 18, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 19, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 20, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 21, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 22, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 23, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 24, TABLE_Wild5_D, -50, TERRAIN_Desert, CHANCE_Common);
    SetZone(26, 25, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 26, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 27, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 28, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(26, 29, TABLE_V15_D, -50, TERRAIN_Desert, CHANCE_Uncommon);

    SetZone(27, 0, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(27, 1, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(27, 2, TABLE_Wild2_M, -15, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(27, 3, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 4, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 5, TABLE_Geck_D, -15, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 6, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 7, TABLE_VPat_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 8, TABLE_VPat_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 9, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 10, TABLE_Raid_M, -35, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 11, TABLE_Raid_D, -35, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 12, TABLE_Raid_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 13, TABLE_Raid_D, -55, TERRAIN_Desert, CHANCE_Uncommon);
    SetZone(27, 14, TABLE_Raid_M, -55, TERRAIN_Mountain, CHANCE_Rare);
    SetZone(27, 15, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 16, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 17, TABLE_Brok_M, -55, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 18, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 19, TABLE_Brok_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 20, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 21, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 22, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 23, TABLE_Wild6_M, -45, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 24, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Common);
    SetZone(27, 25, TABLE_Wild5_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 26, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 27, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 28, TABLE_V15_M, -50, TERRAIN_Mountain, CHANCE_Uncommon);
    SetZone(27, 29, TABLE_V15_D, -50, TERRAIN_Desert, CHANCE_Uncommon);
}
