// FOS Server

// Author: Dagnir, rifleman17
// Торговцы на Атолле. Периодически получают лут из таблицы atollLoot.
// Предметы появляются группами, это позволяет настроить появление оружия и патронов к нему, например.

#define CTE_REFRESH (17)

void _MapInit(Map map, bool firstTime)
{
    Critter[] critters = map.GetCritters(CritterFindType::AliveNpc);
    for (uint i = 0; i < critters.length(); i++) {
        Critter cr = critters[i];
        cr.ReplicationTime = 480;
        if (cr.DialogId == Content::Dialog::atoll_trader) {
            cr.IsBarterOnlyCash = true;
        }
    }
}

// clang-format off

int[][][] atollLoot =
/*       Время до следующей генерации предметов, в реальных минутах
         Код предмета,                        Кол-воОт, Кол-воДо, Шанс%*/
{
    /* Начало описания одной группы товаров */
    {
        { 120 },                                                                     /* Первой строкой указано время следующего обновления товара у торговца в реальных минутах*/
        { Content::Item::combat_armor.hash,                    0,       1,         100 }, /* Далее идет описание товаров в составе группы */
        { Content::Item::pk12_gauss_pistol.hash,               1,       1,         100 },
        { Content::Item::_2mm_ec_ammo.hash,                    100,     1,         100 },
        { Content::Item::mentats.hash,                         2,       5,         100 }
    },    /* {Хвост описания одной группы товаров */
    {
        { 240 },
        { Content::Item::explosive_rocket.hash,                20,      35,        100 },
        { Content::Item::pulse_grenade.hash,                   6,       8,         100 },
        { Content::Item::rocket_launcher.hash,                 1,       1,         100 },
        { Content::Item::louisville_slugger.hash,              1,       2,         100 }
    },
    {
        { 360 },
        { Content::Item::mega_power_fist.hash,                 1,       3,         100 },
        { Content::Item::brotherhood_combat_armor.hash,        0,       1,         100 },
        { Content::Item::_7_62mm_ammo.hash,                    300,     500,       100 },
        { Content::Item::small_energy_cell.hash,               400,     500,       100 },
        { Content::Item::fn_fal_night_scope.hash,              1,       1,         100 }
    },
    {
        { 240 },
        { Content::Item::m72_gauss_rifle.hash,                 1,       1,         100 },
        { Content::Item::_2mm_ec_ammo.hash,                    200,     300,       100 }
    },
    {
        { 240 },
        { Content::Item::super_stimpak.hash,                   5,       15,        25  },
        { Content::Item::super_stimpak.hash,                   5,       5,         100 },
        { Content::Item::stimpak.hash,                         20,      30,        100 }
    },
    {
        { 1000 },
        { Content::Item::powered_armor.hash,                   1,       1,         10  },       /* Шанс появления = 10%/число строк таблицы  */
        { Content::Item::turbo_plasma_rifle.hash,              1,       1,         100 },
        { Content::Item::micro_fusion_cell.hash,               200,     400,       100 }
    },
    {
        { 120 },
        { Content::Item::plasma_pistol.hash,                   1,       2,         50  },
        { Content::Item::small_energy_cell.hash,               200,     300,       50  }
    },
    {
        { 480 },
        { Content::Item::yk42b_pulse_rifle.hash,               1,       2,         25  },
        { Content::Item::_4_7mm_caseless.hash,                 400,     500,       50  }
    },
    {
        { 120 },
        { Content::Item::magneto_laser_pistol.hash,            1,       2,         50  },
        { Content::Item::small_energy_cell.hash,               100,     100,       50  }
    },
    {
        { 120 },
        { Content::Item::metal_armor_mk_ii.hash,               1,       1,         50  },
        { Content::Item::hk_g11e.hash,                         1,       1,         100 },
        { Content::Item::_4_7mm_caseless.hash,                 200,     400,       100 }
    }
};

// clang-format on

void _AtollTraderInit(Critter cr, bool firstTime)
{
    cr.SkillBarter = 200;
    cr.IsNoItemGarbager = true;
    cr.IsNoBarter = false;
    cr.IsNoDrop = true;
    cr.IsNoSteal = true;
    cr.IsNoLoot = true;
    cr.IsNoEnemyStack = true;
    cr.IsBarterOnlyCash = true;
    if (cr.GetTimeEvents(CTE_REFRESH) == 0) {
        cr.AddTimeEvent(cte_RefreshBag, 0, CTE_REFRESH);
    }
}

uint cte_RefreshBag(Critter cr, any identifier, uint& rate)
{
    uint idx = Game.Random(0, atollLoot.length() - 1);
    uint timeNext = atollLoot[idx][0][0];
    int chance = 0;
    int qty = 0;

    Item[] items = cr.GetItems();
    Game.DestroyItems(items);

    for (uint i = 1; i < atollLoot[idx].length(); i++) {
        chance = atollLoot[idx][i][3];
        if (chance >= 100 || (Game.Random(0, 99) < chance)) {
            qty = Game.Random(atollLoot[idx][i][1], atollLoot[idx][i][2]);
            if (qty > 0) {
                auto pid = hstring_fromHash(atollLoot[idx][i][0]);
                cr.AddItem(pid, qty);
            }
        }
    }
    return Time::RealHour(timeNext);
}
