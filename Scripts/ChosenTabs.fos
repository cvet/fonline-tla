// FOS Client Sort 2

// Author: cvet
// Server and client stuff for radio

Sprite::Sprite TabPic = Sprite::Sprite();
int[] Position = {5, 5};
int StepX = 0;
int StepY = 5;
bool LevelUp;
int CurTab;

void InitChosenTabs()
{
    TabPic.Load("art/intrface/chosen_tab.png");
    if (StepX != 0) {
        StepX += TabPic.Width;
    }
    if (StepY != 0) {
        StepY += TabPic.Height;
    }
    LevelUp = false;
    CurTab = 0;
}

void SetChosenTabLevelUp(bool enable)
{
    LevelUp = enable;
}

void DrawChosenTabs()
{
    if (Gui::GetActiveMainScreen().Index != CLIENT_MAIN_SCREEN_GAME) {
        return;
    }

    Critter chosen = Game.GetChosen();
    if (not valid(chosen)) {
        return;
    }

    if (LevelUp && (Gui::GetActiveMainScreen().Index != CLIENT_MAIN_SCREEN_GAME || Gui::GetActiveScreen().Index == CLIENT_SCREEN_CHARACTER ||
                    Gui::GetActiveScreen().Index == CLIENT_SCREEN_PERK)) {
        LevelUp = false;
    }

    CurTab = 0;

    if (chosen.InSneakMode) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrHidemodeTitle), COLOR_DGREEN);
    }

    if (LevelUp) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrLevelupTitle), COLOR_DGREEN);
    }

    if (chosen.IsOverweight) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrOverweightTitle), COLOR_DRED);
    }

    if (chosen.IsPoisoned) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrPoisonedTitle), COLOR_DRED);
    }

    if (chosen.IsRadiated) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrRadiatedTitle), COLOR_DRED);
    }

    if (chosen.IsInjured) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrInjuredTitle), COLOR_DRED);
    }

    if (chosen.IsAddicted) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrAddictedTitle), COLOR_DRED);
    }

    if (IS_TIMEOUT(chosen.TimeoutTransfer)) {
        DrawTab(Game.GetText(TextPackName::Game, MsgStr::StrTimeoutTitle), (chosen.TimeoutTransfer - Game.GetFullSecond()) / 1000, COLOR_DRED);
    }
}

void DrawTab(string text, ucolor color)
{
    TabPic.Draw(Position[0] + CurTab * StepX, Position[1] + CurTab * StepY);
    Game.DrawText(text, Position[0] + CurTab * StepX, Position[1] + CurTab * StepY, TabPic.Width, TabPic.Height, color, Fonts::Default, FT_CENTERXY);
    CurTab++;
}

void DrawTab(string text, int value, ucolor color)
{
    text = Game.ReplaceText(text, "VALUE", value);
    TabPic.Draw(Position[0] + CurTab * StepX, Position[1] + CurTab * StepY);
    Game.DrawText(text, Position[0] + CurTab * StepX, Position[1] + CurTab * StepY, TabPic.Width, TabPic.Height, color, Fonts::Default, FT_CENTERXY);
    CurTab++;
}
