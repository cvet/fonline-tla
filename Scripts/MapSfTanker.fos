// FOS Server

// Author: rifleman17
// Mобы на нижнем уровне танкера. Унаследованный мобскрипт, за исключением того, что мобы не атакуют персонажа, у которого нет убийств гуманоидов, чужих,
// кентавров и флоатеров если заходит "чистюля" (далее, человек без киллов всех вышеперечисленных) мобы собираются со всего танкера и cледут за ним. Если зайдет
// кто-то другой - обычный скрипт, и чистюле тоже достанется твари следуют за игроком - для этого используется переменная MapSFTankerBicycleId - пока не увидят
// кого то другого, тогда они стриают чистюлю из памяти и действуют по старой схеме чистюля может быть только один, если заходит второй - он стирается, его
// атакуют и второго тоже в независимости взят квест или нет, поведение не меняется

#define KILL_MEN     (260)
#define KILL_WOMEN   (261)
#define KILL_FLOATER (268)
#define KILL_CENTAUR (269)
#define KILL_ALIEN   (276)

///@ Property Critter Protected     uint8 SFRonKillBeasts Group = Quests Quest = 4416 Max = 4
///@ Property Critter Protected     uint8 SFRonFindbodies Group = Quests Quest = 4417 Max = 6
///@ Property Critter PrivateServer uint8 SFTankerCentaurNoticed Max = 1
///@ Property Critter PrivateServer uint8 SFTankerFloaterNoticed Max = 1
///@ Property Critter PrivateServer ident MapSFTankerBicycleId

void TankerMapInit(Map map, bool firstTime)
{
    map.OnCritterIn.Subscribe(_TankerInCritter);
}

void _TankerMobInit(Critter cr, bool firstTime)
{
    Mob::_MobInit(cr, firstTime);
    cr.OnCritterAppearedDist1.Subscribe(_TankerShowCritter1);
    cr.OnIdle.Subscribe(_TankerIdle);
    cr.OnDead.Subscribe(_TankerDead);
    cr.OnSomeCritterDead.Subscribe(_TankerDeath);
    // Aтака, вне зависимости от того, чистюля персонаж или нет
    cr.ShowCritterDist2 = 1;
    cr.OnCritterAppearedDist2.Subscribe(_TankerShowCritter2);
}

void _TankerShowCritter2(Critter cr, Critter player)
{
    if (not player.IsOwnedByPlayer()) {
        return;
    }
    if (cr.MapSFTankerBicycleId == ZERO_IDENT) {
        return; // Это ловушка для чистюль исключительно
    }

    NpcPlanes::AddAttackPlane(cr, AI_PLANE_ATTACK_PRIORITY + 1, player);
}

void _TankerDeath(Critter cr, Critter fromCrit, Critter killer)
{
    cr.MapSFTankerBicycleId = ZERO_IDENT;
    Mob::_Death(cr, fromCrit, killer);
}

void _TankerShowCritter1(Critter cr, Critter player)
{
    if (!player.IsOwnedByPlayer()) {
        return;
    }
    if (player.Id == cr.MapSFTankerBicycleId && IsCleanMan(player)) {
        return;
    }

    Mob::_ShowPlayer(cr, player);
}

void _TankerDead(Critter cr, Critter killer)
{
    Mob::_MyDeath(cr, killer);
    if (valid(killer) && killer.IsOwnedByPlayer() && killer.SFRonKillBeasts == 1) {
        killer.SFRonKillBeasts = 2;
    }

    Map map = cr.GetMap();
    if (!valid(map)) {
        return;
    }

    // Остались живые мобы? TODO: сделать фильтр по бодитайпам нужным.
    Critter[] players = map.GetCritters(CritterFindType::AlivePlayers);
    for (uint i = 0; i < players.length(); i++) {
        Critter player = players[i];
        if (player.SFRonKillBeasts == 2) {
            player.SFRonKillBeasts = 3;
        }
    }
}

void _TankerIdle(Critter cr)
{
    if (!cr.IsAlive()) {
        return;
    }

    if (cr.MapSFTankerBicycleId != ZERO_IDENT) {
        // Одновременно на танкере может быть только один чистюля
        Critter player = Game.GetCritter(cr.MapSFTankerBicycleId);
        if (valid(player)) {
            // Проверка, что персонаж никого из своих не убил
            if (player.IsAlive() && IsCleanMan(player)) {
                if (cr.IsSee(player) && Game.GetDistance(cr, player) < 8) {
                    Map map = cr.GetMap();
                    if (valid(map)) {
                        uint16 hX = player.HexX;
                        uint16 hY = player.HexY;
                        if (Caravan::GetFreeHex(map, 2, hX, hY)) {
                            NpcPlanes::AddWalkPlane(cr, 0, hX, hY, 6, false, 0);
                        }
                    }
                }
                return; // Запоминание чистюли не сбито
            }
        }
    }
    cr.MapSFTankerBicycleId = ZERO_IDENT; // Либо чистюля ушел, либо что-то еще, сбиваем запоминание
    Mob::_Idle(cr);
}

void _TankerInCritter(Map map, Critter cr)
{
    if (!cr.IsOwnedByPlayer()) {
        return;
    }
    if (!IsCleanMan(cr)) {
        return;
    }

    Critter[] critters = map.GetCritters(CritterFindType::Npc);
    for (uint i = 0; i < critters.length(); i++) {
        Critter mob = critters[i];
        mob.MapSFTankerBicycleId = cr.Id;
    }
}

// Проверка - персонаж не подлежит атаке.
bool IsCleanMan(Critter player)
{
    if (!player.IsOwnedByPlayer()) {
        return false;
    }

    uint[] kills = player.Kills.clone();
    return player.Level > 10 && kills[BodyTypes::Men] == 0 && kills[BodyTypes::Women] == 0 && kills[BodyTypes::Floater] == 0 &&
           kills[BodyTypes::Centaur] == 0 && kills[BodyTypes::Alien] == 0;
}

// ДИАЛОГ: Динамическая награда, зависит от уровня игрока
void r_GrantPlayer(Critter player, Critter npc)
{
    uint lvl = player.Level;
    uint koef = lvl % 10 + 1;
    player.Experience += (koef * 100) * player.Level; // 1 ур = 100, 50 ур = 30 000
}

// Квестовые мертвые панки
void _DeadsInit(Critter cr, bool firstTime)
{
    if (!cr.IsDead()) {
        CritterState::ToDead(cr, CritterActionAnim::DeadFront, null);
    }
    cr.ReplicationTime = -1;
    cr.OnSomeCritterUseSkill.Subscribe(_SmthUseSkill);
}

void _SmthUseSkill(Critter cr, Critter fromCr, CritterProperty skill, Critter onCritter, Item onItem, StaticItem onScenery)
{
    if (fromCr.IsNpc() || skill != CritterProperty::SkillScience || not valid(onCritter) || onCritter.Id != cr.Id) {
        return;
    }

    if (fromCr.SFRonFindbodies > 0 && fromCr.SFRonFindbodies < 5) {
        auto npcStory = cr.NpcStory.clone();
        if (!npcStory.get(fromCr.Id, false)) {
            fromCr.SFRonFindbodies += 1;
            npcStory[fromCr.Id] = true;
            cr.NpcStory = npcStory;

            if (fromCr.SFTankerCentaurNoticed == 0 && Game.Random(1, 150) < fromCr.SkillScience) {
                fromCr.SFTankerCentaurNoticed = 1;
            }
            if (fromCr.SFTankerFloaterNoticed == 0 && Game.Random(1, 150) < fromCr.SkillDoctor) {
                fromCr.SFTankerFloaterNoticed = 1;
            }
        }
    }
}
