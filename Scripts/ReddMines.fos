// FOS Server
// Author: rifleman17
// Работы на шахтах Реддинга

///@ Property Critter PrivateServer uint8 ReddMineNuggets Max = 20

#define NUGGET_COST       (10)
#define XP_COST           (40)
#define STR_REMOVE_NUGGET (5420)
#define ENTRY_MINES_ENTRANCE(HASHI(1))
#define ENTRY_MINES_EXIT (HASHI(77))

ident IdHiddenCont;

void _HiddenContainerInit(Item item, bool firstTime)
{
    item.IsHidden = true;
    IdHiddenCont = item.Id;
}

Item GetHiddenContainer()
{
    return Game.GetItem(IdHiddenCont);
}

bool TransferItems(Critter player, bool toContainer)
{
    Item cont = GetHiddenContainer();
    if (!valid(cont)) {
        return false;
    }

    if (toContainer) {
        Item[] items = player.GetItems();
        ItemMovement::MoveItems(items, cont, ContainerItemStack(player.Id.value));
    }
    else {
        Item[] items = cont.GetItems(ContainerItemStack(player.Id.value));
        ItemMovement::MoveItems(items, player);
    }
    return true;
}

void ClearPlayerItems(Critter player)
{
    Item[] items = player.GetItems();
    Game.DestroyItems(items);
}

void r_SendPlayerToMines(Critter player, Critter npc)
{
    if (!TransferItems(player, true)) {
        return;
    }
    Map map = Game.GetMap(Content::Map::redding_mine);
    if (!valid(map)) {
        return;
    }
    if (!Obsolete::CritterTransitToMapEntry(player, map.Id, ENTRY_MINES_ENTRANCE)) {
        return;
    }
    player.AddItem(Content::Item::sledgehammer, 1);
}

void r_SendPlayerFromMines(Critter player, Critter npc)
{
    ClearPlayerItems(player);
    Map map = Game.GetMap(Content::Map::redding_miners);
    if (!valid(map)) {
        return;
    }
    Obsolete::CritterTransitToMapEntry(player, map.Id, ENTRY_MINES_EXIT);
}

void r_PayPlayer(Critter player, Critter npc)
{
    TransferItems(player, false);
    int money = player.ReddMineNuggets;
    player.ReddMineNuggets = 0;
    if (money > 0) {
        player.AddItem(Content::Item::kokoweef_mine_scrip, money * NUGGET_COST);
        player.Experience += money * XP_COST;
    }
}
// Добыча золота
// есть таймаут на вход - 3 игровых суток
// выход разрешают, если игрок собрал минимум 15 самородков
// за каждый самородок игрок получает x марок шахты
// марки можно менять на деньги у мужика в казино
bool s_CountNuggets(Critter player, StaticItem sc, Item item, int skill)
{
    if (valid(item)) {
        hstring pid = item.ProtoId;
        if (pid == Content::Item::gold_nugget) {
            if (player.ReddMineNuggets < 20) // Max ) TODO
            {
                player.ReddMineNuggets += 1;
                player.SayMsg(SAY_NETMSG,
                              TextPackName::Text,
                              STR_REMOVE_NUGGET,
                              "$num " + player.ReddMineNuggets); // Вы бережно опускаете один из золотых самородков в вагонетку. Всего добыто золота: @lex num@.
            }
        }
        if (pid == Content::Item::gold_nugget || pid == Content::Item::rock) {
            Game.DestroyItem(item, 1);
        }
    }
    return true;
}

// Счетчик оставшихся
void dlg_CountNuggets(Critter player, Critter barman, string& lexems)
{
    if (!IS_DIALOG_GENERATED(lexems)) {
        return;
    }
    lexems = "$nuggets" + (15 - player.ReddMineNuggets);
}
